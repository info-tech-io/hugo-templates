{
  "numFailedTestSuites": 8,
  "numFailedTests": 55,
  "numPassedTestSuites": 0,
  "numPassedTests": 83,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 8,
  "numTotalTests": 138,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1758397745493,
  "success": false,
  "testResults": [
    {
      "leaks": false,
      "numFailingTests": 5,
      "numPassingTests": 14,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1758397751212,
        "runtime": 5592,
        "slow": true,
        "start": 1758397745620
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/root/info-tech-io/hugo-templates/tests/unit/cli.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "CLI Components",
            "build.sh script"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Components build.sh script should exist and be executable",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should exist and be executable"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "build.sh script"
          ],
          "duration": 52,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Components build.sh script should show help when called with --help",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should show help when called with --help"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "build.sh script"
          ],
          "duration": 83,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Components build.sh script should validate parameters correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate parameters correctly"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "build.sh script"
          ],
          "duration": 40,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: /root/info-tech-io/hugo-templates/scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    /root/info-tech-io/hugo-templates/scripts/build.sh\n\n    # Build with minimal template\n    /root/info-tech-io/hugo-templates/scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    /root/info-tech-io/hugo-templates/scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    /root/info-tech-io/hugo-templates/scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    /root/info-tech-io/hugo-templates/scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    /root/info-tech-io/hugo-templates/scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2029727,
              "stdout": "\nUsage: /root/info-tech-io/hugo-templates/scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    /root/info-tech-io/hugo-templates/scripts/build.sh\n\n    # Build with minimal template\n    /root/info-tech-io/hugo-templates/scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    /root/info-tech-io/hugo-templates/scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    /root/info-tech-io/hugo-templates/scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    /root/info-tech-io/hugo-templates/scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    /root/info-tech-io/hugo-templates/scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: /root/info-tech-io/hugo-templates/scripts/build.sh --template=minimal --validate-only --verbose\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/unit/cli.test.js:52:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Components build.sh script should accept valid template combinations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should accept valid template combinations"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "factory.js Node.js wrapper"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Components factory.js Node.js wrapper should exist and be executable",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should exist and be executable"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "factory.js Node.js wrapper"
          ],
          "duration": 95,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Components factory.js Node.js wrapper should show version information",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show version information"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "factory.js Node.js wrapper"
          ],
          "duration": 120,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Options:\"\nReceived string:    \"Usage: /root/info-tech-io/hugo-templates/scripts/build.sh [OPTIONS]·\nHugo Template Factory Framework - Build Script·\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message·\nEXAMPLES:\n    # Basic build with default template\n    /root/info-tech-io/hugo-templates/scripts/build.sh·\n    # Build with minimal template\n    /root/info-tech-io/hugo-templates/scripts/build.sh --template=minimal --theme=compose·\n    # Build with specific components\n    /root/info-tech-io/hugo-templates/scripts/build.sh --template=default --components=quiz-engine,analytics·\n    # Build with custom content directory\n    /root/info-tech-io/hugo-templates/scripts/build.sh --content=/path/to/content --output=/path/to/output·\n    # Production build with minification\n    /root/info-tech-io/hugo-templates/scripts/build.sh --environment=production --minify --base-url=https://example.com·\n    # Validate configuration only\n    /root/info-tech-io/hugo-templates/scripts/build.sh --validate-only --verbose·\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446·\n\"",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Options:\"\nReceived string:    \"Usage: /root/info-tech-io/hugo-templates/scripts/build.sh [OPTIONS]·\nHugo Template Factory Framework - Build Script·\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message·\nEXAMPLES:\n    # Basic build with default template\n    /root/info-tech-io/hugo-templates/scripts/build.sh·\n    # Build with minimal template\n    /root/info-tech-io/hugo-templates/scripts/build.sh --template=minimal --theme=compose·\n    # Build with specific components\n    /root/info-tech-io/hugo-templates/scripts/build.sh --template=default --components=quiz-engine,analytics·\n    # Build with custom content directory\n    /root/info-tech-io/hugo-templates/scripts/build.sh --content=/path/to/content --output=/path/to/output·\n    # Production build with minification\n    /root/info-tech-io/hugo-templates/scripts/build.sh --environment=production --minify --base-url=https://example.com·\n    # Validate configuration only\n    /root/info-tech-io/hugo-templates/scripts/build.sh --validate-only --verbose·\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446·\n\"\n    at Object.toContain (/root/info-tech-io/hugo-templates/tests/unit/cli.test.js:84:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Components factory.js Node.js wrapper should handle help flag correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle help flag correctly"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "validate.js utility"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Components validate.js utility should exist and be executable",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should exist and be executable"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "validate.js utility"
          ],
          "duration": 575,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "🔍 Hugo Template Factory - Advanced Validation\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n📋 Validating project structure...\n📋 Validating template: default...\n\n📊 Validation Results:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n✅ Information (21):\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n   ℹ️  Template 'minimal' has required file: hugo.toml\n   ℹ️  Template 'minimal' has required file: components.yml\n   ℹ️  Template 'minimal' has recommended directory: content\n   ℹ️  Template 'minimal' has recommended directory: static\n   ℹ️  Template 'minimal' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758368978446' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758368978446' has required file: components.yml\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: content\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: static\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: archetypes\n   ℹ️  Found 5 templates: academic, default, enterprise, minimal, test-template-1758368978446\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n\n⚠️  Warnings (24):\n   ⚠️  Template 'academic' missing components.yml (recommended)\n   ⚠️  Template 'academic' missing recommended directory: content\n   ⚠️  Template 'academic' missing recommended directory: static\n   ⚠️  Template 'academic' missing recommended directory: archetypes\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Template 'enterprise' missing components.yml (recommended)\n   ⚠️  Template 'enterprise' missing recommended directory: content\n   ⚠️  Template 'enterprise' missing recommended directory: static\n   ⚠️  Template 'enterprise' missing recommended directory: archetypes\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n\n❌ Errors (11):\n   ❌ Template 'academic' missing required file: hugo.toml\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'name'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'version'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'description'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'status'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Template 'enterprise' missing required file: hugo.toml\n\n💥 Overall validation: FAILED\n   Found 11 errors that must be fixed\n",
                "❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n"
              ],
              "pid": 2029775,
              "stdout": "🔍 Hugo Template Factory - Advanced Validation\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n📋 Validating project structure...\n📋 Validating template: default...\n\n📊 Validation Results:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n✅ Information (21):\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n   ℹ️  Template 'minimal' has required file: hugo.toml\n   ℹ️  Template 'minimal' has required file: components.yml\n   ℹ️  Template 'minimal' has recommended directory: content\n   ℹ️  Template 'minimal' has recommended directory: static\n   ℹ️  Template 'minimal' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758368978446' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758368978446' has required file: components.yml\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: content\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: static\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: archetypes\n   ℹ️  Found 5 templates: academic, default, enterprise, minimal, test-template-1758368978446\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n\n⚠️  Warnings (24):\n   ⚠️  Template 'academic' missing components.yml (recommended)\n   ⚠️  Template 'academic' missing recommended directory: content\n   ⚠️  Template 'academic' missing recommended directory: static\n   ⚠️  Template 'academic' missing recommended directory: archetypes\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Template 'enterprise' missing components.yml (recommended)\n   ⚠️  Template 'enterprise' missing recommended directory: content\n   ⚠️  Template 'enterprise' missing recommended directory: static\n   ⚠️  Template 'enterprise' missing recommended directory: archetypes\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n\n❌ Errors (11):\n   ❌ Template 'academic' missing required file: hugo.toml\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'name'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'version'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'description'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'status'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Template 'enterprise' missing required file: hugo.toml\n\n💥 Overall validation: FAILED\n   Found 11 errors that must be fixed\n",
              "stderr": "❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: node /root/info-tech-io/hugo-templates/scripts/validate.js --template default\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/unit/cli.test.js:96:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Components validate.js utility should validate existing templates",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should validate existing templates"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "validate.js utility"
          ],
          "duration": 610,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Components validate.js utility should detect invalid template structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should detect invalid template structure"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "list.js utility"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Components list.js utility should exist and be executable",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should exist and be executable"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "list.js utility"
          ],
          "duration": 278,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Components list.js utility should list available templates",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should list available templates"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "list.js utility"
          ],
          "duration": 265,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Components list.js utility should list available themes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should list available themes"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "list.js utility"
          ],
          "duration": 292,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Components list.js utility should support JSON output format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should support JSON output format"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "generate.js utility"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Components generate.js utility should exist and be executable",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should exist and be executable"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "generate.js utility"
          ],
          "duration": 758,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Components generate.js utility should show help for template generation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should show help for template generation"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "diagnostic.js system"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Components diagnostic.js system should exist and be executable",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should exist and be executable"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "diagnostic.js system"
          ],
          "duration": 1144,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toContain(expected) // indexOf\n\nExpected substring: \"System Diagnostics\"\nReceived string:    \"[19:49:09] 🔍 Hugo Template Factory - System Diagnostic\n[19:49:09] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:09]·\n[19:49:09] ℹ️  Checking system information...\n[19:49:09] ✅ System: linux x64 (6.1.0-34-amd64)\n[19:49:09] ✅ Memory: 0.70GB used / 0.93GB total\n[19:49:09] ✅ CPUs: 1\n[19:49:09] ℹ️  Checking environment configuration...\n[19:49:09] ✅ Node environment: test\n[19:49:09] ✅ Current directory: /root/info-tech-io/hugo-templates\n[19:49:09] ✅ PATH entries: 11\n[19:49:09] ℹ️  Checking required dependencies...\n[19:49:09] ✅ ✓ node: v23.11.1\n[19:49:09] ✅ ✓ npm: 11.4.2\n[19:49:10] ✅ ✓ hugo: hugo v0.148.0-c0d9bebacc6bf42a91a74d8bb0de7bc775c8e573+extended linux/amd64 BuildDate=2025-07-08T13:34:49Z VendorInfo=gohugoio\n[19:49:10] ✅ ✓ git: git version 2.39.5\n[19:49:10] ✅ ✓ bash: GNU bash, version 5.2.15(1)-release (x86_64-pc-linux-gnu)\n[19:49:10] ℹ️  - yarn: not available (optional)\n[19:49:10] ✅ Package: hugo-templates@0.1.0-alpha.1\n[19:49:10] ✅ Dependencies: 7 runtime, 4 dev\n[19:49:10] ℹ️  Checking project structure...\n[19:49:10] ✅ Directory templates/: 5 items\n[19:49:10] ✅ Directory themes/: 1 items\n[19:49:10] ✅ Directory components/: 1 items\n[19:49:10] ✅ Directory scripts/: 9 items\n[19:49:10] ✅ Directory schemas/: 5 items\n[19:49:10] ✅ Directory docs/: 0 items\n[19:49:10] ✅ File package.json: 1875 bytes\n[19:49:10] ✅ File collection.json: 1077 bytes\n[19:49:10] ✅ File .gitignore: 1306 bytes\n[19:49:10] ✅ File README.md: 2624 bytes\n[19:49:10] ⚠️  Git: 7 files with changes\n[19:49:10] ℹ️  Checking file permissions...\n[19:49:10] ✅ Script build.sh: executable\n[19:49:10] ✅ Script factory.js: executable\n[19:49:10] ✅ Script validate.js: executable\n[19:49:10] ✅ Script list.js: executable\n[19:49:10] ✅ Script generate.js: executable\n[19:49:10] ✅ Directory templates/: read/write access\n[19:49:10] ✅ Directory themes/: read/write access\n[19:49:10] ✅ Directory components/: read/write access\n[19:49:10] ℹ️  Running performance checks...\n[19:49:10] ✅ I/O Performance: 0.48ms for 100KB\n[19:49:10] ✅ Script execution: 257.18ms\n[19:49:10]·\n[19:49:10] 📋 Diagnostic Summary\n[19:49:10] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:10] ⚠️  WARNING: Uncommitted changes in git repository\n[19:49:10]·\n[19:49:10] ⚠️  ⚠️  1 warnings found - System is mostly ready\n[19:49:10]·\n📊 Performance Report\n[19:49:10] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:10]·\n⏱️  Timers:\n[19:49:10]    diagnostic: 1015.78ms\n[19:49:10]    file_io: 0.48ms\n[19:49:10]    script_exec: 257.18ms\n[19:49:10]·\n💾 Memory Usage:\n[19:49:10]    start: 5.32MB\n[19:49:10]    end: 5.62MB\n\"",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"System Diagnostics\"\nReceived string:    \"[19:49:09] 🔍 Hugo Template Factory - System Diagnostic\n[19:49:09] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:09]·\n[19:49:09] ℹ️  Checking system information...\n[19:49:09] ✅ System: linux x64 (6.1.0-34-amd64)\n[19:49:09] ✅ Memory: 0.70GB used / 0.93GB total\n[19:49:09] ✅ CPUs: 1\n[19:49:09] ℹ️  Checking environment configuration...\n[19:49:09] ✅ Node environment: test\n[19:49:09] ✅ Current directory: /root/info-tech-io/hugo-templates\n[19:49:09] ✅ PATH entries: 11\n[19:49:09] ℹ️  Checking required dependencies...\n[19:49:09] ✅ ✓ node: v23.11.1\n[19:49:09] ✅ ✓ npm: 11.4.2\n[19:49:10] ✅ ✓ hugo: hugo v0.148.0-c0d9bebacc6bf42a91a74d8bb0de7bc775c8e573+extended linux/amd64 BuildDate=2025-07-08T13:34:49Z VendorInfo=gohugoio\n[19:49:10] ✅ ✓ git: git version 2.39.5\n[19:49:10] ✅ ✓ bash: GNU bash, version 5.2.15(1)-release (x86_64-pc-linux-gnu)\n[19:49:10] ℹ️  - yarn: not available (optional)\n[19:49:10] ✅ Package: hugo-templates@0.1.0-alpha.1\n[19:49:10] ✅ Dependencies: 7 runtime, 4 dev\n[19:49:10] ℹ️  Checking project structure...\n[19:49:10] ✅ Directory templates/: 5 items\n[19:49:10] ✅ Directory themes/: 1 items\n[19:49:10] ✅ Directory components/: 1 items\n[19:49:10] ✅ Directory scripts/: 9 items\n[19:49:10] ✅ Directory schemas/: 5 items\n[19:49:10] ✅ Directory docs/: 0 items\n[19:49:10] ✅ File package.json: 1875 bytes\n[19:49:10] ✅ File collection.json: 1077 bytes\n[19:49:10] ✅ File .gitignore: 1306 bytes\n[19:49:10] ✅ File README.md: 2624 bytes\n[19:49:10] ⚠️  Git: 7 files with changes\n[19:49:10] ℹ️  Checking file permissions...\n[19:49:10] ✅ Script build.sh: executable\n[19:49:10] ✅ Script factory.js: executable\n[19:49:10] ✅ Script validate.js: executable\n[19:49:10] ✅ Script list.js: executable\n[19:49:10] ✅ Script generate.js: executable\n[19:49:10] ✅ Directory templates/: read/write access\n[19:49:10] ✅ Directory themes/: read/write access\n[19:49:10] ✅ Directory components/: read/write access\n[19:49:10] ℹ️  Running performance checks...\n[19:49:10] ✅ I/O Performance: 0.48ms for 100KB\n[19:49:10] ✅ Script execution: 257.18ms\n[19:49:10]·\n[19:49:10] 📋 Diagnostic Summary\n[19:49:10] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:10] ⚠️  WARNING: Uncommitted changes in git repository\n[19:49:10]·\n[19:49:10] ⚠️  ⚠️  1 warnings found - System is mostly ready\n[19:49:10]·\n📊 Performance Report\n[19:49:10] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:10]·\n⏱️  Timers:\n[19:49:10]    diagnostic: 1015.78ms\n[19:49:10]    file_io: 0.48ms\n[19:49:10]    script_exec: 257.18ms\n[19:49:10]·\n💾 Memory Usage:\n[19:49:10]    start: 5.32MB\n[19:49:10]    end: 5.62MB\n\"\n    at Object.toContain (/root/info-tech-io/hugo-templates/tests/unit/cli.test.js:183:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Components diagnostic.js system should run system diagnostics",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should run system diagnostics"
        },
        {
          "ancestorTitles": [
            "CLI Components",
            "diagnostic.js system"
          ],
          "duration": 690,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Node.js\"\nReceived string:    \"[19:49:10] 🔍 Hugo Template Factory - System Diagnostic\n[19:49:10] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:10]·\n[19:49:10] ℹ️  Checking system information...\n[19:49:10] ✅ System: linux x64 (6.1.0-34-amd64)\n[19:49:10] ✅ Memory: 0.69GB used / 0.93GB total\n[19:49:10] ✅ CPUs: 1\n[19:49:10] ℹ️  Checking environment configuration...\n[19:49:10] ✅ Node environment: test\n[19:49:10] ✅ Current directory: /root/info-tech-io/hugo-templates\n[19:49:10] ✅ PATH entries: 11\n[19:49:10] ℹ️  Checking required dependencies...\n[19:49:10] ✅ ✓ node: v23.11.1\n[19:49:10] ✅ ✓ npm: 11.4.2\n[19:49:10] ✅ ✓ hugo: hugo v0.148.0-c0d9bebacc6bf42a91a74d8bb0de7bc775c8e573+extended linux/amd64 BuildDate=2025-07-08T13:34:49Z VendorInfo=gohugoio\n[19:49:10] ✅ ✓ git: git version 2.39.5\n[19:49:10] ✅ ✓ bash: GNU bash, version 5.2.15(1)-release (x86_64-pc-linux-gnu)\n[19:49:10] ℹ️  - yarn: not available (optional)\n[19:49:10] ✅ Package: hugo-templates@0.1.0-alpha.1\n[19:49:10] ✅ Dependencies: 7 runtime, 4 dev\n[19:49:10] ℹ️  Checking project structure...\n[19:49:10] ✅ Directory templates/: 5 items\n[19:49:10] ✅ Directory themes/: 1 items\n[19:49:10] ✅ Directory components/: 1 items\n[19:49:10] ✅ Directory scripts/: 9 items\n[19:49:10] ✅ Directory schemas/: 5 items\n[19:49:10] ✅ Directory docs/: 0 items\n[19:49:10] ✅ File package.json: 1875 bytes\n[19:49:10] ✅ File collection.json: 1077 bytes\n[19:49:10] ✅ File .gitignore: 1306 bytes\n[19:49:10] ✅ File README.md: 2624 bytes\n[19:49:10] ⚠️  Git: 7 files with changes\n[19:49:10] ℹ️  Checking file permissions...\n[19:49:10] ✅ Script build.sh: executable\n[19:49:10] ✅ Script factory.js: executable\n[19:49:10] ✅ Script validate.js: executable\n[19:49:10] ✅ Script list.js: executable\n[19:49:10] ✅ Script generate.js: executable\n[19:49:10] ✅ Directory templates/: read/write access\n[19:49:10] ✅ Directory themes/: read/write access\n[19:49:10] ✅ Directory components/: read/write access\n[19:49:10] ℹ️  Running performance checks...\n[19:49:10] ✅ I/O Performance: 0.50ms for 100KB\n[19:49:11] ✅ Script execution: 226.33ms\n[19:49:11]·\n[19:49:11] 📋 Diagnostic Summary\n[19:49:11] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:11] ⚠️  WARNING: Uncommitted changes in git repository\n[19:49:11]·\n[19:49:11] ⚠️  ⚠️  1 warnings found - System is mostly ready\n[19:49:11]·\n📊 Performance Report\n[19:49:11] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:11]·\n⏱️  Timers:\n[19:49:11]    diagnostic: 549.67ms\n[19:49:11]    file_io: 0.50ms\n[19:49:11]    script_exec: 226.33ms\n[19:49:11]·\n💾 Memory Usage:\n[19:49:11]    start: 5.32MB\n[19:49:11]    end: 5.62MB\n\"",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Node.js\"\nReceived string:    \"[19:49:10] 🔍 Hugo Template Factory - System Diagnostic\n[19:49:10] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:10]·\n[19:49:10] ℹ️  Checking system information...\n[19:49:10] ✅ System: linux x64 (6.1.0-34-amd64)\n[19:49:10] ✅ Memory: 0.69GB used / 0.93GB total\n[19:49:10] ✅ CPUs: 1\n[19:49:10] ℹ️  Checking environment configuration...\n[19:49:10] ✅ Node environment: test\n[19:49:10] ✅ Current directory: /root/info-tech-io/hugo-templates\n[19:49:10] ✅ PATH entries: 11\n[19:49:10] ℹ️  Checking required dependencies...\n[19:49:10] ✅ ✓ node: v23.11.1\n[19:49:10] ✅ ✓ npm: 11.4.2\n[19:49:10] ✅ ✓ hugo: hugo v0.148.0-c0d9bebacc6bf42a91a74d8bb0de7bc775c8e573+extended linux/amd64 BuildDate=2025-07-08T13:34:49Z VendorInfo=gohugoio\n[19:49:10] ✅ ✓ git: git version 2.39.5\n[19:49:10] ✅ ✓ bash: GNU bash, version 5.2.15(1)-release (x86_64-pc-linux-gnu)\n[19:49:10] ℹ️  - yarn: not available (optional)\n[19:49:10] ✅ Package: hugo-templates@0.1.0-alpha.1\n[19:49:10] ✅ Dependencies: 7 runtime, 4 dev\n[19:49:10] ℹ️  Checking project structure...\n[19:49:10] ✅ Directory templates/: 5 items\n[19:49:10] ✅ Directory themes/: 1 items\n[19:49:10] ✅ Directory components/: 1 items\n[19:49:10] ✅ Directory scripts/: 9 items\n[19:49:10] ✅ Directory schemas/: 5 items\n[19:49:10] ✅ Directory docs/: 0 items\n[19:49:10] ✅ File package.json: 1875 bytes\n[19:49:10] ✅ File collection.json: 1077 bytes\n[19:49:10] ✅ File .gitignore: 1306 bytes\n[19:49:10] ✅ File README.md: 2624 bytes\n[19:49:10] ⚠️  Git: 7 files with changes\n[19:49:10] ℹ️  Checking file permissions...\n[19:49:10] ✅ Script build.sh: executable\n[19:49:10] ✅ Script factory.js: executable\n[19:49:10] ✅ Script validate.js: executable\n[19:49:10] ✅ Script list.js: executable\n[19:49:10] ✅ Script generate.js: executable\n[19:49:10] ✅ Directory templates/: read/write access\n[19:49:10] ✅ Directory themes/: read/write access\n[19:49:10] ✅ Directory components/: read/write access\n[19:49:10] ℹ️  Running performance checks...\n[19:49:10] ✅ I/O Performance: 0.50ms for 100KB\n[19:49:11] ✅ Script execution: 226.33ms\n[19:49:11]·\n[19:49:11] 📋 Diagnostic Summary\n[19:49:11] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:11] ⚠️  WARNING: Uncommitted changes in git repository\n[19:49:11]·\n[19:49:11] ⚠️  ⚠️  1 warnings found - System is mostly ready\n[19:49:11]·\n📊 Performance Report\n[19:49:11] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:11]·\n⏱️  Timers:\n[19:49:11]    diagnostic: 549.67ms\n[19:49:11]    file_io: 0.50ms\n[19:49:11]    script_exec: 226.33ms\n[19:49:11]·\n💾 Memory Usage:\n[19:49:11]    start: 5.32MB\n[19:49:11]    end: 5.62MB\n\"\n    at Object.toContain (/root/info-tech-io/hugo-templates/tests/unit/cli.test.js:192:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Components diagnostic.js system should check required dependencies",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should check required dependencies"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "unit"
      },
      "failureMessage": "  ● CLI Components › build.sh script › should accept valid template combinations\n\n    Command failed: /root/info-tech-io/hugo-templates/scripts/build.sh --template=minimal --validate-only --verbose\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      50 |         test('should accept valid template combinations', () => {\n      51 |             // Test minimal template validation\n    > 52 |             const output = execSync(`${buildScript} --template=minimal --validate-only --verbose`, {\n         |                            ^\n      53 |                 encoding: 'utf8',\n      54 |                 cwd: testDir,\n      55 |                 timeout: 10000\n\n      at Object.execSync (tests/unit/cli.test.js:52:28)\n\n  ● CLI Components › factory.js Node.js wrapper › should handle help flag correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Options:\"\n    Received string:    \"Usage: /root/info-tech-io/hugo-templates/scripts/build.sh [OPTIONS]·\n    Hugo Template Factory Framework - Build Script·\n    OPTIONS:\n        -t, --template <name>       Template to use (default: default)\n        --theme <name>              Hugo theme to apply (default: compose)\n        -c, --components <list>     Comma-separated list of components to include\n        -o, --output <path>         Output directory (default: ./site)\n        --content <path>            Path to content directory\n        --config <path>             Path to custom configuration file\n        --minify                    Enable Hugo minification\n        --draft                     Include draft content\n        --future                    Include future content\n        --base-url <url>            Base URL for the site\n        -e, --environment <env>     Hugo environment (default: development)\n        -v, --verbose               Enable verbose output\n        -q, --quiet                 Suppress non-error output\n        --log-level <level>         Log level (debug|info|warn|error)\n        --validate-only             Only validate configuration, don't build\n        -h, --help                  Show this help message·\n    EXAMPLES:\n        # Basic build with default template\n        /root/info-tech-io/hugo-templates/scripts/build.sh·\n        # Build with minimal template\n        /root/info-tech-io/hugo-templates/scripts/build.sh --template=minimal --theme=compose·\n        # Build with specific components\n        /root/info-tech-io/hugo-templates/scripts/build.sh --template=default --components=quiz-engine,analytics·\n        # Build with custom content directory\n        /root/info-tech-io/hugo-templates/scripts/build.sh --content=/path/to/content --output=/path/to/output·\n        # Production build with minification\n        /root/info-tech-io/hugo-templates/scripts/build.sh --environment=production --minify --base-url=https://example.com·\n        # Validate configuration only\n        /root/info-tech-io/hugo-templates/scripts/build.sh --validate-only --verbose·\n    AVAILABLE TEMPLATES:\n        - academic\n        - default\n        - enterprise\n        - minimal\n        - test-template-1758368978446·\n    \"\n\n      82 |             });\n      83 |             expect(output).toContain('Usage:');\n    > 84 |             expect(output).toContain('Options:');\n         |                            ^\n      85 |         });\n      86 |     });\n      87 |\n\n      at Object.toContain (tests/unit/cli.test.js:84:28)\n\n  ● CLI Components › validate.js utility › should validate existing templates\n\n    Command failed: node /root/info-tech-io/hugo-templates/scripts/validate.js --template default\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n\n      94 |\n      95 |         test('should validate existing templates', () => {\n    > 96 |             const output = execSync(`node ${validateScript} --template default`, {\n         |                            ^\n      97 |                 encoding: 'utf8',\n      98 |                 cwd: testDir,\n      99 |                 timeout: 10000\n\n      at Object.execSync (tests/unit/cli.test.js:96:28)\n\n  ● CLI Components › diagnostic.js system › should run system diagnostics\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"System Diagnostics\"\n    Received string:    \"[19:49:09] 🔍 Hugo Template Factory - System Diagnostic\n    [19:49:09] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n    [19:49:09]·\n    [19:49:09] ℹ️  Checking system information...\n    [19:49:09] ✅ System: linux x64 (6.1.0-34-amd64)\n    [19:49:09] ✅ Memory: 0.70GB used / 0.93GB total\n    [19:49:09] ✅ CPUs: 1\n    [19:49:09] ℹ️  Checking environment configuration...\n    [19:49:09] ✅ Node environment: test\n    [19:49:09] ✅ Current directory: /root/info-tech-io/hugo-templates\n    [19:49:09] ✅ PATH entries: 11\n    [19:49:09] ℹ️  Checking required dependencies...\n    [19:49:09] ✅ ✓ node: v23.11.1\n    [19:49:09] ✅ ✓ npm: 11.4.2\n    [19:49:10] ✅ ✓ hugo: hugo v0.148.0-c0d9bebacc6bf42a91a74d8bb0de7bc775c8e573+extended linux/amd64 BuildDate=2025-07-08T13:34:49Z VendorInfo=gohugoio\n    [19:49:10] ✅ ✓ git: git version 2.39.5\n    [19:49:10] ✅ ✓ bash: GNU bash, version 5.2.15(1)-release (x86_64-pc-linux-gnu)\n    [19:49:10] ℹ️  - yarn: not available (optional)\n    [19:49:10] ✅ Package: hugo-templates@0.1.0-alpha.1\n    [19:49:10] ✅ Dependencies: 7 runtime, 4 dev\n    [19:49:10] ℹ️  Checking project structure...\n    [19:49:10] ✅ Directory templates/: 5 items\n    [19:49:10] ✅ Directory themes/: 1 items\n    [19:49:10] ✅ Directory components/: 1 items\n    [19:49:10] ✅ Directory scripts/: 9 items\n    [19:49:10] ✅ Directory schemas/: 5 items\n    [19:49:10] ✅ Directory docs/: 0 items\n    [19:49:10] ✅ File package.json: 1875 bytes\n    [19:49:10] ✅ File collection.json: 1077 bytes\n    [19:49:10] ✅ File .gitignore: 1306 bytes\n    [19:49:10] ✅ File README.md: 2624 bytes\n    [19:49:10] ⚠️  Git: 7 files with changes\n    [19:49:10] ℹ️  Checking file permissions...\n    [19:49:10] ✅ Script build.sh: executable\n    [19:49:10] ✅ Script factory.js: executable\n    [19:49:10] ✅ Script validate.js: executable\n    [19:49:10] ✅ Script list.js: executable\n    [19:49:10] ✅ Script generate.js: executable\n    [19:49:10] ✅ Directory templates/: read/write access\n    [19:49:10] ✅ Directory themes/: read/write access\n    [19:49:10] ✅ Directory components/: read/write access\n    [19:49:10] ℹ️  Running performance checks...\n    [19:49:10] ✅ I/O Performance: 0.48ms for 100KB\n    [19:49:10] ✅ Script execution: 257.18ms\n    [19:49:10]·\n    [19:49:10] 📋 Diagnostic Summary\n    [19:49:10] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n    [19:49:10] ⚠️  WARNING: Uncommitted changes in git repository\n    [19:49:10]·\n    [19:49:10] ⚠️  ⚠️  1 warnings found - System is mostly ready\n    [19:49:10]·\n    📊 Performance Report\n    [19:49:10] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n    [19:49:10]·\n    ⏱️  Timers:\n    [19:49:10]    diagnostic: 1015.78ms\n    [19:49:10]    file_io: 0.48ms\n    [19:49:10]    script_exec: 257.18ms\n    [19:49:10]·\n    💾 Memory Usage:\n    [19:49:10]    start: 5.32MB\n    [19:49:10]    end: 5.62MB\n    \"\n\n      181 |                 timeout: 15000\n      182 |             });\n    > 183 |             expect(output).toContain('System Diagnostics');\n          |                            ^\n      184 |         });\n      185 |\n      186 |         test('should check required dependencies', () => {\n\n      at Object.toContain (tests/unit/cli.test.js:183:28)\n\n  ● CLI Components › diagnostic.js system › should check required dependencies\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Node.js\"\n    Received string:    \"[19:49:10] 🔍 Hugo Template Factory - System Diagnostic\n    [19:49:10] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n    [19:49:10]·\n    [19:49:10] ℹ️  Checking system information...\n    [19:49:10] ✅ System: linux x64 (6.1.0-34-amd64)\n    [19:49:10] ✅ Memory: 0.69GB used / 0.93GB total\n    [19:49:10] ✅ CPUs: 1\n    [19:49:10] ℹ️  Checking environment configuration...\n    [19:49:10] ✅ Node environment: test\n    [19:49:10] ✅ Current directory: /root/info-tech-io/hugo-templates\n    [19:49:10] ✅ PATH entries: 11\n    [19:49:10] ℹ️  Checking required dependencies...\n    [19:49:10] ✅ ✓ node: v23.11.1\n    [19:49:10] ✅ ✓ npm: 11.4.2\n    [19:49:10] ✅ ✓ hugo: hugo v0.148.0-c0d9bebacc6bf42a91a74d8bb0de7bc775c8e573+extended linux/amd64 BuildDate=2025-07-08T13:34:49Z VendorInfo=gohugoio\n    [19:49:10] ✅ ✓ git: git version 2.39.5\n    [19:49:10] ✅ ✓ bash: GNU bash, version 5.2.15(1)-release (x86_64-pc-linux-gnu)\n    [19:49:10] ℹ️  - yarn: not available (optional)\n    [19:49:10] ✅ Package: hugo-templates@0.1.0-alpha.1\n    [19:49:10] ✅ Dependencies: 7 runtime, 4 dev\n    [19:49:10] ℹ️  Checking project structure...\n    [19:49:10] ✅ Directory templates/: 5 items\n    [19:49:10] ✅ Directory themes/: 1 items\n    [19:49:10] ✅ Directory components/: 1 items\n    [19:49:10] ✅ Directory scripts/: 9 items\n    [19:49:10] ✅ Directory schemas/: 5 items\n    [19:49:10] ✅ Directory docs/: 0 items\n    [19:49:10] ✅ File package.json: 1875 bytes\n    [19:49:10] ✅ File collection.json: 1077 bytes\n    [19:49:10] ✅ File .gitignore: 1306 bytes\n    [19:49:10] ✅ File README.md: 2624 bytes\n    [19:49:10] ⚠️  Git: 7 files with changes\n    [19:49:10] ℹ️  Checking file permissions...\n    [19:49:10] ✅ Script build.sh: executable\n    [19:49:10] ✅ Script factory.js: executable\n    [19:49:10] ✅ Script validate.js: executable\n    [19:49:10] ✅ Script list.js: executable\n    [19:49:10] ✅ Script generate.js: executable\n    [19:49:10] ✅ Directory templates/: read/write access\n    [19:49:10] ✅ Directory themes/: read/write access\n    [19:49:10] ✅ Directory components/: read/write access\n    [19:49:10] ℹ️  Running performance checks...\n    [19:49:10] ✅ I/O Performance: 0.50ms for 100KB\n    [19:49:11] ✅ Script execution: 226.33ms\n    [19:49:11]·\n    [19:49:11] 📋 Diagnostic Summary\n    [19:49:11] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n    [19:49:11] ⚠️  WARNING: Uncommitted changes in git repository\n    [19:49:11]·\n    [19:49:11] ⚠️  ⚠️  1 warnings found - System is mostly ready\n    [19:49:11]·\n    📊 Performance Report\n    [19:49:11] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n    [19:49:11]·\n    ⏱️  Timers:\n    [19:49:11]    diagnostic: 549.67ms\n    [19:49:11]    file_io: 0.50ms\n    [19:49:11]    script_exec: 226.33ms\n    [19:49:11]·\n    💾 Memory Usage:\n    [19:49:11]    start: 5.32MB\n    [19:49:11]    end: 5.62MB\n    \"\n\n      190 |                 timeout: 15000\n      191 |             });\n    > 192 |             expect(output).toContain('Node.js') || expect(output).toContain('dependencies');\n          |                            ^\n      193 |         });\n      194 |     });\n      195 | });\n\n      at Object.toContain (tests/unit/cli.test.js:192:28)\n"
    },
    {
      "leaks": false,
      "numFailingTests": 5,
      "numPassingTests": 13,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1758397752599,
        "runtime": 1364,
        "slow": false,
        "start": 1758397751235
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/root/info-tech-io/hugo-templates/tests/unit/components.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Components System",
            "Components availability"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Components System Components availability should have components directory",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should have components directory"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Components availability"
          ],
          "duration": 27,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Components System Components availability should have quiz-engine component",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should have quiz-engine component"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Components availability"
          ],
          "duration": 323,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Components System Components availability should list components correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should list components correctly"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Quiz Engine component"
          ],
          "duration": 21,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Components System Quiz Engine component should have required files",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have required files"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Quiz Engine component"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Components System Quiz Engine component should have valid component configuration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should have valid component configuration"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Component integration"
          ],
          "duration": 37,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n\n",
                "\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n"
              ],
              "pid": 2029930,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=default --components=quiz-engine --validate-only\n\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/unit/components.test.js:81:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Components System Component integration should integrate with build system",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should integrate with build system"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Component integration"
          ],
          "duration": 179,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Components System Component integration should handle missing components gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing components gracefully"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Component integration"
          ],
          "duration": 64,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n\n",
                "\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n"
              ],
              "pid": 2029960,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=default --components=quiz-engine --validate-only --verbose\n\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/unit/components.test.js:103:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Components System Component integration should support multiple components",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should support multiple components"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Component parsing"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Components System Component parsing should parse components.yml correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should parse components.yml correctly"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Component parsing"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Components System Component parsing should validate component structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate component structure"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Git submodules integration"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Components System Git submodules integration should have .gitmodules file",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should have .gitmodules file"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Git submodules integration"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Components System Git submodules integration should validate submodule paths",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate submodule paths"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Component lifecycle"
          ],
          "duration": 24,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Components System Component lifecycle should handle component installation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle component installation"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Component lifecycle"
          ],
          "duration": 11,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": "testcases",
                "expected": "quiz-engine",
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: \"quiz-engine\"\nReceived: \"testcases\"",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"quiz-engine\"\nReceived: \"testcases\"\n    at toBe (/root/info-tech-io/hugo-templates/tests/unit/components.test.js:209:46)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/root/info-tech-io/hugo-templates/tests/unit/components.test.js:202:27)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Components System Component lifecycle should validate component dependencies",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should validate component dependencies"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Component build integration"
          ],
          "duration": 58,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2029990,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --components=quiz-engine --validate-only --verbose\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/unit/components.test.js:218:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Components System Component build integration should copy component files during build",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should copy component files during build"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Component build integration"
          ],
          "duration": 48,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toContain(expected) // indexOf\n\nExpected substring: \"duplicate\"\nReceived string:    \"Command failed: bash scripts/build.sh --template=default --components=quiz-engine,quiz-engine --validate-only\n\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\"",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"duplicate\"\nReceived string:    \"Command failed: bash scripts/build.sh --template=default --components=quiz-engine,quiz-engine --validate-only\n\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\"\n    at Object.toContain (/root/info-tech-io/hugo-templates/tests/unit/components.test.js:243:39)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Components System Component build integration should handle component conflicts gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle component conflicts gracefully"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Component API"
          ],
          "duration": 312,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Components System Component API should provide component information through CLI",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should provide component information through CLI"
        },
        {
          "ancestorTitles": [
            "Components System",
            "Component API"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Components System Component API should validate component metadata format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate component metadata format"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "unit"
      },
      "failureMessage": "  ● Components System › Component integration › should integrate with build system\n\n    Command failed: bash scripts/build.sh --template=default --components=quiz-engine --validate-only\n    \u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n      79 |     describe('Component integration', () => {\n      80 |         test('should integrate with build system', () => {\n    > 81 |             const output = execSync(`bash scripts/build.sh --template=default --components=quiz-engine --validate-only`, {\n         |                            ^\n      82 |                 encoding: 'utf8',\n      83 |                 cwd: testDir,\n      84 |                 timeout: 15000\n\n      at Object.execSync (tests/unit/components.test.js:81:28)\n\n  ● Components System › Component integration › should support multiple components\n\n    Command failed: bash scripts/build.sh --template=default --components=quiz-engine --validate-only --verbose\n    \u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n      101 |         test('should support multiple components', () => {\n      102 |             // Test with multiple components if available\n    > 103 |             const output = execSync(`bash scripts/build.sh --template=default --components=quiz-engine --validate-only --verbose`, {\n          |                            ^\n      104 |                 encoding: 'utf8',\n      105 |                 cwd: testDir,\n      106 |                 timeout: 15000\n\n      at Object.execSync (tests/unit/components.test.js:103:28)\n\n  ● Components System › Component lifecycle › should validate component dependencies\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"quiz-engine\"\n    Received: \"testcases\"\n\n      207 |                     const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));\n      208 |                     expect(packageJson).toHaveProperty('name');\n    > 209 |                     expect(packageJson.name).toBe(componentName);\n          |                                              ^\n      210 |                 }\n      211 |             });\n      212 |         });\n\n      at toBe (tests/unit/components.test.js:209:46)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (tests/unit/components.test.js:202:27)\n\n  ● Components System › Component build integration › should copy component files during build\n\n    Command failed: bash scripts/build.sh --template=minimal --components=quiz-engine --validate-only --verbose\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      216 |         test('should copy component files during build', () => {\n      217 |             // This tests the build system's ability to integrate components\n    > 218 |             const output = execSync(`bash scripts/build.sh --template=minimal --components=quiz-engine --validate-only --verbose`, {\n          |                            ^\n      219 |                 encoding: 'utf8',\n      220 |                 cwd: testDir,\n      221 |                 timeout: 15000\n\n      at Object.execSync (tests/unit/components.test.js:218:28)\n\n  ● Components System › Component build integration › should handle component conflicts gracefully\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"duplicate\"\n    Received string:    \"Command failed: bash scripts/build.sh --template=default --components=quiz-engine,quiz-engine --validate-only\n    \u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n    \"\n\n      241 |             } catch (error) {\n      242 |                 // Error is acceptable for duplicate components\n    > 243 |                 expect(error.message).toContain('duplicate') || error.status !== 0;\n          |                                       ^\n      244 |             }\n      245 |         });\n      246 |     });\n\n      at Object.toContain (tests/unit/components.test.js:243:39)\n"
    },
    {
      "leaks": false,
      "numFailingTests": 6,
      "numPassingTests": 17,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1758397754782,
        "runtime": 2161,
        "slow": false,
        "start": 1758397752621
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/root/info-tech-io/hugo-templates/tests/unit/templates.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Template System",
            "Template availability"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Template availability should have required templates",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should have required templates"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template availability"
          ],
          "duration": 268,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Template availability should list templates correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should list templates correctly"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template structure",
            "default template"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Template structure default template should have hugo.toml configuration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should have hugo.toml configuration"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template structure",
            "default template"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Template structure default template should have content directory",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should have content directory"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template structure",
            "default template"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Template structure default template should have valid metadata.json",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should have valid metadata.json"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template structure",
            "default template"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Template structure default template should have static directory if needed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have static directory if needed"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template structure",
            "minimal template"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Template structure minimal template should have hugo.toml configuration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should have hugo.toml configuration"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template structure",
            "minimal template"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Template structure minimal template should have content directory",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should have content directory"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template structure",
            "minimal template"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Template structure minimal template should have valid metadata.json",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should have valid metadata.json"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template structure",
            "minimal template"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Template structure minimal template should have static directory if needed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have static directory if needed"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Theme integration"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Theme integration should have compose theme available",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should have compose theme available"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Theme integration"
          ],
          "duration": 208,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Theme integration should list themes correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should list themes correctly"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Theme integration"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Theme integration compose theme should have required structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "compose theme should have required structure"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template parametrization"
          ],
          "duration": 29,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2030045,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --theme=compose --validate-only --verbose\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/unit/templates.test.js:117:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Template System Template parametrization should support template building with parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should support template building with parameters"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template parametrization"
          ],
          "duration": 47,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n\n",
                "\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n"
              ],
              "pid": 2030060,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=default --theme=compose --validate-only\n\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at execSync (/root/info-tech-io/hugo-templates/tests/unit/templates.test.js:133:32)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/root/info-tech-io/hugo-templates/tests/unit/templates.test.js:132:26)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Template System Template parametrization should handle template+theme combinations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle template+theme combinations"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Content structure validation"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Content structure validation default template should have proper content structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "default template should have proper content structure"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Content structure validation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Content structure validation minimal template should have proper content structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "minimal template should have proper content structure"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template customization"
          ],
          "duration": 660,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toContain(expected) // indexOf\n\nExpected substring: \"interactive\"\nReceived string:    \"expect(received).toContain(expected) // indexOf·\nExpected substring: \\\"SUCCESS\\\"\nReceived string:    \\\"🏗️  Generating template: test-template-1758397753336\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n✅ Created: components.yml\n✅ Created: hugo.toml\n✅ Created: template.json\n✅ Created directory: content/\n✅ Created directory: static/\n✅ Created directory: archetypes/·\n🎉 Template 'test-template-1758397753336' generated successfully!\n   Location: /root/info-tech-io/hugo-templates/templates/test-template-1758397753336\n   Next steps:\n   1. Edit components.yml to configure components\n   2. Add content to content/ directory\n   3. Customize hugo.toml configuration\n\\\"\"",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"interactive\"\nReceived string:    \"expect(received).toContain(expected) // indexOf·\nExpected substring: \\\"SUCCESS\\\"\nReceived string:    \\\"🏗️  Generating template: test-template-1758397753336\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n✅ Created: components.yml\n✅ Created: hugo.toml\n✅ Created: template.json\n✅ Created directory: content/\n✅ Created directory: static/\n✅ Created directory: archetypes/·\n🎉 Template 'test-template-1758397753336' generated successfully!\n   Location: /root/info-tech-io/hugo-templates/templates/test-template-1758397753336\n   Next steps:\n   1. Edit components.yml to configure components\n   2. Add content to content/ directory\n   3. Customize hugo.toml configuration\n\\\"\"\n    at Object.toContain (/root/info-tech-io/hugo-templates/tests/unit/templates.test.js:185:39)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Template System Template customization should support template generation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should support template generation"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template customization"
          ],
          "duration": 641,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Template customization should validate generated template structure",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate generated template structure"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Hugo configuration validation"
          ],
          "duration": 11,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toMatch(expected)\n\nExpected pattern: /\\[module\\]/\nReceived string:  \"baseURL = 'https://example.infotecha.ru/'\nlanguageCode = 'ru-ru'\ntitle = 'Базовый модуль образовательной платформы'\ntheme = 'compose'·\n[params]\n  # Секции для навигации по курсу\n  docSections = [\\\"intro\\\", \\\"theme_01\\\", \\\"theme_02\\\", \\\"theme_03\\\", \\\"theme_04\\\", \\\"outro\\\"]···\n  # Настройки источника (GitHub)\n  [params.source]\n    name = \\\"GitHub\\\"\n    iconLight = \\\"images/GitHubMarkLight.svg\\\"\n    iconDark = \\\"images/GitHubMarkDark.svg\\\"\n    url = \\\"https://github.com/info-tech-io/\\\"·\n  # Настройки платформы\n  [params.platform]\n    hub_url = \\\"https://infotecha.ru\\\"\n    quiz_engine_path = \\\"/quiz/src/quiz-engine/quiz-engine.mjs\\\"·\n# Логотип\n[logo]\n  text = \\\"InfoTech.io\\\"·\n# Настройки разметки для поддержки shortcodes\n[markup]\n  [markup.goldmark]\n    [markup.goldmark.renderer]\n      unsafe = true\n  [markup.highlight]\n    style = \\\"github\\\"\n    lineNos = true\n    noClasses = false\"",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toMatch(expected)\n\nExpected pattern: /\\[module\\]/\nReceived string:  \"baseURL = 'https://example.infotecha.ru/'\nlanguageCode = 'ru-ru'\ntitle = 'Базовый модуль образовательной платформы'\ntheme = 'compose'·\n[params]\n  # Секции для навигации по курсу\n  docSections = [\\\"intro\\\", \\\"theme_01\\\", \\\"theme_02\\\", \\\"theme_03\\\", \\\"theme_04\\\", \\\"outro\\\"]···\n  # Настройки источника (GitHub)\n  [params.source]\n    name = \\\"GitHub\\\"\n    iconLight = \\\"images/GitHubMarkLight.svg\\\"\n    iconDark = \\\"images/GitHubMarkDark.svg\\\"\n    url = \\\"https://github.com/info-tech-io/\\\"·\n  # Настройки платформы\n  [params.platform]\n    hub_url = \\\"https://infotecha.ru\\\"\n    quiz_engine_path = \\\"/quiz/src/quiz-engine/quiz-engine.mjs\\\"·\n# Логотип\n[logo]\n  text = \\\"InfoTech.io\\\"·\n# Настройки разметки для поддержки shortcodes\n[markup]\n  [markup.goldmark]\n    [markup.goldmark.renderer]\n      unsafe = true\n  [markup.highlight]\n    style = \\\"github\\\"\n    lineNos = true\n    noClasses = false\"\n    at toMatch (/root/info-tech-io/hugo-templates/tests/unit/templates.test.js:221:75)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/root/info-tech-io/hugo-templates/tests/unit/templates.test.js:205:26)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Template System Hugo configuration validation should validate Hugo config syntax in all templates",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "failed",
          "title": "should validate Hugo config syntax in all templates"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Hugo configuration validation"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Template System Hugo configuration validation should have consistent Hugo version requirements",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have consistent Hugo version requirements"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template compatibility"
          ],
          "duration": 27,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2030097,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --environment=production --validate-only\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at execSync (/root/info-tech-io/hugo-templates/tests/unit/templates.test.js:242:32)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/root/info-tech-io/hugo-templates/tests/unit/templates.test.js:241:26)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Template System Template compatibility should work with different environments",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should work with different environments"
        },
        {
          "ancestorTitles": [
            "Template System",
            "Template compatibility"
          ],
          "duration": 50,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2030113,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --minify --validate-only\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/unit/templates.test.js:253:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Template System Template compatibility should handle minification options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle minification options"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "unit"
      },
      "failureMessage": "  ● Template System › Template parametrization › should support template building with parameters\n\n    Command failed: bash scripts/build.sh --template=minimal --theme=compose --validate-only --verbose\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      115 |     describe('Template parametrization', () => {\n      116 |         test('should support template building with parameters', () => {\n    > 117 |             const output = execSync(`bash scripts/build.sh --template=minimal --theme=compose --validate-only --verbose`, {\n          |                            ^\n      118 |                 encoding: 'utf8',\n      119 |                 cwd: testDir,\n      120 |                 timeout: 15000\n\n      at Object.execSync (tests/unit/templates.test.js:117:28)\n\n  ● Template System › Template parametrization › should handle template+theme combinations\n\n    Command failed: bash scripts/build.sh --template=default --theme=compose --validate-only\n    \u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n      131 |\n      132 |             combinations.forEach(([template, theme]) => {\n    > 133 |                 const output = execSync(`bash scripts/build.sh --template=${template} --theme=${theme} --validate-only`, {\n          |                                ^\n      134 |                     encoding: 'utf8',\n      135 |                     cwd: testDir,\n      136 |                     timeout: 10000\n\n      at execSync (tests/unit/templates.test.js:133:32)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (tests/unit/templates.test.js:132:26)\n\n  ● Template System › Template customization › should support template generation\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"interactive\"\n    Received string:    \"expect(received).toContain(expected) // indexOf·\n    Expected substring: \\\"SUCCESS\\\"\n    Received string:    \\\"🏗️  Generating template: test-template-1758397753336\n    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n    ✅ Created: components.yml\n    ✅ Created: hugo.toml\n    ✅ Created: template.json\n    ✅ Created directory: content/\n    ✅ Created directory: static/\n    ✅ Created directory: archetypes/·\n    🎉 Template 'test-template-1758397753336' generated successfully!\n       Location: /root/info-tech-io/hugo-templates/templates/test-template-1758397753336\n       Next steps:\n       1. Edit components.yml to configure components\n       2. Add content to content/ directory\n       3. Customize hugo.toml configuration\n    \\\"\"\n\n      183 |             } catch (error) {\n      184 |                 // Generator might need interactive input, which is expected\n    > 185 |                 expect(error.message).toContain('interactive') || expect(error.message).toContain('input');\n          |                                       ^\n      186 |             }\n      187 |         });\n      188 |\n\n      at Object.toContain (tests/unit/templates.test.js:185:39)\n\n  ● Template System › Hugo configuration validation › should validate Hugo config syntax in all templates\n\n    expect(received).toMatch(expected)\n\n    Expected pattern: /\\[module\\]/\n    Received string:  \"baseURL = 'https://example.infotecha.ru/'\n    languageCode = 'ru-ru'\n    title = 'Базовый модуль образовательной платформы'\n    theme = 'compose'·\n    [params]\n      # Секции для навигации по курсу\n      docSections = [\\\"intro\\\", \\\"theme_01\\\", \\\"theme_02\\\", \\\"theme_03\\\", \\\"theme_04\\\", \\\"outro\\\"]···\n      # Настройки источника (GitHub)\n      [params.source]\n        name = \\\"GitHub\\\"\n        iconLight = \\\"images/GitHubMarkLight.svg\\\"\n        iconDark = \\\"images/GitHubMarkDark.svg\\\"\n        url = \\\"https://github.com/info-tech-io/\\\"·\n      # Настройки платформы\n      [params.platform]\n        hub_url = \\\"https://infotecha.ru\\\"\n        quiz_engine_path = \\\"/quiz/src/quiz-engine/quiz-engine.mjs\\\"·\n    # Логотип\n    [logo]\n      text = \\\"InfoTech.io\\\"·\n    # Настройки разметки для поддержки shortcodes\n    [markup]\n      [markup.goldmark]\n        [markup.goldmark.renderer]\n          unsafe = true\n      [markup.highlight]\n        style = \\\"github\\\"\n        lineNos = true\n        noClasses = false\"\n\n      219 |\n      220 |                     // Theme configuration\n    > 221 |                     expect(config).toMatch(/theme\\s*=/) || expect(config).toMatch(/\\[module\\]/);\n          |                                                                           ^\n      222 |                 }\n      223 |             });\n      224 |         });\n\n      at toMatch (tests/unit/templates.test.js:221:75)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (tests/unit/templates.test.js:205:26)\n\n  ● Template System › Template compatibility › should work with different environments\n\n    Command failed: bash scripts/build.sh --template=minimal --environment=production --validate-only\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      240 |\n      241 |             environments.forEach(env => {\n    > 242 |                 const output = execSync(`bash scripts/build.sh --template=minimal --environment=${env} --validate-only`, {\n          |                                ^\n      243 |                     encoding: 'utf8',\n      244 |                     cwd: testDir,\n      245 |                     timeout: 10000\n\n      at execSync (tests/unit/templates.test.js:242:32)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (tests/unit/templates.test.js:241:26)\n\n  ● Template System › Template compatibility › should handle minification options\n\n    Command failed: bash scripts/build.sh --template=minimal --minify --validate-only\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      251 |\n      252 |         test('should handle minification options', () => {\n    > 253 |             const output = execSync(`bash scripts/build.sh --template=minimal --minify --validate-only`, {\n          |                            ^\n      254 |                 encoding: 'utf8',\n      255 |                 cwd: testDir,\n      256 |                 timeout: 10000\n\n      at Object.execSync (tests/unit/templates.test.js:253:28)\n"
    },
    {
      "leaks": false,
      "numFailingTests": 2,
      "numPassingTests": 11,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1758397757299,
        "runtime": 2463,
        "slow": false,
        "start": 1758397754836
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/root/info-tech-io/hugo-templates/tests/unit/validation.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Validation System",
            "JSON Schema validation"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation System JSON Schema validation should have valid schema files",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should have valid schema files"
        },
        {
          "ancestorTitles": [
            "Validation System",
            "JSON Schema validation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation System JSON Schema validation should validate template metadata",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate template metadata"
        },
        {
          "ancestorTitles": [
            "Validation System",
            "Template structure validation"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation System Template structure validation should have required template directories",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should have required template directories"
        },
        {
          "ancestorTitles": [
            "Validation System",
            "Template structure validation"
          ],
          "duration": 3,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at toBe (/root/info-tech-io/hugo-templates/tests/unit/validation.test.js:70:59)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/root/info-tech-io/hugo-templates/tests/unit/validation.test.js:64:26)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Validation System Template structure validation should have required files in each template",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should have required files in each template"
        },
        {
          "ancestorTitles": [
            "Validation System",
            "Template structure validation"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation System Template structure validation should validate Hugo configuration syntax",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 16,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate Hugo configuration syntax"
        },
        {
          "ancestorTitles": [
            "Validation System",
            "Components validation"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation System Components validation should have valid components.yml files",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "passed",
          "title": "should have valid components.yml files"
        },
        {
          "ancestorTitles": [
            "Validation System",
            "Components validation"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation System Components validation should validate component Git submodules",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate component Git submodules"
        },
        {
          "ancestorTitles": [
            "Validation System",
            "Build validation"
          ],
          "duration": 546,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "🔍 Hugo Template Factory - Advanced Validation\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n📋 Validating project structure...\n📋 Validating template: default...\n\n📊 Validation Results:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n✅ Information (26):\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n   ℹ️  Template 'minimal' has required file: hugo.toml\n   ℹ️  Template 'minimal' has required file: components.yml\n   ℹ️  Template 'minimal' has recommended directory: content\n   ℹ️  Template 'minimal' has recommended directory: static\n   ℹ️  Template 'minimal' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758368978446' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758368978446' has required file: components.yml\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: content\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: static\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758397753336' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758397753336' has required file: components.yml\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: content\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: static\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: archetypes\n   ℹ️  Found 6 templates: academic, default, enterprise, minimal, test-template-1758368978446, test-template-1758397753336\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n\n⚠️  Warnings (29):\n   ⚠️  Template 'academic' missing components.yml (recommended)\n   ⚠️  Template 'academic' missing recommended directory: content\n   ⚠️  Template 'academic' missing recommended directory: static\n   ⚠️  Template 'academic' missing recommended directory: archetypes\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Template 'enterprise' missing components.yml (recommended)\n   ⚠️  Template 'enterprise' missing recommended directory: content\n   ⚠️  Template 'enterprise' missing recommended directory: static\n   ⚠️  Template 'enterprise' missing recommended directory: archetypes\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n\n❌ Errors (11):\n   ❌ Template 'academic' missing required file: hugo.toml\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'name'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'version'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'description'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'status'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Template 'enterprise' missing required file: hugo.toml\n\n💥 Overall validation: FAILED\n   Found 11 errors that must be fixed\n",
                "❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n"
              ],
              "pid": 2030130,
              "stdout": "🔍 Hugo Template Factory - Advanced Validation\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n📋 Validating project structure...\n📋 Validating template: default...\n\n📊 Validation Results:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n✅ Information (26):\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n   ℹ️  Template 'minimal' has required file: hugo.toml\n   ℹ️  Template 'minimal' has required file: components.yml\n   ℹ️  Template 'minimal' has recommended directory: content\n   ℹ️  Template 'minimal' has recommended directory: static\n   ℹ️  Template 'minimal' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758368978446' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758368978446' has required file: components.yml\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: content\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: static\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758397753336' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758397753336' has required file: components.yml\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: content\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: static\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: archetypes\n   ℹ️  Found 6 templates: academic, default, enterprise, minimal, test-template-1758368978446, test-template-1758397753336\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n\n⚠️  Warnings (29):\n   ⚠️  Template 'academic' missing components.yml (recommended)\n   ⚠️  Template 'academic' missing recommended directory: content\n   ⚠️  Template 'academic' missing recommended directory: static\n   ⚠️  Template 'academic' missing recommended directory: archetypes\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Template 'enterprise' missing components.yml (recommended)\n   ⚠️  Template 'enterprise' missing recommended directory: content\n   ⚠️  Template 'enterprise' missing recommended directory: static\n   ⚠️  Template 'enterprise' missing recommended directory: archetypes\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n\n❌ Errors (11):\n   ❌ Template 'academic' missing required file: hugo.toml\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'name'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'version'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'description'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'status'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Template 'enterprise' missing required file: hugo.toml\n\n💥 Overall validation: FAILED\n   Found 11 errors that must be fixed\n",
              "stderr": "❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: node scripts/validate.js --template default --theme compose\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at execSync (/root/info-tech-io/hugo-templates/tests/unit/validation.test.js:147:32)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (/root/info-tech-io/hugo-templates/tests/unit/validation.test.js:145:31)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Validation System Build validation should validate template parameter combinations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should validate template parameter combinations"
        },
        {
          "ancestorTitles": [
            "Validation System",
            "Build validation"
          ],
          "duration": 1090,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation System Build validation should detect invalid combinations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should detect invalid combinations"
        },
        {
          "ancestorTitles": [
            "Validation System",
            "Configuration parsing"
          ],
          "duration": 206,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation System Configuration parsing should parse components.yml correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should parse components.yml correctly"
        },
        {
          "ancestorTitles": [
            "Validation System",
            "Configuration parsing"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation System Configuration parsing should validate package.json dependencies",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate package.json dependencies"
        },
        {
          "ancestorTitles": [
            "Validation System",
            "Error handling validation"
          ],
          "duration": 415,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation System Error handling validation should handle missing template gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing template gracefully"
        },
        {
          "ancestorTitles": [
            "Validation System",
            "Error handling validation"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Validation System Error handling validation should handle corrupted configuration files",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle corrupted configuration files"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "unit"
      },
      "failureMessage": "  ● Validation System › Template structure validation › should have required files in each template\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      68 |                     // Check for hugo.toml\n      69 |                     const hugoConfigPath = path.join(templatePath, 'hugo.toml');\n    > 70 |                     expect(fs.existsSync(hugoConfigPath)).toBe(true);\n         |                                                           ^\n      71 |\n      72 |                     // Check content directory\n      73 |                     const contentPath = path.join(templatePath, 'content');\n\n      at toBe (tests/unit/validation.test.js:70:59)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (tests/unit/validation.test.js:64:26)\n\n  ● Validation System › Build validation › should validate template parameter combinations\n\n    Command failed: node scripts/validate.js --template default --theme compose\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n\n      145 |             validCombinations.forEach(([template, theme]) => {\n      146 |                 // Use validate script to check combination\n    > 147 |                 const output = execSync(`node scripts/validate.js --template ${template} --theme ${theme}`, {\n          |                                ^\n      148 |                     encoding: 'utf8',\n      149 |                     cwd: testDir,\n      150 |                     timeout: 10000\n\n      at execSync (tests/unit/validation.test.js:147:32)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (tests/unit/validation.test.js:145:31)\n"
    },
    {
      "leaks": false,
      "numFailingTests": 4,
      "numPassingTests": 15,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1758397757652,
        "runtime": 344,
        "slow": false,
        "start": 1758397757308
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/root/info-tech-io/hugo-templates/tests/unit/logger.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Logger System",
            "Logger module"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System Logger module should exist and be readable",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should exist and be readable"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Logger module"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System Logger module should export required functions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should export required functions"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Logger functionality"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System Logger functionality should create logger instances",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should create logger instances"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Logger functionality"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System Logger functionality should support different log levels",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should support different log levels"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Logger functionality"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System Logger functionality should create progress trackers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should create progress trackers"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Logger integration with CLI tools"
          ],
          "duration": 6,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toMatch(expected)\n\nExpected pattern: /echo.*\\\\\\[|\\\\\\033|INFO|SUCCESS|ERROR/\nReceived string:  \"#!/bin/bash\nset -euo pipefail·\n#\n# Hugo Template Factory Framework - Main Build Script\n# The first parametrized scaffolding tool for Hugo ecosystem\n#\n# This script provides a bash-based interface for building Hugo sites\n# with specified templates, themes, and components.\n#·\n# Colors for output\nreadonly RED='\\\\033[0;31m'\nreadonly GREEN='\\\\033[0;32m'\nreadonly YELLOW='\\\\033[1;33m'\nreadonly BLUE='\\\\033[0;34m'\nreadonly GRAY='\\\\033[0;90m'\nreadonly NC='\\\\033[0m' # No Color·\n# Default values\nTEMPLATE=\\\"default\\\"\nTHEME=\\\"compose\\\"\nCOMPONENTS=\\\"\\\"\nOUTPUT=\\\"./site\\\"\nCONTENT=\\\"\\\"\nCONFIG=\\\"\\\"\nMINIFY=false\nDRAFT=false\nFUTURE=false\nBASE_URL=\\\"\\\"\nENVIRONMENT=\\\"development\\\"\nVERBOSE=false\nQUIET=false\nLOG_LEVEL=\\\"info\\\"\nVALIDATE_ONLY=false·\n# Script directory (where this script is located)\nSCRIPT_DIR=\\\"$(cd \\\"$(dirname \\\"${BASH_SOURCE[0]}\\\")\\\" && pwd)\\\"\nPROJECT_ROOT=\\\"$(dirname \\\"$SCRIPT_DIR\\\")\\\"·\n# Function to print colored output\nprint_color() {\n    local color=$1\n    shift\n    echo -e \\\"${color}$*${NC}\\\"\n}·\n# Logging functions\nlog_info() {\n    [[ \\\"$QUIET\\\" == \\\"true\\\" ]] && return\n    print_color \\\"$BLUE\\\" \\\"ℹ️  $*\\\"\n}·\nlog_success() {\n    [[ \\\"$QUIET\\\" == \\\"true\\\" ]] && return\n    print_color \\\"$GREEN\\\" \\\"✅ $*\\\"\n}·\nlog_warning() {\n    [[ \\\"$QUIET\\\" == \\\"true\\\" ]] && return\n    print_color \\\"$YELLOW\\\" \\\"⚠️  $*\\\"\n}·\nlog_error() {\n    print_color \\\"$RED\\\" \\\"❌ $*\\\" >&2\n}·\nlog_verbose() {\n    [[ \\\"$VERBOSE\\\" == \\\"true\\\" ]] || return\n    print_color \\\"$GRAY\\\" \\\"🔍 $*\\\"\n}·\n# Function to show usage\nshow_usage() {\n    cat << EOF\nUsage: $0 [OPTIONS]·\nHugo Template Factory Framework - Build Script·\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message·\nEXAMPLES:\n    # Basic build with default template\n    $0·\n    # Build with minimal template\n    $0 --template=minimal --theme=compose·\n    # Build with specific components\n    $0 --template=default --components=quiz-engine,analytics·\n    # Build with custom content directory\n    $0 --content=/path/to/content --output=/path/to/output·\n    # Production build with minification\n    $0 --environment=production --minify --base-url=https://example.com·\n    # Validate configuration only\n    $0 --validate-only --verbose·\nAVAILABLE TEMPLATES:\n$(list_templates)·\nEOF\n}·\n# Function to list available templates\nlist_templates() {\n    local templates_dir=\\\"$PROJECT_ROOT/templates\\\"\n    if [[ -d \\\"$templates_dir\\\" ]]; then\n        find \\\"$templates_dir\\\" -mindepth 1 -maxdepth 1 -type d -exec basename {} \\\\; | sort | sed 's/^/    - /'\n    else\n        echo \\\"    - No templates found\\\"\n    fi\n}·\n# Function to validate input parameters\nvalidate_parameters() {\n    log_verbose \\\"Validating input parameters...\\\"·\n    # Check if template exists\n    local template_path=\\\"$PROJECT_ROOT/templates/$TEMPLATE\\\"\n    if [[ ! -d \\\"$template_path\\\" ]]; then\n        log_error \\\"Template '$TEMPLATE' not found in $PROJECT_ROOT/templates/\\\"\n        log_info \\\"Available templates:\\\"\n        list_templates\n        return 1\n    fi·\n    # Check if components.yml exists in template\n    local components_file=\\\"$template_path/components.yml\\\"\n    if [[ ! -f \\\"$components_file\\\" ]]; then\n        log_warning \\\"No components.yml found in template '$TEMPLATE'\\\"\n    fi·\n    # Validate output directory\n    if [[ \\\"$OUTPUT\\\" == \\\".\\\" || \\\"$OUTPUT\\\" == \\\"./\\\" ]]; then\n        log_error \\\"Output directory cannot be current directory\\\"\n        return 1\n    fi·\n    # Check if output directory already exists and is not empty\n    if [[ -d \\\"$OUTPUT\\\" && \\\"$(ls -A \\\"$OUTPUT\\\" 2>/dev/null)\\\" ]]; then\n        log_warning \\\"Output directory '$OUTPUT' already exists and is not empty\\\"\n        if [[ \\\"$VERBOSE\\\" == \\\"true\\\" ]]; then\n            echo \\\"Contents:\\\"\n            ls -la \\\"$OUTPUT\\\" | head -5\n        fi\n    fi·\n    # Validate content directory if specified\n    if [[ -n \\\"$CONTENT\\\" && ! -d \\\"$CONTENT\\\" ]]; then\n        log_error \\\"Content directory '$CONTENT' not found\\\"\n        return 1\n    fi·\n    # Validate configuration file if specified\n    if [[ -n \\\"$CONFIG\\\" && ! -f \\\"$CONFIG\\\" ]]; then\n        log_error \\\"Configuration file '$CONFIG' not found\\\"\n        return 1\n    fi·\n    # Check Hugo installation\n    if ! command -v hugo >/dev/null 2>&1; then\n        log_error \\\"Hugo is not installed or not in PATH\\\"\n        log_info \\\"Please install Hugo: https://gohugo.io/getting-started/installing/\\\"\n        return 1\n    fi·\n    local hugo_version\n    hugo_version=$(hugo version 2>/dev/null | head -1)\n    log_verbose \\\"Found Hugo: $hugo_version\\\"·\n    log_success \\\"Parameter validation completed\\\"\n    return 0\n}·\n# Function to parse components.yml\nparse_components() {\n    local template_path=\\\"$PROJECT_ROOT/templates/$TEMPLATE\\\"\n    local components_file=\\\"$template_path/components.yml\\\"·\n    if [[ ! -f \\\"$components_file\\\" ]]; then\n        log_verbose \\\"No components.yml file found, skipping component processing\\\"\n        return 0\n    fi·\n    log_verbose \\\"Parsing components from $components_file\\\"·\n    # Use Node.js to parse YAML if available, otherwise skip detailed parsing\n    if command -v node >/dev/null 2>&1; then\n        local js_parser=\\\"$SCRIPT_DIR/parse-components.js\\\"\n        if [[ -f \\\"$js_parser\\\" ]]; then\n            log_verbose \\\"Using Node.js YAML parser\\\"\n            node \\\"$js_parser\\\" \\\"$components_file\\\"\n        else\n            log_verbose \\\"Node.js YAML parser not found, using basic parsing\\\"\n        fi\n    else\n        log_verbose \\\"Node.js not available, skipping advanced component parsing\\\"\n    fi\n}·\n# Function to prepare build environment\nprepare_build_environment() {\n    log_info \\\"Preparing build environment...\\\"·\n    # Create output directory\n    mkdir -p \\\"$OUTPUT\\\"\n    log_verbose \\\"Created output directory: $OUTPUT\\\"·\n    # Copy template files\n    local template_path=\\\"$PROJECT_ROOT/templates/$TEMPLATE\\\"\n    log_verbose \\\"Copying template files from: $template_path\\\"·\n    # Copy all files except .git directories\n    find \\\"$template_path\\\" -type f ! -path \\\"*/.git/*\\\" -exec cp --parents {} \\\"$OUTPUT/\\\" \\\\; 2>/dev/null || {\n        # Fallback for systems without --parents\n        rsync -av --exclude='.git' \\\"$template_path/\\\" \\\"$OUTPUT/\\\" 2>/dev/null || {\n            # Final fallback\n            cp -r \\\"$template_path\\\"/* \\\"$OUTPUT/\\\" 2>/dev/null || true\n        }\n    }·\n    # Copy custom content if specified\n    if [[ -n \\\"$CONTENT\\\" ]]; then\n        log_verbose \\\"Copying custom content from: $CONTENT\\\"\n        cp -r \\\"$CONTENT\\\"/* \\\"$OUTPUT/content/\\\" 2>/dev/null || true\n    fi·\n    # Initialize Git submodules if they exist\n    if [[ -f \\\"$PROJECT_ROOT/.gitmodules\\\" ]]; then\n        log_verbose \\\"Initializing Git submodules...\\\"\n        cd \\\"$PROJECT_ROOT\\\"\n        git submodule update --init --recursive 2>/dev/null || {\n            log_warning \\\"Failed to initialize Git submodules\\\"\n        }\n        cd - >/dev/null\n    fi·\n    # Copy theme if it exists as submodule\n    local theme_path=\\\"$PROJECT_ROOT/themes/$THEME\\\"\n    if [[ -d \\\"$theme_path\\\" ]]; then\n        log_verbose \\\"Copying theme: $THEME\\\"\n        mkdir -p \\\"$OUTPUT/themes\\\"\n        cp -r \\\"$theme_path\\\" \\\"$OUTPUT/themes/\\\" 2>/dev/null || true\n    fi·\n    # Copy components if they exist\n    if [[ -n \\\"$COMPONENTS\\\" ]]; then\n        IFS=',' read -ra COMP_ARRAY <<< \\\"$COMPONENTS\\\"\n        for component in \\\"${COMP_ARRAY[@]}\\\"; do\n            component=$(echo \\\"$component\\\" | xargs) # trim whitespace\n            local comp_path=\\\"$PROJECT_ROOT/components/$component\\\"\n            if [[ -d \\\"$comp_path\\\" ]]; then\n                log_verbose \\\"Copying component: $component\\\"\n                # Copy component files to appropriate locations\n                if [[ -d \\\"$comp_path/static\\\" ]]; then\n                    cp -r \\\"$comp_path/static\\\"/* \\\"$OUTPUT/static/\\\" 2>/dev/null || true\n                fi\n                if [[ -d \\\"$comp_path/layouts\\\" ]]; then\n                    cp -r \\\"$comp_path/layouts\\\"/* \\\"$OUTPUT/layouts/\\\" 2>/dev/null || true\n                fi\n            else\n                log_warning \\\"Component '$component' not found in $PROJECT_ROOT/components/\\\"\n            fi\n        done\n    fi·\n    log_success \\\"Build environment prepared\\\"\n}·\n# Function to update Hugo configuration\nupdate_hugo_config() {\n    log_info \\\"Updating Hugo configuration...\\\"·\n    local hugo_config=\\\"$OUTPUT/hugo.toml\\\"\n    if [[ ! -f \\\"$hugo_config\\\" ]]; then\n        log_warning \\\"No hugo.toml found, creating minimal configuration\\\"\n        cat > \\\"$hugo_config\\\" << EOF\nbaseURL = '${BASE_URL:-http://localhost:1313}'\nlanguageCode = 'en-us'\ntitle = 'Hugo Template Factory Site'\ntheme = '$THEME'\nEOF\n    fi·\n    # Update configuration based on parameters\n    if [[ -n \\\"$BASE_URL\\\" ]]; then\n        log_verbose \\\"Setting baseURL to: $BASE_URL\\\"\n        sed -i \\\"s|baseURL = .*|baseURL = '$BASE_URL'|\\\" \\\"$hugo_config\\\"\n    fi·\n    if [[ \\\"$THEME\\\" != \\\"compose\\\" ]]; then\n        log_verbose \\\"Setting theme to: $THEME\\\"\n        sed -i \\\"s|theme = .*|theme = '$THEME'|\\\" \\\"$hugo_config\\\"\n    fi·\n    # Add environment-specific settings\n    if [[ \\\"$ENVIRONMENT\\\" == \\\"production\\\" ]]; then\n        echo \\\"\\\" >> \\\"$hugo_config\\\"\n        echo \\\"# Production environment settings\\\" >> \\\"$hugo_config\\\"\n        echo \\\"environment = \\\\\\\"production\\\\\\\"\\\" >> \\\"$hugo_config\\\"\n    fi·\n    log_success \\\"Hugo configuration updated\\\"\n}·\n# Function to run Hugo build\nrun_hugo_build() {\n    log_info \\\"Running Hugo build...\\\"·\n    cd \\\"$OUTPUT\\\"·\n    # Build Hugo command\n    local hugo_cmd=\\\"hugo\\\"·\n    # Add flags based on parameters\n    [[ \\\"$MINIFY\\\" == \\\"true\\\" ]] && hugo_cmd+=\\\" --minify\\\"\n    [[ \\\"$DRAFT\\\" == \\\"true\\\" ]] && hugo_cmd+=\\\" --draft\\\"\n    [[ \\\"$FUTURE\\\" == \\\"true\\\" ]] && hugo_cmd+=\\\" --future\\\"\n    [[ -n \\\"$BASE_URL\\\" ]] && hugo_cmd+=\\\" --baseURL \\\\\\\"$BASE_URL\\\\\\\"\\\"\n    [[ \\\"$ENVIRONMENT\\\" != \\\"development\\\" ]] && hugo_cmd+=\\\" --environment $ENVIRONMENT\\\"·\n    # Set log level\n    case \\\"$LOG_LEVEL\\\" in\n        debug) hugo_cmd+=\\\" --logLevel debug\\\" ;;\n        warn) hugo_cmd+=\\\" --logLevel warn\\\" ;;\n        error) hugo_cmd+=\\\" --logLevel error\\\" ;;\n        *) hugo_cmd+=\\\" --logLevel info\\\" ;;\n    esac·\n    # Set destination (output to current directory since we're already in OUTPUT)\n    hugo_cmd+=\\\" --destination .\\\"·\n    log_verbose \\\"Running: $hugo_cmd\\\"·\n    # Execute Hugo build\n    if [[ \\\"$VERBOSE\\\" == \\\"true\\\" ]]; then\n        eval \\\"$hugo_cmd\\\"\n    else\n        eval \\\"$hugo_cmd\\\" >/dev/null 2>&1 || {\n            log_error \\\"Hugo build failed\\\"\n            return 1\n        }\n    fi·\n    cd - >/dev/null·\n    log_success \\\"Hugo build completed\\\"\n}·\n# Function to show build summary\nshow_build_summary() {\n    log_info \\\"Build Summary:\\\"\n    echo \\\"   Template: $TEMPLATE\\\"\n    echo \\\"   Theme: $THEME\\\"\n    [[ -n \\\"$COMPONENTS\\\" ]] && echo \\\"   Components: $COMPONENTS\\\"\n    echo \\\"   Environment: $ENVIRONMENT\\\"\n    echo \\\"   Output: $OUTPUT\\\"·\n    # Check build output (Hugo now outputs directly to OUTPUT directory)\n    if [[ -d \\\"$OUTPUT\\\" ]]; then\n        local file_count\n        file_count=$(find \\\"$OUTPUT\\\" -type f ! -path \\\"*/.git/*\\\" 2>/dev/null | wc -l)\n        echo \\\"   Files generated: $file_count\\\"·\n        if command -v du >/dev/null 2>&1; then\n            local size\n            size=$(du -sh \\\"$OUTPUT\\\" 2>/dev/null | cut -f1 || echo \\\"unknown\\\")\n            echo \\\"   Total size: $size\\\"\n        fi·\n        if [[ \\\"$VERBOSE\\\" == \\\"true\\\" ]]; then\n            echo \\\"\\\"\n            log_info \\\"Generated files:\\\"\n            find \\\"$OUTPUT\\\" -type f ! -path \\\"*/.git/*\\\" 2>/dev/null | head -10 | sed 's|^|   |'\n            if [[ $file_count -gt 10 ]]; then\n                echo \\\"   ... and $((file_count - 10)) more files\\\"\n            fi\n        fi\n    fi·\n    echo \\\"\\\"\n    log_success \\\"Build completed successfully!\\\"\n    echo \\\"   Run: hugo server -s $OUTPUT to preview locally\\\"\n}·\n# Function to parse command line arguments\nparse_arguments() {\n    while [[ $# -gt 0 ]]; do\n        case $1 in\n            -t|--template)\n                TEMPLATE=\\\"$2\\\"\n                shift 2\n                ;;\n            --theme)\n                THEME=\\\"$2\\\"\n                shift 2\n                ;;\n            -c|--components)\n                COMPONENTS=\\\"$2\\\"\n                shift 2\n                ;;\n            -o|--output)\n                OUTPUT=\\\"$2\\\"\n                shift 2\n                ;;\n            --content)\n                CONTENT=\\\"$2\\\"\n                shift 2\n                ;;\n            --config)\n                CONFIG=\\\"$2\\\"\n                shift 2\n                ;;\n            --minify)\n                MINIFY=true\n                shift\n                ;;\n            --draft)\n                DRAFT=true\n                shift\n                ;;\n            --future)\n                FUTURE=true\n                shift\n                ;;\n            --base-url)\n                BASE_URL=\\\"$2\\\"\n                shift 2\n                ;;\n            -e|--environment)\n                ENVIRONMENT=\\\"$2\\\"\n                shift 2\n                ;;\n            -v|--verbose)\n                VERBOSE=true\n                shift\n                ;;\n            -q|--quiet)\n                QUIET=true\n                shift\n                ;;\n            --log-level)\n                LOG_LEVEL=\\\"$2\\\"\n                shift 2\n                ;;\n            --validate-only)\n                VALIDATE_ONLY=true\n                shift\n                ;;\n            -h|--help)\n                show_usage\n                exit 0\n                ;;\n            *)\n                log_error \\\"Unknown option: $1\\\"\n                echo \\\"\\\"\n                show_usage\n                exit 1\n                ;;\n        esac\n    done\n}·\n# Main function\nmain() {\n    # Parse command line arguments\n    parse_arguments \\\"$@\\\"·\n    # Show header\n    if [[ \\\"$QUIET\\\" != \\\"true\\\" ]]; then\n        print_color \\\"$BLUE\\\" \\\"🏗️  Hugo Template Factory Build Script\\\"\n        print_color \\\"$GRAY\\\" \\\"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\\"\n        echo \\\"\\\"\n    fi·\n    # Validate parameters\n    if ! validate_parameters; then\n        exit 1\n    fi·\n    # If validation only, exit here\n    if [[ \\\"$VALIDATE_ONLY\\\" == \\\"true\\\" ]]; then\n        log_success \\\"Validation completed successfully\\\"\n        exit 0\n    fi·\n    # Parse components configuration\n    parse_components·\n    # Prepare build environment\n    prepare_build_environment·\n    # Update Hugo configuration\n    update_hugo_config·\n    # Run Hugo build\n    run_hugo_build·\n    # Show build summary\n    show_build_summary\n}·\n# Run main function with all arguments\nmain \\\"$@\\\"\"",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toMatch(expected)\n\nExpected pattern: /echo.*\\\\\\[|\\\\\\033|INFO|SUCCESS|ERROR/\nReceived string:  \"#!/bin/bash\nset -euo pipefail·\n#\n# Hugo Template Factory Framework - Main Build Script\n# The first parametrized scaffolding tool for Hugo ecosystem\n#\n# This script provides a bash-based interface for building Hugo sites\n# with specified templates, themes, and components.\n#·\n# Colors for output\nreadonly RED='\\\\033[0;31m'\nreadonly GREEN='\\\\033[0;32m'\nreadonly YELLOW='\\\\033[1;33m'\nreadonly BLUE='\\\\033[0;34m'\nreadonly GRAY='\\\\033[0;90m'\nreadonly NC='\\\\033[0m' # No Color·\n# Default values\nTEMPLATE=\\\"default\\\"\nTHEME=\\\"compose\\\"\nCOMPONENTS=\\\"\\\"\nOUTPUT=\\\"./site\\\"\nCONTENT=\\\"\\\"\nCONFIG=\\\"\\\"\nMINIFY=false\nDRAFT=false\nFUTURE=false\nBASE_URL=\\\"\\\"\nENVIRONMENT=\\\"development\\\"\nVERBOSE=false\nQUIET=false\nLOG_LEVEL=\\\"info\\\"\nVALIDATE_ONLY=false·\n# Script directory (where this script is located)\nSCRIPT_DIR=\\\"$(cd \\\"$(dirname \\\"${BASH_SOURCE[0]}\\\")\\\" && pwd)\\\"\nPROJECT_ROOT=\\\"$(dirname \\\"$SCRIPT_DIR\\\")\\\"·\n# Function to print colored output\nprint_color() {\n    local color=$1\n    shift\n    echo -e \\\"${color}$*${NC}\\\"\n}·\n# Logging functions\nlog_info() {\n    [[ \\\"$QUIET\\\" == \\\"true\\\" ]] && return\n    print_color \\\"$BLUE\\\" \\\"ℹ️  $*\\\"\n}·\nlog_success() {\n    [[ \\\"$QUIET\\\" == \\\"true\\\" ]] && return\n    print_color \\\"$GREEN\\\" \\\"✅ $*\\\"\n}·\nlog_warning() {\n    [[ \\\"$QUIET\\\" == \\\"true\\\" ]] && return\n    print_color \\\"$YELLOW\\\" \\\"⚠️  $*\\\"\n}·\nlog_error() {\n    print_color \\\"$RED\\\" \\\"❌ $*\\\" >&2\n}·\nlog_verbose() {\n    [[ \\\"$VERBOSE\\\" == \\\"true\\\" ]] || return\n    print_color \\\"$GRAY\\\" \\\"🔍 $*\\\"\n}·\n# Function to show usage\nshow_usage() {\n    cat << EOF\nUsage: $0 [OPTIONS]·\nHugo Template Factory Framework - Build Script·\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message·\nEXAMPLES:\n    # Basic build with default template\n    $0·\n    # Build with minimal template\n    $0 --template=minimal --theme=compose·\n    # Build with specific components\n    $0 --template=default --components=quiz-engine,analytics·\n    # Build with custom content directory\n    $0 --content=/path/to/content --output=/path/to/output·\n    # Production build with minification\n    $0 --environment=production --minify --base-url=https://example.com·\n    # Validate configuration only\n    $0 --validate-only --verbose·\nAVAILABLE TEMPLATES:\n$(list_templates)·\nEOF\n}·\n# Function to list available templates\nlist_templates() {\n    local templates_dir=\\\"$PROJECT_ROOT/templates\\\"\n    if [[ -d \\\"$templates_dir\\\" ]]; then\n        find \\\"$templates_dir\\\" -mindepth 1 -maxdepth 1 -type d -exec basename {} \\\\; | sort | sed 's/^/    - /'\n    else\n        echo \\\"    - No templates found\\\"\n    fi\n}·\n# Function to validate input parameters\nvalidate_parameters() {\n    log_verbose \\\"Validating input parameters...\\\"·\n    # Check if template exists\n    local template_path=\\\"$PROJECT_ROOT/templates/$TEMPLATE\\\"\n    if [[ ! -d \\\"$template_path\\\" ]]; then\n        log_error \\\"Template '$TEMPLATE' not found in $PROJECT_ROOT/templates/\\\"\n        log_info \\\"Available templates:\\\"\n        list_templates\n        return 1\n    fi·\n    # Check if components.yml exists in template\n    local components_file=\\\"$template_path/components.yml\\\"\n    if [[ ! -f \\\"$components_file\\\" ]]; then\n        log_warning \\\"No components.yml found in template '$TEMPLATE'\\\"\n    fi·\n    # Validate output directory\n    if [[ \\\"$OUTPUT\\\" == \\\".\\\" || \\\"$OUTPUT\\\" == \\\"./\\\" ]]; then\n        log_error \\\"Output directory cannot be current directory\\\"\n        return 1\n    fi·\n    # Check if output directory already exists and is not empty\n    if [[ -d \\\"$OUTPUT\\\" && \\\"$(ls -A \\\"$OUTPUT\\\" 2>/dev/null)\\\" ]]; then\n        log_warning \\\"Output directory '$OUTPUT' already exists and is not empty\\\"\n        if [[ \\\"$VERBOSE\\\" == \\\"true\\\" ]]; then\n            echo \\\"Contents:\\\"\n            ls -la \\\"$OUTPUT\\\" | head -5\n        fi\n    fi·\n    # Validate content directory if specified\n    if [[ -n \\\"$CONTENT\\\" && ! -d \\\"$CONTENT\\\" ]]; then\n        log_error \\\"Content directory '$CONTENT' not found\\\"\n        return 1\n    fi·\n    # Validate configuration file if specified\n    if [[ -n \\\"$CONFIG\\\" && ! -f \\\"$CONFIG\\\" ]]; then\n        log_error \\\"Configuration file '$CONFIG' not found\\\"\n        return 1\n    fi·\n    # Check Hugo installation\n    if ! command -v hugo >/dev/null 2>&1; then\n        log_error \\\"Hugo is not installed or not in PATH\\\"\n        log_info \\\"Please install Hugo: https://gohugo.io/getting-started/installing/\\\"\n        return 1\n    fi·\n    local hugo_version\n    hugo_version=$(hugo version 2>/dev/null | head -1)\n    log_verbose \\\"Found Hugo: $hugo_version\\\"·\n    log_success \\\"Parameter validation completed\\\"\n    return 0\n}·\n# Function to parse components.yml\nparse_components() {\n    local template_path=\\\"$PROJECT_ROOT/templates/$TEMPLATE\\\"\n    local components_file=\\\"$template_path/components.yml\\\"·\n    if [[ ! -f \\\"$components_file\\\" ]]; then\n        log_verbose \\\"No components.yml file found, skipping component processing\\\"\n        return 0\n    fi·\n    log_verbose \\\"Parsing components from $components_file\\\"·\n    # Use Node.js to parse YAML if available, otherwise skip detailed parsing\n    if command -v node >/dev/null 2>&1; then\n        local js_parser=\\\"$SCRIPT_DIR/parse-components.js\\\"\n        if [[ -f \\\"$js_parser\\\" ]]; then\n            log_verbose \\\"Using Node.js YAML parser\\\"\n            node \\\"$js_parser\\\" \\\"$components_file\\\"\n        else\n            log_verbose \\\"Node.js YAML parser not found, using basic parsing\\\"\n        fi\n    else\n        log_verbose \\\"Node.js not available, skipping advanced component parsing\\\"\n    fi\n}·\n# Function to prepare build environment\nprepare_build_environment() {\n    log_info \\\"Preparing build environment...\\\"·\n    # Create output directory\n    mkdir -p \\\"$OUTPUT\\\"\n    log_verbose \\\"Created output directory: $OUTPUT\\\"·\n    # Copy template files\n    local template_path=\\\"$PROJECT_ROOT/templates/$TEMPLATE\\\"\n    log_verbose \\\"Copying template files from: $template_path\\\"·\n    # Copy all files except .git directories\n    find \\\"$template_path\\\" -type f ! -path \\\"*/.git/*\\\" -exec cp --parents {} \\\"$OUTPUT/\\\" \\\\; 2>/dev/null || {\n        # Fallback for systems without --parents\n        rsync -av --exclude='.git' \\\"$template_path/\\\" \\\"$OUTPUT/\\\" 2>/dev/null || {\n            # Final fallback\n            cp -r \\\"$template_path\\\"/* \\\"$OUTPUT/\\\" 2>/dev/null || true\n        }\n    }·\n    # Copy custom content if specified\n    if [[ -n \\\"$CONTENT\\\" ]]; then\n        log_verbose \\\"Copying custom content from: $CONTENT\\\"\n        cp -r \\\"$CONTENT\\\"/* \\\"$OUTPUT/content/\\\" 2>/dev/null || true\n    fi·\n    # Initialize Git submodules if they exist\n    if [[ -f \\\"$PROJECT_ROOT/.gitmodules\\\" ]]; then\n        log_verbose \\\"Initializing Git submodules...\\\"\n        cd \\\"$PROJECT_ROOT\\\"\n        git submodule update --init --recursive 2>/dev/null || {\n            log_warning \\\"Failed to initialize Git submodules\\\"\n        }\n        cd - >/dev/null\n    fi·\n    # Copy theme if it exists as submodule\n    local theme_path=\\\"$PROJECT_ROOT/themes/$THEME\\\"\n    if [[ -d \\\"$theme_path\\\" ]]; then\n        log_verbose \\\"Copying theme: $THEME\\\"\n        mkdir -p \\\"$OUTPUT/themes\\\"\n        cp -r \\\"$theme_path\\\" \\\"$OUTPUT/themes/\\\" 2>/dev/null || true\n    fi·\n    # Copy components if they exist\n    if [[ -n \\\"$COMPONENTS\\\" ]]; then\n        IFS=',' read -ra COMP_ARRAY <<< \\\"$COMPONENTS\\\"\n        for component in \\\"${COMP_ARRAY[@]}\\\"; do\n            component=$(echo \\\"$component\\\" | xargs) # trim whitespace\n            local comp_path=\\\"$PROJECT_ROOT/components/$component\\\"\n            if [[ -d \\\"$comp_path\\\" ]]; then\n                log_verbose \\\"Copying component: $component\\\"\n                # Copy component files to appropriate locations\n                if [[ -d \\\"$comp_path/static\\\" ]]; then\n                    cp -r \\\"$comp_path/static\\\"/* \\\"$OUTPUT/static/\\\" 2>/dev/null || true\n                fi\n                if [[ -d \\\"$comp_path/layouts\\\" ]]; then\n                    cp -r \\\"$comp_path/layouts\\\"/* \\\"$OUTPUT/layouts/\\\" 2>/dev/null || true\n                fi\n            else\n                log_warning \\\"Component '$component' not found in $PROJECT_ROOT/components/\\\"\n            fi\n        done\n    fi·\n    log_success \\\"Build environment prepared\\\"\n}·\n# Function to update Hugo configuration\nupdate_hugo_config() {\n    log_info \\\"Updating Hugo configuration...\\\"·\n    local hugo_config=\\\"$OUTPUT/hugo.toml\\\"\n    if [[ ! -f \\\"$hugo_config\\\" ]]; then\n        log_warning \\\"No hugo.toml found, creating minimal configuration\\\"\n        cat > \\\"$hugo_config\\\" << EOF\nbaseURL = '${BASE_URL:-http://localhost:1313}'\nlanguageCode = 'en-us'\ntitle = 'Hugo Template Factory Site'\ntheme = '$THEME'\nEOF\n    fi·\n    # Update configuration based on parameters\n    if [[ -n \\\"$BASE_URL\\\" ]]; then\n        log_verbose \\\"Setting baseURL to: $BASE_URL\\\"\n        sed -i \\\"s|baseURL = .*|baseURL = '$BASE_URL'|\\\" \\\"$hugo_config\\\"\n    fi·\n    if [[ \\\"$THEME\\\" != \\\"compose\\\" ]]; then\n        log_verbose \\\"Setting theme to: $THEME\\\"\n        sed -i \\\"s|theme = .*|theme = '$THEME'|\\\" \\\"$hugo_config\\\"\n    fi·\n    # Add environment-specific settings\n    if [[ \\\"$ENVIRONMENT\\\" == \\\"production\\\" ]]; then\n        echo \\\"\\\" >> \\\"$hugo_config\\\"\n        echo \\\"# Production environment settings\\\" >> \\\"$hugo_config\\\"\n        echo \\\"environment = \\\\\\\"production\\\\\\\"\\\" >> \\\"$hugo_config\\\"\n    fi·\n    log_success \\\"Hugo configuration updated\\\"\n}·\n# Function to run Hugo build\nrun_hugo_build() {\n    log_info \\\"Running Hugo build...\\\"·\n    cd \\\"$OUTPUT\\\"·\n    # Build Hugo command\n    local hugo_cmd=\\\"hugo\\\"·\n    # Add flags based on parameters\n    [[ \\\"$MINIFY\\\" == \\\"true\\\" ]] && hugo_cmd+=\\\" --minify\\\"\n    [[ \\\"$DRAFT\\\" == \\\"true\\\" ]] && hugo_cmd+=\\\" --draft\\\"\n    [[ \\\"$FUTURE\\\" == \\\"true\\\" ]] && hugo_cmd+=\\\" --future\\\"\n    [[ -n \\\"$BASE_URL\\\" ]] && hugo_cmd+=\\\" --baseURL \\\\\\\"$BASE_URL\\\\\\\"\\\"\n    [[ \\\"$ENVIRONMENT\\\" != \\\"development\\\" ]] && hugo_cmd+=\\\" --environment $ENVIRONMENT\\\"·\n    # Set log level\n    case \\\"$LOG_LEVEL\\\" in\n        debug) hugo_cmd+=\\\" --logLevel debug\\\" ;;\n        warn) hugo_cmd+=\\\" --logLevel warn\\\" ;;\n        error) hugo_cmd+=\\\" --logLevel error\\\" ;;\n        *) hugo_cmd+=\\\" --logLevel info\\\" ;;\n    esac·\n    # Set destination (output to current directory since we're already in OUTPUT)\n    hugo_cmd+=\\\" --destination .\\\"·\n    log_verbose \\\"Running: $hugo_cmd\\\"·\n    # Execute Hugo build\n    if [[ \\\"$VERBOSE\\\" == \\\"true\\\" ]]; then\n        eval \\\"$hugo_cmd\\\"\n    else\n        eval \\\"$hugo_cmd\\\" >/dev/null 2>&1 || {\n            log_error \\\"Hugo build failed\\\"\n            return 1\n        }\n    fi·\n    cd - >/dev/null·\n    log_success \\\"Hugo build completed\\\"\n}·\n# Function to show build summary\nshow_build_summary() {\n    log_info \\\"Build Summary:\\\"\n    echo \\\"   Template: $TEMPLATE\\\"\n    echo \\\"   Theme: $THEME\\\"\n    [[ -n \\\"$COMPONENTS\\\" ]] && echo \\\"   Components: $COMPONENTS\\\"\n    echo \\\"   Environment: $ENVIRONMENT\\\"\n    echo \\\"   Output: $OUTPUT\\\"·\n    # Check build output (Hugo now outputs directly to OUTPUT directory)\n    if [[ -d \\\"$OUTPUT\\\" ]]; then\n        local file_count\n        file_count=$(find \\\"$OUTPUT\\\" -type f ! -path \\\"*/.git/*\\\" 2>/dev/null | wc -l)\n        echo \\\"   Files generated: $file_count\\\"·\n        if command -v du >/dev/null 2>&1; then\n            local size\n            size=$(du -sh \\\"$OUTPUT\\\" 2>/dev/null | cut -f1 || echo \\\"unknown\\\")\n            echo \\\"   Total size: $size\\\"\n        fi·\n        if [[ \\\"$VERBOSE\\\" == \\\"true\\\" ]]; then\n            echo \\\"\\\"\n            log_info \\\"Generated files:\\\"\n            find \\\"$OUTPUT\\\" -type f ! -path \\\"*/.git/*\\\" 2>/dev/null | head -10 | sed 's|^|   |'\n            if [[ $file_count -gt 10 ]]; then\n                echo \\\"   ... and $((file_count - 10)) more files\\\"\n            fi\n        fi\n    fi·\n    echo \\\"\\\"\n    log_success \\\"Build completed successfully!\\\"\n    echo \\\"   Run: hugo server -s $OUTPUT to preview locally\\\"\n}·\n# Function to parse command line arguments\nparse_arguments() {\n    while [[ $# -gt 0 ]]; do\n        case $1 in\n            -t|--template)\n                TEMPLATE=\\\"$2\\\"\n                shift 2\n                ;;\n            --theme)\n                THEME=\\\"$2\\\"\n                shift 2\n                ;;\n            -c|--components)\n                COMPONENTS=\\\"$2\\\"\n                shift 2\n                ;;\n            -o|--output)\n                OUTPUT=\\\"$2\\\"\n                shift 2\n                ;;\n            --content)\n                CONTENT=\\\"$2\\\"\n                shift 2\n                ;;\n            --config)\n                CONFIG=\\\"$2\\\"\n                shift 2\n                ;;\n            --minify)\n                MINIFY=true\n                shift\n                ;;\n            --draft)\n                DRAFT=true\n                shift\n                ;;\n            --future)\n                FUTURE=true\n                shift\n                ;;\n            --base-url)\n                BASE_URL=\\\"$2\\\"\n                shift 2\n                ;;\n            -e|--environment)\n                ENVIRONMENT=\\\"$2\\\"\n                shift 2\n                ;;\n            -v|--verbose)\n                VERBOSE=true\n                shift\n                ;;\n            -q|--quiet)\n                QUIET=true\n                shift\n                ;;\n            --log-level)\n                LOG_LEVEL=\\\"$2\\\"\n                shift 2\n                ;;\n            --validate-only)\n                VALIDATE_ONLY=true\n                shift\n                ;;\n            -h|--help)\n                show_usage\n                exit 0\n                ;;\n            *)\n                log_error \\\"Unknown option: $1\\\"\n                echo \\\"\\\"\n                show_usage\n                exit 1\n                ;;\n        esac\n    done\n}·\n# Main function\nmain() {\n    # Parse command line arguments\n    parse_arguments \\\"$@\\\"·\n    # Show header\n    if [[ \\\"$QUIET\\\" != \\\"true\\\" ]]; then\n        print_color \\\"$BLUE\\\" \\\"🏗️  Hugo Template Factory Build Script\\\"\n        print_color \\\"$GRAY\\\" \\\"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\\"\n        echo \\\"\\\"\n    fi·\n    # Validate parameters\n    if ! validate_parameters; then\n        exit 1\n    fi·\n    # If validation only, exit here\n    if [[ \\\"$VALIDATE_ONLY\\\" == \\\"true\\\" ]]; then\n        log_success \\\"Validation completed successfully\\\"\n        exit 0\n    fi·\n    # Parse components configuration\n    parse_components·\n    # Prepare build environment\n    prepare_build_environment·\n    # Update Hugo configuration\n    update_hugo_config·\n    # Run Hugo build\n    run_hugo_build·\n    # Show build summary\n    show_build_summary\n}·\n# Run main function with all arguments\nmain \\\"$@\\\"\"\n    at Object.toMatch (/root/info-tech-io/hugo-templates/tests/unit/logger.test.js:88:38)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Logger System Logger integration with CLI tools should be used in build script",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should be used in build script"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Logger integration with CLI tools"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System Logger integration with CLI tools should be used in Node.js scripts",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should be used in Node.js scripts"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Colored output"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System Colored output should support color codes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should support color codes"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Colored output"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System Colored output should handle no-color environments",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle no-color environments"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "File logging"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System File logging should support file output",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should support file output"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "File logging"
          ],
          "duration": 2,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toMatch(expected)\n\nExpected pattern: /rotation|maxSize|rotate|truncate/\nReceived string:  \"#!/usr/bin/env node·\n/**\n * Hugo Template Factory Framework - Centralized Logging System\n * Provides consistent logging, progress tracking, and debugging capabilities\n */·\nconst chalk = require('chalk');\nconst fs = require('fs-extra');\nconst path = require('path');\nconst util = require('util');·\n/**\n * Log levels\n */\nconst LOG_LEVELS = {\n    DEBUG: 0,\n    INFO: 1,\n    WARN: 2,\n    ERROR: 3,\n    QUIET: 4\n};·\n/**\n * Logger class\n */\nclass Logger {\n    constructor(options = {}) {\n        this.level = LOG_LEVELS[options.level] || LOG_LEVELS.INFO;\n        this.prefix = options.prefix || '';\n        this.colors = options.colors !== false;\n        this.timestamp = options.timestamp || false;\n        this.logFile = options.logFile || null;\n        this.context = options.context || {};·\n        // Initialize log file if specified\n        if (this.logFile) {\n            this.initLogFile();\n        }\n    }·\n    /**\n     * Initialize log file\n     */\n    initLogFile() {\n        try {\n            const logDir = path.dirname(this.logFile);\n            fs.ensureDirSync(logDir);·\n            // Write session header\n            const header = `\\\\n=== Hugo Template Factory Log Session ===\\\\n` +\n                          `Date: ${new Date().toISOString()}\\\\n` +\n                          `Level: ${Object.keys(LOG_LEVELS)[this.level]}\\\\n` +\n                          `Context: ${JSON.stringify(this.context)}\\\\n` +\n                          `${'='.repeat(50)}\\\\n\\\\n`;·\n            fs.appendFileSync(this.logFile, header);\n        } catch (error) {\n            console.error('Failed to initialize log file:', error.message);\n        }\n    }·\n    /**\n     * Write to log file\n     * @param {string} level - Log level\n     * @param {string} message - Message to log\n     * @param {Object} data - Additional data\n     */\n    writeToFile(level, message, data = {}) {\n        if (!this.logFile) return;·\n        try {\n            const timestamp = new Date().toISOString();\n            const contextStr = Object.keys(this.context).length > 0 ?\n                ` [${JSON.stringify(this.context)}]` : '';·\n            let logEntry = `[${timestamp}] ${level.toUpperCase()}${contextStr}: ${message}`;·\n            if (Object.keys(data).length > 0) {\n                logEntry += `\\\\n  Data: ${JSON.stringify(data, null, 2)}`;\n            }·\n            logEntry += '\\\\n';·\n            fs.appendFileSync(this.logFile, logEntry);\n        } catch (error) {\n            // Silently fail to avoid logging loops\n        }\n    }·\n    /**\n     * Format message with timestamp and prefix\n     * @param {string} message - Message to format\n     */\n    formatMessage(message) {\n        let formatted = '';·\n        if (this.timestamp) {\n            const now = new Date();\n            const time = now.toTimeString().split(' ')[0];\n            formatted += chalk.gray(`[${time}] `);\n        }·\n        if (this.prefix) {\n            formatted += chalk.gray(`[${this.prefix}] `);\n        }·\n        formatted += message;\n        return formatted;\n    }·\n    /**\n     * Debug level logging\n     * @param {string} message - Debug message\n     * @param {...any} args - Additional arguments\n     */\n    debug(message, ...args) {\n        if (this.level > LOG_LEVELS.DEBUG) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.gray(`🔍 ${message}`) : `🔍 ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('debug', message, { args });\n    }·\n    /**\n     * Info level logging\n     * @param {string} message - Info message\n     * @param {...any} args - Additional arguments\n     */\n    info(message, ...args) {\n        if (this.level > LOG_LEVELS.INFO) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.blue(`ℹ️  ${message}`) : `ℹ️  ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('info', message, { args });\n    }·\n    /**\n     * Success level logging\n     * @param {string} message - Success message\n     * @param {...any} args - Additional arguments\n     */\n    success(message, ...args) {\n        if (this.level > LOG_LEVELS.INFO) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.green(`✅ ${message}`) : `✅ ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('success', message, { args });\n    }·\n    /**\n     * Warning level logging\n     * @param {string} message - Warning message\n     * @param {...any} args - Additional arguments\n     */\n    warn(message, ...args) {\n        if (this.level > LOG_LEVELS.WARN) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.yellow(`⚠️  ${message}`) : `⚠️  ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('warn', message, { args });\n    }·\n    /**\n     * Error level logging\n     * @param {string} message - Error message\n     * @param {...any} args - Additional arguments\n     */\n    error(message, ...args) {\n        if (this.level > LOG_LEVELS.ERROR) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.red(`❌ ${message}`) : `❌ ${message}`\n        );·\n        console.error(formatted, ...args);\n        this.writeToFile('error', message, { args });\n    }·\n    /**\n     * Always print regardless of log level\n     * @param {string} message - Message to print\n     * @param {...any} args - Additional arguments\n     */\n    print(message, ...args) {\n        const formatted = this.formatMessage(message);\n        console.log(formatted, ...args);\n        this.writeToFile('print', message, { args });\n    }·\n    /**\n     * Create a child logger with additional context\n     * @param {Object} context - Additional context\n     * @returns {Logger} Child logger\n     */\n    child(context) {\n        return new Logger({\n            level: Object.keys(LOG_LEVELS)[this.level],\n            prefix: this.prefix,\n            colors: this.colors,\n            timestamp: this.timestamp,\n            logFile: this.logFile,\n            context: { ...this.context, ...context }\n        });\n    }·\n    /**\n     * Set log level\n     * @param {string} level - Log level name\n     */\n    setLevel(level) {\n        const upperLevel = level.toUpperCase();\n        if (LOG_LEVELS.hasOwnProperty(upperLevel)) {\n            this.level = LOG_LEVELS[upperLevel];\n        } else {\n            this.warn(`Invalid log level: ${level}`);\n        }\n    }·\n    /**\n     * Get current log level name\n     * @returns {string} Log level name\n     */\n    getLevel() {\n        return Object.keys(LOG_LEVELS)[this.level];\n    }\n}·\n/**\n * Progress tracker class\n */\nclass ProgressTracker {\n    constructor(total, options = {}) {\n        this.total = total;\n        this.current = 0;\n        this.label = options.label || 'Progress';\n        this.width = options.width || 40;\n        this.logger = options.logger || new Logger();\n        this.startTime = Date.now();\n        this.showEta = options.showEta !== false;\n        this.showPercent = options.showPercent !== false;\n        this.showCount = options.showCount !== false;\n    }·\n    /**\n     * Update progress\n     * @param {number} increment - Amount to increment (default: 1)\n     * @param {string} message - Optional status message\n     */\n    update(increment = 1, message = '') {\n        this.current = Math.min(this.current + increment, this.total);\n        this.render(message);\n    }·\n    /**\n     * Set progress to specific value\n     * @param {number} value - Progress value\n     * @param {string} message - Optional status message\n     */\n    set(value, message = '') {\n        this.current = Math.min(Math.max(value, 0), this.total);\n        this.render(message);\n    }·\n    /**\n     * Render progress bar\n     * @param {string} message - Optional status message\n     */\n    render(message = '') {\n        const percent = this.total > 0 ? (this.current / this.total) : 0;\n        const filled = Math.floor(percent * this.width);\n        const empty = this.width - filled;·\n        let bar = chalk.green('█'.repeat(filled)) + chalk.gray('░'.repeat(empty));\n        let info = [];·\n        if (this.showPercent) {\n            info.push(`${(percent * 100).toFixed(1)}%`);\n        }·\n        if (this.showCount) {\n            info.push(`${this.current}/${this.total}`);\n        }·\n        if (this.showEta && this.current > 0) {\n            const elapsed = Date.now() - this.startTime;\n            const rate = this.current / elapsed;\n            const remaining = (this.total - this.current) / rate;·\n            if (remaining > 0 && remaining < Infinity) {\n                const eta = new Date(Date.now() + remaining);\n                info.push(`ETA: ${eta.toTimeString().split(' ')[0]}`);\n            }\n        }·\n        const infoStr = info.length > 0 ? ` (${info.join(', ')})` : '';\n        const statusMsg = message ? ` - ${message}` : '';·\n        // Clear line and rewrite\n        process.stdout.write(`\\\\r${this.label}: [${bar}]${infoStr}${statusMsg}`);·\n        // New line when complete\n        if (this.current >= this.total) {\n            process.stdout.write('\\\\n');\n        }\n    }·\n    /**\n     * Complete the progress\n     * @param {string} message - Completion message\n     */\n    complete(message = 'Complete') {\n        this.set(this.total, message);\n    }\n}·\n/**\n * Performance monitor class\n */\nclass PerformanceMonitor {\n    constructor(logger) {\n        this.logger = logger || new Logger();\n        this.timers = new Map();\n        this.counters = new Map();\n        this.memory = [];\n    }·\n    /**\n     * Start a timer\n     * @param {string} name - Timer name\n     */\n    startTimer(name) {\n        this.timers.set(name, {\n            start: process.hrtime.bigint(),\n            end: null\n        });\n        this.logger.debug(`Started timer: ${name}`);\n    }·\n    /**\n     * End a timer\n     * @param {string} name - Timer name\n     * @returns {number} Duration in milliseconds\n     */\n    endTimer(name) {\n        const timer = this.timers.get(name);\n        if (!timer) {\n            this.logger.warn(`Timer '${name}' not found`);\n            return 0;\n        }·\n        timer.end = process.hrtime.bigint();\n        const duration = Number(timer.end - timer.start) / 1000000; // Convert to ms·\n        this.logger.debug(`Timer '${name}' completed: ${duration.toFixed(2)}ms`);\n        return duration;\n    }·\n    /**\n     * Increment a counter\n     * @param {string} name - Counter name\n     * @param {number} increment - Amount to increment (default: 1)\n     */\n    incrementCounter(name, increment = 1) {\n        const current = this.counters.get(name) || 0;\n        this.counters.set(name, current + increment);\n    }·\n    /**\n     * Get counter value\n     * @param {string} name - Counter name\n     * @returns {number} Counter value\n     */\n    getCounter(name) {\n        return this.counters.get(name) || 0;\n    }·\n    /**\n     * Record memory usage\n     * @param {string} label - Memory snapshot label\n     */\n    recordMemory(label) {\n        const usage = process.memoryUsage();\n        this.memory.push({\n            label,\n            timestamp: Date.now(),\n            ...usage\n        });·\n        this.logger.debug(`Memory snapshot '${label}': ${(usage.heapUsed / 1024 / 1024).toFixed(2)}MB`);\n    }·\n    /**\n     * Get performance summary\n     * @returns {Object} Performance summary\n     */\n    getSummary() {\n        const summary = {\n            timers: {},\n            counters: Object.fromEntries(this.counters),\n            memory: this.memory\n        };·\n        // Calculate timer durations\n        for (const [name, timer] of this.timers) {\n            if (timer.end) {\n                summary.timers[name] = Number(timer.end - timer.start) / 1000000;\n            }\n        }·\n        return summary;\n    }·\n    /**\n     * Print performance report\n     */\n    printReport() {\n        const summary = this.getSummary();·\n        this.logger.print(chalk.blue('\\\\n📊 Performance Report'));\n        this.logger.print(chalk.gray('━'.repeat(50)));·\n        // Timers\n        if (Object.keys(summary.timers).length > 0) {\n            this.logger.print(chalk.yellow('\\\\n⏱️  Timers:'));\n            for (const [name, duration] of Object.entries(summary.timers)) {\n                this.logger.print(`   ${name}: ${duration.toFixed(2)}ms`);\n            }\n        }·\n        // Counters\n        if (Object.keys(summary.counters).length > 0) {\n            this.logger.print(chalk.yellow('\\\\n🔢 Counters:'));\n            for (const [name, count] of Object.entries(summary.counters)) {\n                this.logger.print(`   ${name}: ${count}`);\n            }\n        }·\n        // Memory\n        if (summary.memory.length > 0) {\n            this.logger.print(chalk.yellow('\\\\n💾 Memory Usage:'));\n            summary.memory.forEach(snapshot => {\n                const heapMB = (snapshot.heapUsed / 1024 / 1024).toFixed(2);\n                this.logger.print(`   ${snapshot.label}: ${heapMB}MB`);\n            });\n        }\n    }\n}·\n/**\n * Create default logger instance\n */\nfunction createLogger(options = {}) {\n    // Get log level from environment or options\n    const envLevel = process.env.HUGO_LOG_LEVEL;\n    const level = options.level || envLevel || 'INFO';·\n    // Get log file from environment or options\n    const envLogFile = process.env.HUGO_LOG_FILE;\n    const logFile = options.logFile || envLogFile || null;·\n    return new Logger({\n        level,\n        logFile,\n        colors: options.colors !== false && process.stdout.isTTY,\n        timestamp: options.timestamp || false,\n        prefix: options.prefix || '',\n        context: options.context || {}\n    });\n}·\n/**\n * Create progress tracker\n * @param {number} total - Total items\n * @param {Object} options - Options\n * @returns {ProgressTracker} Progress tracker instance\n */\nfunction createProgress(total, options = {}) {\n    return new ProgressTracker(total, options);\n}·\n/**\n * Create performance monitor\n * @param {Logger} logger - Logger instance\n * @returns {PerformanceMonitor} Performance monitor instance\n */\nfunction createPerformanceMonitor(logger) {\n    return new PerformanceMonitor(logger);\n}·\n// Default logger instance\nconst defaultLogger = createLogger();·\nmodule.exports = {\n    Logger,\n    ProgressTracker,\n    PerformanceMonitor,\n    LOG_LEVELS,\n    createLogger,\n    createProgress,\n    createPerformanceMonitor,\n    logger: defaultLogger\n};\"",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toMatch(expected)\n\nExpected pattern: /rotation|maxSize|rotate|truncate/\nReceived string:  \"#!/usr/bin/env node·\n/**\n * Hugo Template Factory Framework - Centralized Logging System\n * Provides consistent logging, progress tracking, and debugging capabilities\n */·\nconst chalk = require('chalk');\nconst fs = require('fs-extra');\nconst path = require('path');\nconst util = require('util');·\n/**\n * Log levels\n */\nconst LOG_LEVELS = {\n    DEBUG: 0,\n    INFO: 1,\n    WARN: 2,\n    ERROR: 3,\n    QUIET: 4\n};·\n/**\n * Logger class\n */\nclass Logger {\n    constructor(options = {}) {\n        this.level = LOG_LEVELS[options.level] || LOG_LEVELS.INFO;\n        this.prefix = options.prefix || '';\n        this.colors = options.colors !== false;\n        this.timestamp = options.timestamp || false;\n        this.logFile = options.logFile || null;\n        this.context = options.context || {};·\n        // Initialize log file if specified\n        if (this.logFile) {\n            this.initLogFile();\n        }\n    }·\n    /**\n     * Initialize log file\n     */\n    initLogFile() {\n        try {\n            const logDir = path.dirname(this.logFile);\n            fs.ensureDirSync(logDir);·\n            // Write session header\n            const header = `\\\\n=== Hugo Template Factory Log Session ===\\\\n` +\n                          `Date: ${new Date().toISOString()}\\\\n` +\n                          `Level: ${Object.keys(LOG_LEVELS)[this.level]}\\\\n` +\n                          `Context: ${JSON.stringify(this.context)}\\\\n` +\n                          `${'='.repeat(50)}\\\\n\\\\n`;·\n            fs.appendFileSync(this.logFile, header);\n        } catch (error) {\n            console.error('Failed to initialize log file:', error.message);\n        }\n    }·\n    /**\n     * Write to log file\n     * @param {string} level - Log level\n     * @param {string} message - Message to log\n     * @param {Object} data - Additional data\n     */\n    writeToFile(level, message, data = {}) {\n        if (!this.logFile) return;·\n        try {\n            const timestamp = new Date().toISOString();\n            const contextStr = Object.keys(this.context).length > 0 ?\n                ` [${JSON.stringify(this.context)}]` : '';·\n            let logEntry = `[${timestamp}] ${level.toUpperCase()}${contextStr}: ${message}`;·\n            if (Object.keys(data).length > 0) {\n                logEntry += `\\\\n  Data: ${JSON.stringify(data, null, 2)}`;\n            }·\n            logEntry += '\\\\n';·\n            fs.appendFileSync(this.logFile, logEntry);\n        } catch (error) {\n            // Silently fail to avoid logging loops\n        }\n    }·\n    /**\n     * Format message with timestamp and prefix\n     * @param {string} message - Message to format\n     */\n    formatMessage(message) {\n        let formatted = '';·\n        if (this.timestamp) {\n            const now = new Date();\n            const time = now.toTimeString().split(' ')[0];\n            formatted += chalk.gray(`[${time}] `);\n        }·\n        if (this.prefix) {\n            formatted += chalk.gray(`[${this.prefix}] `);\n        }·\n        formatted += message;\n        return formatted;\n    }·\n    /**\n     * Debug level logging\n     * @param {string} message - Debug message\n     * @param {...any} args - Additional arguments\n     */\n    debug(message, ...args) {\n        if (this.level > LOG_LEVELS.DEBUG) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.gray(`🔍 ${message}`) : `🔍 ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('debug', message, { args });\n    }·\n    /**\n     * Info level logging\n     * @param {string} message - Info message\n     * @param {...any} args - Additional arguments\n     */\n    info(message, ...args) {\n        if (this.level > LOG_LEVELS.INFO) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.blue(`ℹ️  ${message}`) : `ℹ️  ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('info', message, { args });\n    }·\n    /**\n     * Success level logging\n     * @param {string} message - Success message\n     * @param {...any} args - Additional arguments\n     */\n    success(message, ...args) {\n        if (this.level > LOG_LEVELS.INFO) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.green(`✅ ${message}`) : `✅ ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('success', message, { args });\n    }·\n    /**\n     * Warning level logging\n     * @param {string} message - Warning message\n     * @param {...any} args - Additional arguments\n     */\n    warn(message, ...args) {\n        if (this.level > LOG_LEVELS.WARN) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.yellow(`⚠️  ${message}`) : `⚠️  ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('warn', message, { args });\n    }·\n    /**\n     * Error level logging\n     * @param {string} message - Error message\n     * @param {...any} args - Additional arguments\n     */\n    error(message, ...args) {\n        if (this.level > LOG_LEVELS.ERROR) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.red(`❌ ${message}`) : `❌ ${message}`\n        );·\n        console.error(formatted, ...args);\n        this.writeToFile('error', message, { args });\n    }·\n    /**\n     * Always print regardless of log level\n     * @param {string} message - Message to print\n     * @param {...any} args - Additional arguments\n     */\n    print(message, ...args) {\n        const formatted = this.formatMessage(message);\n        console.log(formatted, ...args);\n        this.writeToFile('print', message, { args });\n    }·\n    /**\n     * Create a child logger with additional context\n     * @param {Object} context - Additional context\n     * @returns {Logger} Child logger\n     */\n    child(context) {\n        return new Logger({\n            level: Object.keys(LOG_LEVELS)[this.level],\n            prefix: this.prefix,\n            colors: this.colors,\n            timestamp: this.timestamp,\n            logFile: this.logFile,\n            context: { ...this.context, ...context }\n        });\n    }·\n    /**\n     * Set log level\n     * @param {string} level - Log level name\n     */\n    setLevel(level) {\n        const upperLevel = level.toUpperCase();\n        if (LOG_LEVELS.hasOwnProperty(upperLevel)) {\n            this.level = LOG_LEVELS[upperLevel];\n        } else {\n            this.warn(`Invalid log level: ${level}`);\n        }\n    }·\n    /**\n     * Get current log level name\n     * @returns {string} Log level name\n     */\n    getLevel() {\n        return Object.keys(LOG_LEVELS)[this.level];\n    }\n}·\n/**\n * Progress tracker class\n */\nclass ProgressTracker {\n    constructor(total, options = {}) {\n        this.total = total;\n        this.current = 0;\n        this.label = options.label || 'Progress';\n        this.width = options.width || 40;\n        this.logger = options.logger || new Logger();\n        this.startTime = Date.now();\n        this.showEta = options.showEta !== false;\n        this.showPercent = options.showPercent !== false;\n        this.showCount = options.showCount !== false;\n    }·\n    /**\n     * Update progress\n     * @param {number} increment - Amount to increment (default: 1)\n     * @param {string} message - Optional status message\n     */\n    update(increment = 1, message = '') {\n        this.current = Math.min(this.current + increment, this.total);\n        this.render(message);\n    }·\n    /**\n     * Set progress to specific value\n     * @param {number} value - Progress value\n     * @param {string} message - Optional status message\n     */\n    set(value, message = '') {\n        this.current = Math.min(Math.max(value, 0), this.total);\n        this.render(message);\n    }·\n    /**\n     * Render progress bar\n     * @param {string} message - Optional status message\n     */\n    render(message = '') {\n        const percent = this.total > 0 ? (this.current / this.total) : 0;\n        const filled = Math.floor(percent * this.width);\n        const empty = this.width - filled;·\n        let bar = chalk.green('█'.repeat(filled)) + chalk.gray('░'.repeat(empty));\n        let info = [];·\n        if (this.showPercent) {\n            info.push(`${(percent * 100).toFixed(1)}%`);\n        }·\n        if (this.showCount) {\n            info.push(`${this.current}/${this.total}`);\n        }·\n        if (this.showEta && this.current > 0) {\n            const elapsed = Date.now() - this.startTime;\n            const rate = this.current / elapsed;\n            const remaining = (this.total - this.current) / rate;·\n            if (remaining > 0 && remaining < Infinity) {\n                const eta = new Date(Date.now() + remaining);\n                info.push(`ETA: ${eta.toTimeString().split(' ')[0]}`);\n            }\n        }·\n        const infoStr = info.length > 0 ? ` (${info.join(', ')})` : '';\n        const statusMsg = message ? ` - ${message}` : '';·\n        // Clear line and rewrite\n        process.stdout.write(`\\\\r${this.label}: [${bar}]${infoStr}${statusMsg}`);·\n        // New line when complete\n        if (this.current >= this.total) {\n            process.stdout.write('\\\\n');\n        }\n    }·\n    /**\n     * Complete the progress\n     * @param {string} message - Completion message\n     */\n    complete(message = 'Complete') {\n        this.set(this.total, message);\n    }\n}·\n/**\n * Performance monitor class\n */\nclass PerformanceMonitor {\n    constructor(logger) {\n        this.logger = logger || new Logger();\n        this.timers = new Map();\n        this.counters = new Map();\n        this.memory = [];\n    }·\n    /**\n     * Start a timer\n     * @param {string} name - Timer name\n     */\n    startTimer(name) {\n        this.timers.set(name, {\n            start: process.hrtime.bigint(),\n            end: null\n        });\n        this.logger.debug(`Started timer: ${name}`);\n    }·\n    /**\n     * End a timer\n     * @param {string} name - Timer name\n     * @returns {number} Duration in milliseconds\n     */\n    endTimer(name) {\n        const timer = this.timers.get(name);\n        if (!timer) {\n            this.logger.warn(`Timer '${name}' not found`);\n            return 0;\n        }·\n        timer.end = process.hrtime.bigint();\n        const duration = Number(timer.end - timer.start) / 1000000; // Convert to ms·\n        this.logger.debug(`Timer '${name}' completed: ${duration.toFixed(2)}ms`);\n        return duration;\n    }·\n    /**\n     * Increment a counter\n     * @param {string} name - Counter name\n     * @param {number} increment - Amount to increment (default: 1)\n     */\n    incrementCounter(name, increment = 1) {\n        const current = this.counters.get(name) || 0;\n        this.counters.set(name, current + increment);\n    }·\n    /**\n     * Get counter value\n     * @param {string} name - Counter name\n     * @returns {number} Counter value\n     */\n    getCounter(name) {\n        return this.counters.get(name) || 0;\n    }·\n    /**\n     * Record memory usage\n     * @param {string} label - Memory snapshot label\n     */\n    recordMemory(label) {\n        const usage = process.memoryUsage();\n        this.memory.push({\n            label,\n            timestamp: Date.now(),\n            ...usage\n        });·\n        this.logger.debug(`Memory snapshot '${label}': ${(usage.heapUsed / 1024 / 1024).toFixed(2)}MB`);\n    }·\n    /**\n     * Get performance summary\n     * @returns {Object} Performance summary\n     */\n    getSummary() {\n        const summary = {\n            timers: {},\n            counters: Object.fromEntries(this.counters),\n            memory: this.memory\n        };·\n        // Calculate timer durations\n        for (const [name, timer] of this.timers) {\n            if (timer.end) {\n                summary.timers[name] = Number(timer.end - timer.start) / 1000000;\n            }\n        }·\n        return summary;\n    }·\n    /**\n     * Print performance report\n     */\n    printReport() {\n        const summary = this.getSummary();·\n        this.logger.print(chalk.blue('\\\\n📊 Performance Report'));\n        this.logger.print(chalk.gray('━'.repeat(50)));·\n        // Timers\n        if (Object.keys(summary.timers).length > 0) {\n            this.logger.print(chalk.yellow('\\\\n⏱️  Timers:'));\n            for (const [name, duration] of Object.entries(summary.timers)) {\n                this.logger.print(`   ${name}: ${duration.toFixed(2)}ms`);\n            }\n        }·\n        // Counters\n        if (Object.keys(summary.counters).length > 0) {\n            this.logger.print(chalk.yellow('\\\\n🔢 Counters:'));\n            for (const [name, count] of Object.entries(summary.counters)) {\n                this.logger.print(`   ${name}: ${count}`);\n            }\n        }·\n        // Memory\n        if (summary.memory.length > 0) {\n            this.logger.print(chalk.yellow('\\\\n💾 Memory Usage:'));\n            summary.memory.forEach(snapshot => {\n                const heapMB = (snapshot.heapUsed / 1024 / 1024).toFixed(2);\n                this.logger.print(`   ${snapshot.label}: ${heapMB}MB`);\n            });\n        }\n    }\n}·\n/**\n * Create default logger instance\n */\nfunction createLogger(options = {}) {\n    // Get log level from environment or options\n    const envLevel = process.env.HUGO_LOG_LEVEL;\n    const level = options.level || envLevel || 'INFO';·\n    // Get log file from environment or options\n    const envLogFile = process.env.HUGO_LOG_FILE;\n    const logFile = options.logFile || envLogFile || null;·\n    return new Logger({\n        level,\n        logFile,\n        colors: options.colors !== false && process.stdout.isTTY,\n        timestamp: options.timestamp || false,\n        prefix: options.prefix || '',\n        context: options.context || {}\n    });\n}·\n/**\n * Create progress tracker\n * @param {number} total - Total items\n * @param {Object} options - Options\n * @returns {ProgressTracker} Progress tracker instance\n */\nfunction createProgress(total, options = {}) {\n    return new ProgressTracker(total, options);\n}·\n/**\n * Create performance monitor\n * @param {Logger} logger - Logger instance\n * @returns {PerformanceMonitor} Performance monitor instance\n */\nfunction createPerformanceMonitor(logger) {\n    return new PerformanceMonitor(logger);\n}·\n// Default logger instance\nconst defaultLogger = createLogger();·\nmodule.exports = {\n    Logger,\n    ProgressTracker,\n    PerformanceMonitor,\n    LOG_LEVELS,\n    createLogger,\n    createProgress,\n    createPerformanceMonitor,\n    logger: defaultLogger\n};\"\n    at Object.toMatch (/root/info-tech-io/hugo-templates/tests/unit/logger.test.js:144:35)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Logger System File logging should handle log rotation",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle log rotation"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Performance monitoring"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System Performance monitoring should support timing operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should support timing operations"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Performance monitoring"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System Performance monitoring should support progress tracking",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should support progress tracking"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Error handling"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System Error handling should handle logging errors gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle logging errors gracefully"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Error handling"
          ],
          "duration": 2,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toMatch(expected)\n\nExpected pattern: /typeof|instanceof|validate|check/\nReceived string:  \"#!/usr/bin/env node·\n/**\n * Hugo Template Factory Framework - Centralized Logging System\n * Provides consistent logging, progress tracking, and debugging capabilities\n */·\nconst chalk = require('chalk');\nconst fs = require('fs-extra');\nconst path = require('path');\nconst util = require('util');·\n/**\n * Log levels\n */\nconst LOG_LEVELS = {\n    DEBUG: 0,\n    INFO: 1,\n    WARN: 2,\n    ERROR: 3,\n    QUIET: 4\n};·\n/**\n * Logger class\n */\nclass Logger {\n    constructor(options = {}) {\n        this.level = LOG_LEVELS[options.level] || LOG_LEVELS.INFO;\n        this.prefix = options.prefix || '';\n        this.colors = options.colors !== false;\n        this.timestamp = options.timestamp || false;\n        this.logFile = options.logFile || null;\n        this.context = options.context || {};·\n        // Initialize log file if specified\n        if (this.logFile) {\n            this.initLogFile();\n        }\n    }·\n    /**\n     * Initialize log file\n     */\n    initLogFile() {\n        try {\n            const logDir = path.dirname(this.logFile);\n            fs.ensureDirSync(logDir);·\n            // Write session header\n            const header = `\\\\n=== Hugo Template Factory Log Session ===\\\\n` +\n                          `Date: ${new Date().toISOString()}\\\\n` +\n                          `Level: ${Object.keys(LOG_LEVELS)[this.level]}\\\\n` +\n                          `Context: ${JSON.stringify(this.context)}\\\\n` +\n                          `${'='.repeat(50)}\\\\n\\\\n`;·\n            fs.appendFileSync(this.logFile, header);\n        } catch (error) {\n            console.error('Failed to initialize log file:', error.message);\n        }\n    }·\n    /**\n     * Write to log file\n     * @param {string} level - Log level\n     * @param {string} message - Message to log\n     * @param {Object} data - Additional data\n     */\n    writeToFile(level, message, data = {}) {\n        if (!this.logFile) return;·\n        try {\n            const timestamp = new Date().toISOString();\n            const contextStr = Object.keys(this.context).length > 0 ?\n                ` [${JSON.stringify(this.context)}]` : '';·\n            let logEntry = `[${timestamp}] ${level.toUpperCase()}${contextStr}: ${message}`;·\n            if (Object.keys(data).length > 0) {\n                logEntry += `\\\\n  Data: ${JSON.stringify(data, null, 2)}`;\n            }·\n            logEntry += '\\\\n';·\n            fs.appendFileSync(this.logFile, logEntry);\n        } catch (error) {\n            // Silently fail to avoid logging loops\n        }\n    }·\n    /**\n     * Format message with timestamp and prefix\n     * @param {string} message - Message to format\n     */\n    formatMessage(message) {\n        let formatted = '';·\n        if (this.timestamp) {\n            const now = new Date();\n            const time = now.toTimeString().split(' ')[0];\n            formatted += chalk.gray(`[${time}] `);\n        }·\n        if (this.prefix) {\n            formatted += chalk.gray(`[${this.prefix}] `);\n        }·\n        formatted += message;\n        return formatted;\n    }·\n    /**\n     * Debug level logging\n     * @param {string} message - Debug message\n     * @param {...any} args - Additional arguments\n     */\n    debug(message, ...args) {\n        if (this.level > LOG_LEVELS.DEBUG) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.gray(`🔍 ${message}`) : `🔍 ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('debug', message, { args });\n    }·\n    /**\n     * Info level logging\n     * @param {string} message - Info message\n     * @param {...any} args - Additional arguments\n     */\n    info(message, ...args) {\n        if (this.level > LOG_LEVELS.INFO) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.blue(`ℹ️  ${message}`) : `ℹ️  ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('info', message, { args });\n    }·\n    /**\n     * Success level logging\n     * @param {string} message - Success message\n     * @param {...any} args - Additional arguments\n     */\n    success(message, ...args) {\n        if (this.level > LOG_LEVELS.INFO) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.green(`✅ ${message}`) : `✅ ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('success', message, { args });\n    }·\n    /**\n     * Warning level logging\n     * @param {string} message - Warning message\n     * @param {...any} args - Additional arguments\n     */\n    warn(message, ...args) {\n        if (this.level > LOG_LEVELS.WARN) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.yellow(`⚠️  ${message}`) : `⚠️  ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('warn', message, { args });\n    }·\n    /**\n     * Error level logging\n     * @param {string} message - Error message\n     * @param {...any} args - Additional arguments\n     */\n    error(message, ...args) {\n        if (this.level > LOG_LEVELS.ERROR) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.red(`❌ ${message}`) : `❌ ${message}`\n        );·\n        console.error(formatted, ...args);\n        this.writeToFile('error', message, { args });\n    }·\n    /**\n     * Always print regardless of log level\n     * @param {string} message - Message to print\n     * @param {...any} args - Additional arguments\n     */\n    print(message, ...args) {\n        const formatted = this.formatMessage(message);\n        console.log(formatted, ...args);\n        this.writeToFile('print', message, { args });\n    }·\n    /**\n     * Create a child logger with additional context\n     * @param {Object} context - Additional context\n     * @returns {Logger} Child logger\n     */\n    child(context) {\n        return new Logger({\n            level: Object.keys(LOG_LEVELS)[this.level],\n            prefix: this.prefix,\n            colors: this.colors,\n            timestamp: this.timestamp,\n            logFile: this.logFile,\n            context: { ...this.context, ...context }\n        });\n    }·\n    /**\n     * Set log level\n     * @param {string} level - Log level name\n     */\n    setLevel(level) {\n        const upperLevel = level.toUpperCase();\n        if (LOG_LEVELS.hasOwnProperty(upperLevel)) {\n            this.level = LOG_LEVELS[upperLevel];\n        } else {\n            this.warn(`Invalid log level: ${level}`);\n        }\n    }·\n    /**\n     * Get current log level name\n     * @returns {string} Log level name\n     */\n    getLevel() {\n        return Object.keys(LOG_LEVELS)[this.level];\n    }\n}·\n/**\n * Progress tracker class\n */\nclass ProgressTracker {\n    constructor(total, options = {}) {\n        this.total = total;\n        this.current = 0;\n        this.label = options.label || 'Progress';\n        this.width = options.width || 40;\n        this.logger = options.logger || new Logger();\n        this.startTime = Date.now();\n        this.showEta = options.showEta !== false;\n        this.showPercent = options.showPercent !== false;\n        this.showCount = options.showCount !== false;\n    }·\n    /**\n     * Update progress\n     * @param {number} increment - Amount to increment (default: 1)\n     * @param {string} message - Optional status message\n     */\n    update(increment = 1, message = '') {\n        this.current = Math.min(this.current + increment, this.total);\n        this.render(message);\n    }·\n    /**\n     * Set progress to specific value\n     * @param {number} value - Progress value\n     * @param {string} message - Optional status message\n     */\n    set(value, message = '') {\n        this.current = Math.min(Math.max(value, 0), this.total);\n        this.render(message);\n    }·\n    /**\n     * Render progress bar\n     * @param {string} message - Optional status message\n     */\n    render(message = '') {\n        const percent = this.total > 0 ? (this.current / this.total) : 0;\n        const filled = Math.floor(percent * this.width);\n        const empty = this.width - filled;·\n        let bar = chalk.green('█'.repeat(filled)) + chalk.gray('░'.repeat(empty));\n        let info = [];·\n        if (this.showPercent) {\n            info.push(`${(percent * 100).toFixed(1)}%`);\n        }·\n        if (this.showCount) {\n            info.push(`${this.current}/${this.total}`);\n        }·\n        if (this.showEta && this.current > 0) {\n            const elapsed = Date.now() - this.startTime;\n            const rate = this.current / elapsed;\n            const remaining = (this.total - this.current) / rate;·\n            if (remaining > 0 && remaining < Infinity) {\n                const eta = new Date(Date.now() + remaining);\n                info.push(`ETA: ${eta.toTimeString().split(' ')[0]}`);\n            }\n        }·\n        const infoStr = info.length > 0 ? ` (${info.join(', ')})` : '';\n        const statusMsg = message ? ` - ${message}` : '';·\n        // Clear line and rewrite\n        process.stdout.write(`\\\\r${this.label}: [${bar}]${infoStr}${statusMsg}`);·\n        // New line when complete\n        if (this.current >= this.total) {\n            process.stdout.write('\\\\n');\n        }\n    }·\n    /**\n     * Complete the progress\n     * @param {string} message - Completion message\n     */\n    complete(message = 'Complete') {\n        this.set(this.total, message);\n    }\n}·\n/**\n * Performance monitor class\n */\nclass PerformanceMonitor {\n    constructor(logger) {\n        this.logger = logger || new Logger();\n        this.timers = new Map();\n        this.counters = new Map();\n        this.memory = [];\n    }·\n    /**\n     * Start a timer\n     * @param {string} name - Timer name\n     */\n    startTimer(name) {\n        this.timers.set(name, {\n            start: process.hrtime.bigint(),\n            end: null\n        });\n        this.logger.debug(`Started timer: ${name}`);\n    }·\n    /**\n     * End a timer\n     * @param {string} name - Timer name\n     * @returns {number} Duration in milliseconds\n     */\n    endTimer(name) {\n        const timer = this.timers.get(name);\n        if (!timer) {\n            this.logger.warn(`Timer '${name}' not found`);\n            return 0;\n        }·\n        timer.end = process.hrtime.bigint();\n        const duration = Number(timer.end - timer.start) / 1000000; // Convert to ms·\n        this.logger.debug(`Timer '${name}' completed: ${duration.toFixed(2)}ms`);\n        return duration;\n    }·\n    /**\n     * Increment a counter\n     * @param {string} name - Counter name\n     * @param {number} increment - Amount to increment (default: 1)\n     */\n    incrementCounter(name, increment = 1) {\n        const current = this.counters.get(name) || 0;\n        this.counters.set(name, current + increment);\n    }·\n    /**\n     * Get counter value\n     * @param {string} name - Counter name\n     * @returns {number} Counter value\n     */\n    getCounter(name) {\n        return this.counters.get(name) || 0;\n    }·\n    /**\n     * Record memory usage\n     * @param {string} label - Memory snapshot label\n     */\n    recordMemory(label) {\n        const usage = process.memoryUsage();\n        this.memory.push({\n            label,\n            timestamp: Date.now(),\n            ...usage\n        });·\n        this.logger.debug(`Memory snapshot '${label}': ${(usage.heapUsed / 1024 / 1024).toFixed(2)}MB`);\n    }·\n    /**\n     * Get performance summary\n     * @returns {Object} Performance summary\n     */\n    getSummary() {\n        const summary = {\n            timers: {},\n            counters: Object.fromEntries(this.counters),\n            memory: this.memory\n        };·\n        // Calculate timer durations\n        for (const [name, timer] of this.timers) {\n            if (timer.end) {\n                summary.timers[name] = Number(timer.end - timer.start) / 1000000;\n            }\n        }·\n        return summary;\n    }·\n    /**\n     * Print performance report\n     */\n    printReport() {\n        const summary = this.getSummary();·\n        this.logger.print(chalk.blue('\\\\n📊 Performance Report'));\n        this.logger.print(chalk.gray('━'.repeat(50)));·\n        // Timers\n        if (Object.keys(summary.timers).length > 0) {\n            this.logger.print(chalk.yellow('\\\\n⏱️  Timers:'));\n            for (const [name, duration] of Object.entries(summary.timers)) {\n                this.logger.print(`   ${name}: ${duration.toFixed(2)}ms`);\n            }\n        }·\n        // Counters\n        if (Object.keys(summary.counters).length > 0) {\n            this.logger.print(chalk.yellow('\\\\n🔢 Counters:'));\n            for (const [name, count] of Object.entries(summary.counters)) {\n                this.logger.print(`   ${name}: ${count}`);\n            }\n        }·\n        // Memory\n        if (summary.memory.length > 0) {\n            this.logger.print(chalk.yellow('\\\\n💾 Memory Usage:'));\n            summary.memory.forEach(snapshot => {\n                const heapMB = (snapshot.heapUsed / 1024 / 1024).toFixed(2);\n                this.logger.print(`   ${snapshot.label}: ${heapMB}MB`);\n            });\n        }\n    }\n}·\n/**\n * Create default logger instance\n */\nfunction createLogger(options = {}) {\n    // Get log level from environment or options\n    const envLevel = process.env.HUGO_LOG_LEVEL;\n    const level = options.level || envLevel || 'INFO';·\n    // Get log file from environment or options\n    const envLogFile = process.env.HUGO_LOG_FILE;\n    const logFile = options.logFile || envLogFile || null;·\n    return new Logger({\n        level,\n        logFile,\n        colors: options.colors !== false && process.stdout.isTTY,\n        timestamp: options.timestamp || false,\n        prefix: options.prefix || '',\n        context: options.context || {}\n    });\n}·\n/**\n * Create progress tracker\n * @param {number} total - Total items\n * @param {Object} options - Options\n * @returns {ProgressTracker} Progress tracker instance\n */\nfunction createProgress(total, options = {}) {\n    return new ProgressTracker(total, options);\n}·\n/**\n * Create performance monitor\n * @param {Logger} logger - Logger instance\n * @returns {PerformanceMonitor} Performance monitor instance\n */\nfunction createPerformanceMonitor(logger) {\n    return new PerformanceMonitor(logger);\n}·\n// Default logger instance\nconst defaultLogger = createLogger();·\nmodule.exports = {\n    Logger,\n    ProgressTracker,\n    PerformanceMonitor,\n    LOG_LEVELS,\n    createLogger,\n    createProgress,\n    createPerformanceMonitor,\n    logger: defaultLogger\n};\"",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toMatch(expected)\n\nExpected pattern: /typeof|instanceof|validate|check/\nReceived string:  \"#!/usr/bin/env node·\n/**\n * Hugo Template Factory Framework - Centralized Logging System\n * Provides consistent logging, progress tracking, and debugging capabilities\n */·\nconst chalk = require('chalk');\nconst fs = require('fs-extra');\nconst path = require('path');\nconst util = require('util');·\n/**\n * Log levels\n */\nconst LOG_LEVELS = {\n    DEBUG: 0,\n    INFO: 1,\n    WARN: 2,\n    ERROR: 3,\n    QUIET: 4\n};·\n/**\n * Logger class\n */\nclass Logger {\n    constructor(options = {}) {\n        this.level = LOG_LEVELS[options.level] || LOG_LEVELS.INFO;\n        this.prefix = options.prefix || '';\n        this.colors = options.colors !== false;\n        this.timestamp = options.timestamp || false;\n        this.logFile = options.logFile || null;\n        this.context = options.context || {};·\n        // Initialize log file if specified\n        if (this.logFile) {\n            this.initLogFile();\n        }\n    }·\n    /**\n     * Initialize log file\n     */\n    initLogFile() {\n        try {\n            const logDir = path.dirname(this.logFile);\n            fs.ensureDirSync(logDir);·\n            // Write session header\n            const header = `\\\\n=== Hugo Template Factory Log Session ===\\\\n` +\n                          `Date: ${new Date().toISOString()}\\\\n` +\n                          `Level: ${Object.keys(LOG_LEVELS)[this.level]}\\\\n` +\n                          `Context: ${JSON.stringify(this.context)}\\\\n` +\n                          `${'='.repeat(50)}\\\\n\\\\n`;·\n            fs.appendFileSync(this.logFile, header);\n        } catch (error) {\n            console.error('Failed to initialize log file:', error.message);\n        }\n    }·\n    /**\n     * Write to log file\n     * @param {string} level - Log level\n     * @param {string} message - Message to log\n     * @param {Object} data - Additional data\n     */\n    writeToFile(level, message, data = {}) {\n        if (!this.logFile) return;·\n        try {\n            const timestamp = new Date().toISOString();\n            const contextStr = Object.keys(this.context).length > 0 ?\n                ` [${JSON.stringify(this.context)}]` : '';·\n            let logEntry = `[${timestamp}] ${level.toUpperCase()}${contextStr}: ${message}`;·\n            if (Object.keys(data).length > 0) {\n                logEntry += `\\\\n  Data: ${JSON.stringify(data, null, 2)}`;\n            }·\n            logEntry += '\\\\n';·\n            fs.appendFileSync(this.logFile, logEntry);\n        } catch (error) {\n            // Silently fail to avoid logging loops\n        }\n    }·\n    /**\n     * Format message with timestamp and prefix\n     * @param {string} message - Message to format\n     */\n    formatMessage(message) {\n        let formatted = '';·\n        if (this.timestamp) {\n            const now = new Date();\n            const time = now.toTimeString().split(' ')[0];\n            formatted += chalk.gray(`[${time}] `);\n        }·\n        if (this.prefix) {\n            formatted += chalk.gray(`[${this.prefix}] `);\n        }·\n        formatted += message;\n        return formatted;\n    }·\n    /**\n     * Debug level logging\n     * @param {string} message - Debug message\n     * @param {...any} args - Additional arguments\n     */\n    debug(message, ...args) {\n        if (this.level > LOG_LEVELS.DEBUG) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.gray(`🔍 ${message}`) : `🔍 ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('debug', message, { args });\n    }·\n    /**\n     * Info level logging\n     * @param {string} message - Info message\n     * @param {...any} args - Additional arguments\n     */\n    info(message, ...args) {\n        if (this.level > LOG_LEVELS.INFO) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.blue(`ℹ️  ${message}`) : `ℹ️  ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('info', message, { args });\n    }·\n    /**\n     * Success level logging\n     * @param {string} message - Success message\n     * @param {...any} args - Additional arguments\n     */\n    success(message, ...args) {\n        if (this.level > LOG_LEVELS.INFO) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.green(`✅ ${message}`) : `✅ ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('success', message, { args });\n    }·\n    /**\n     * Warning level logging\n     * @param {string} message - Warning message\n     * @param {...any} args - Additional arguments\n     */\n    warn(message, ...args) {\n        if (this.level > LOG_LEVELS.WARN) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.yellow(`⚠️  ${message}`) : `⚠️  ${message}`\n        );·\n        console.log(formatted, ...args);\n        this.writeToFile('warn', message, { args });\n    }·\n    /**\n     * Error level logging\n     * @param {string} message - Error message\n     * @param {...any} args - Additional arguments\n     */\n    error(message, ...args) {\n        if (this.level > LOG_LEVELS.ERROR) return;·\n        const formatted = this.formatMessage(\n            this.colors ? chalk.red(`❌ ${message}`) : `❌ ${message}`\n        );·\n        console.error(formatted, ...args);\n        this.writeToFile('error', message, { args });\n    }·\n    /**\n     * Always print regardless of log level\n     * @param {string} message - Message to print\n     * @param {...any} args - Additional arguments\n     */\n    print(message, ...args) {\n        const formatted = this.formatMessage(message);\n        console.log(formatted, ...args);\n        this.writeToFile('print', message, { args });\n    }·\n    /**\n     * Create a child logger with additional context\n     * @param {Object} context - Additional context\n     * @returns {Logger} Child logger\n     */\n    child(context) {\n        return new Logger({\n            level: Object.keys(LOG_LEVELS)[this.level],\n            prefix: this.prefix,\n            colors: this.colors,\n            timestamp: this.timestamp,\n            logFile: this.logFile,\n            context: { ...this.context, ...context }\n        });\n    }·\n    /**\n     * Set log level\n     * @param {string} level - Log level name\n     */\n    setLevel(level) {\n        const upperLevel = level.toUpperCase();\n        if (LOG_LEVELS.hasOwnProperty(upperLevel)) {\n            this.level = LOG_LEVELS[upperLevel];\n        } else {\n            this.warn(`Invalid log level: ${level}`);\n        }\n    }·\n    /**\n     * Get current log level name\n     * @returns {string} Log level name\n     */\n    getLevel() {\n        return Object.keys(LOG_LEVELS)[this.level];\n    }\n}·\n/**\n * Progress tracker class\n */\nclass ProgressTracker {\n    constructor(total, options = {}) {\n        this.total = total;\n        this.current = 0;\n        this.label = options.label || 'Progress';\n        this.width = options.width || 40;\n        this.logger = options.logger || new Logger();\n        this.startTime = Date.now();\n        this.showEta = options.showEta !== false;\n        this.showPercent = options.showPercent !== false;\n        this.showCount = options.showCount !== false;\n    }·\n    /**\n     * Update progress\n     * @param {number} increment - Amount to increment (default: 1)\n     * @param {string} message - Optional status message\n     */\n    update(increment = 1, message = '') {\n        this.current = Math.min(this.current + increment, this.total);\n        this.render(message);\n    }·\n    /**\n     * Set progress to specific value\n     * @param {number} value - Progress value\n     * @param {string} message - Optional status message\n     */\n    set(value, message = '') {\n        this.current = Math.min(Math.max(value, 0), this.total);\n        this.render(message);\n    }·\n    /**\n     * Render progress bar\n     * @param {string} message - Optional status message\n     */\n    render(message = '') {\n        const percent = this.total > 0 ? (this.current / this.total) : 0;\n        const filled = Math.floor(percent * this.width);\n        const empty = this.width - filled;·\n        let bar = chalk.green('█'.repeat(filled)) + chalk.gray('░'.repeat(empty));\n        let info = [];·\n        if (this.showPercent) {\n            info.push(`${(percent * 100).toFixed(1)}%`);\n        }·\n        if (this.showCount) {\n            info.push(`${this.current}/${this.total}`);\n        }·\n        if (this.showEta && this.current > 0) {\n            const elapsed = Date.now() - this.startTime;\n            const rate = this.current / elapsed;\n            const remaining = (this.total - this.current) / rate;·\n            if (remaining > 0 && remaining < Infinity) {\n                const eta = new Date(Date.now() + remaining);\n                info.push(`ETA: ${eta.toTimeString().split(' ')[0]}`);\n            }\n        }·\n        const infoStr = info.length > 0 ? ` (${info.join(', ')})` : '';\n        const statusMsg = message ? ` - ${message}` : '';·\n        // Clear line and rewrite\n        process.stdout.write(`\\\\r${this.label}: [${bar}]${infoStr}${statusMsg}`);·\n        // New line when complete\n        if (this.current >= this.total) {\n            process.stdout.write('\\\\n');\n        }\n    }·\n    /**\n     * Complete the progress\n     * @param {string} message - Completion message\n     */\n    complete(message = 'Complete') {\n        this.set(this.total, message);\n    }\n}·\n/**\n * Performance monitor class\n */\nclass PerformanceMonitor {\n    constructor(logger) {\n        this.logger = logger || new Logger();\n        this.timers = new Map();\n        this.counters = new Map();\n        this.memory = [];\n    }·\n    /**\n     * Start a timer\n     * @param {string} name - Timer name\n     */\n    startTimer(name) {\n        this.timers.set(name, {\n            start: process.hrtime.bigint(),\n            end: null\n        });\n        this.logger.debug(`Started timer: ${name}`);\n    }·\n    /**\n     * End a timer\n     * @param {string} name - Timer name\n     * @returns {number} Duration in milliseconds\n     */\n    endTimer(name) {\n        const timer = this.timers.get(name);\n        if (!timer) {\n            this.logger.warn(`Timer '${name}' not found`);\n            return 0;\n        }·\n        timer.end = process.hrtime.bigint();\n        const duration = Number(timer.end - timer.start) / 1000000; // Convert to ms·\n        this.logger.debug(`Timer '${name}' completed: ${duration.toFixed(2)}ms`);\n        return duration;\n    }·\n    /**\n     * Increment a counter\n     * @param {string} name - Counter name\n     * @param {number} increment - Amount to increment (default: 1)\n     */\n    incrementCounter(name, increment = 1) {\n        const current = this.counters.get(name) || 0;\n        this.counters.set(name, current + increment);\n    }·\n    /**\n     * Get counter value\n     * @param {string} name - Counter name\n     * @returns {number} Counter value\n     */\n    getCounter(name) {\n        return this.counters.get(name) || 0;\n    }·\n    /**\n     * Record memory usage\n     * @param {string} label - Memory snapshot label\n     */\n    recordMemory(label) {\n        const usage = process.memoryUsage();\n        this.memory.push({\n            label,\n            timestamp: Date.now(),\n            ...usage\n        });·\n        this.logger.debug(`Memory snapshot '${label}': ${(usage.heapUsed / 1024 / 1024).toFixed(2)}MB`);\n    }·\n    /**\n     * Get performance summary\n     * @returns {Object} Performance summary\n     */\n    getSummary() {\n        const summary = {\n            timers: {},\n            counters: Object.fromEntries(this.counters),\n            memory: this.memory\n        };·\n        // Calculate timer durations\n        for (const [name, timer] of this.timers) {\n            if (timer.end) {\n                summary.timers[name] = Number(timer.end - timer.start) / 1000000;\n            }\n        }·\n        return summary;\n    }·\n    /**\n     * Print performance report\n     */\n    printReport() {\n        const summary = this.getSummary();·\n        this.logger.print(chalk.blue('\\\\n📊 Performance Report'));\n        this.logger.print(chalk.gray('━'.repeat(50)));·\n        // Timers\n        if (Object.keys(summary.timers).length > 0) {\n            this.logger.print(chalk.yellow('\\\\n⏱️  Timers:'));\n            for (const [name, duration] of Object.entries(summary.timers)) {\n                this.logger.print(`   ${name}: ${duration.toFixed(2)}ms`);\n            }\n        }·\n        // Counters\n        if (Object.keys(summary.counters).length > 0) {\n            this.logger.print(chalk.yellow('\\\\n🔢 Counters:'));\n            for (const [name, count] of Object.entries(summary.counters)) {\n                this.logger.print(`   ${name}: ${count}`);\n            }\n        }·\n        // Memory\n        if (summary.memory.length > 0) {\n            this.logger.print(chalk.yellow('\\\\n💾 Memory Usage:'));\n            summary.memory.forEach(snapshot => {\n                const heapMB = (snapshot.heapUsed / 1024 / 1024).toFixed(2);\n                this.logger.print(`   ${snapshot.label}: ${heapMB}MB`);\n            });\n        }\n    }\n}·\n/**\n * Create default logger instance\n */\nfunction createLogger(options = {}) {\n    // Get log level from environment or options\n    const envLevel = process.env.HUGO_LOG_LEVEL;\n    const level = options.level || envLevel || 'INFO';·\n    // Get log file from environment or options\n    const envLogFile = process.env.HUGO_LOG_FILE;\n    const logFile = options.logFile || envLogFile || null;·\n    return new Logger({\n        level,\n        logFile,\n        colors: options.colors !== false && process.stdout.isTTY,\n        timestamp: options.timestamp || false,\n        prefix: options.prefix || '',\n        context: options.context || {}\n    });\n}·\n/**\n * Create progress tracker\n * @param {number} total - Total items\n * @param {Object} options - Options\n * @returns {ProgressTracker} Progress tracker instance\n */\nfunction createProgress(total, options = {}) {\n    return new ProgressTracker(total, options);\n}·\n/**\n * Create performance monitor\n * @param {Logger} logger - Logger instance\n * @returns {PerformanceMonitor} Performance monitor instance\n */\nfunction createPerformanceMonitor(logger) {\n    return new PerformanceMonitor(logger);\n}·\n// Default logger instance\nconst defaultLogger = createLogger();·\nmodule.exports = {\n    Logger,\n    ProgressTracker,\n    PerformanceMonitor,\n    LOG_LEVELS,\n    createLogger,\n    createProgress,\n    createPerformanceMonitor,\n    logger: defaultLogger\n};\"\n    at Object.toMatch (/root/info-tech-io/hugo-templates/tests/unit/logger.test.js:177:35)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Logger System Error handling should validate log parameters",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should validate log parameters"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Logger configuration"
          ],
          "duration": 41,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System Logger configuration should support configuration options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should support configuration options"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Logger configuration"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System Logger configuration should have default configurations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should have default configurations"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Memory management"
          ],
          "duration": 29,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Logger System Memory management should handle memory efficiently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle memory efficiently"
        },
        {
          "ancestorTitles": [
            "Logger System",
            "Memory management"
          ],
          "duration": 1,
          "failureDetails": [
            {}
          ],
          "failureMessages": [
            "ReferenceError: Cannot access 'loggerContent' before initialization\n    at Object.loggerContent (/root/info-tech-io/hugo-templates/tests/unit/logger.test.js:208:51)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Logger System Memory management should cleanup resources",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should cleanup resources"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "unit"
      },
      "failureMessage": "  ● Logger System › Logger integration with CLI tools › should be used in build script\n\n    expect(received).toMatch(expected)\n\n    Expected pattern: /echo.*\\\\\\[|\\\\\\033|INFO|SUCCESS|ERROR/\n    Received string:  \"#!/bin/bash\n    set -euo pipefail·\n    #\n    # Hugo Template Factory Framework - Main Build Script\n    # The first parametrized scaffolding tool for Hugo ecosystem\n    #\n    # This script provides a bash-based interface for building Hugo sites\n    # with specified templates, themes, and components.\n    #·\n    # Colors for output\n    readonly RED='\\\\033[0;31m'\n    readonly GREEN='\\\\033[0;32m'\n    readonly YELLOW='\\\\033[1;33m'\n    readonly BLUE='\\\\033[0;34m'\n    readonly GRAY='\\\\033[0;90m'\n    readonly NC='\\\\033[0m' # No Color·\n    # Default values\n    TEMPLATE=\\\"default\\\"\n    THEME=\\\"compose\\\"\n    COMPONENTS=\\\"\\\"\n    OUTPUT=\\\"./site\\\"\n    CONTENT=\\\"\\\"\n    CONFIG=\\\"\\\"\n    MINIFY=false\n    DRAFT=false\n    FUTURE=false\n    BASE_URL=\\\"\\\"\n    ENVIRONMENT=\\\"development\\\"\n    VERBOSE=false\n    QUIET=false\n    LOG_LEVEL=\\\"info\\\"\n    VALIDATE_ONLY=false·\n    # Script directory (where this script is located)\n    SCRIPT_DIR=\\\"$(cd \\\"$(dirname \\\"${BASH_SOURCE[0]}\\\")\\\" && pwd)\\\"\n    PROJECT_ROOT=\\\"$(dirname \\\"$SCRIPT_DIR\\\")\\\"·\n    # Function to print colored output\n    print_color() {\n        local color=$1\n        shift\n        echo -e \\\"${color}$*${NC}\\\"\n    }·\n    # Logging functions\n    log_info() {\n        [[ \\\"$QUIET\\\" == \\\"true\\\" ]] && return\n        print_color \\\"$BLUE\\\" \\\"ℹ️  $*\\\"\n    }·\n    log_success() {\n        [[ \\\"$QUIET\\\" == \\\"true\\\" ]] && return\n        print_color \\\"$GREEN\\\" \\\"✅ $*\\\"\n    }·\n    log_warning() {\n        [[ \\\"$QUIET\\\" == \\\"true\\\" ]] && return\n        print_color \\\"$YELLOW\\\" \\\"⚠️  $*\\\"\n    }·\n    log_error() {\n        print_color \\\"$RED\\\" \\\"❌ $*\\\" >&2\n    }·\n    log_verbose() {\n        [[ \\\"$VERBOSE\\\" == \\\"true\\\" ]] || return\n        print_color \\\"$GRAY\\\" \\\"🔍 $*\\\"\n    }·\n    # Function to show usage\n    show_usage() {\n        cat << EOF\n    Usage: $0 [OPTIONS]·\n    Hugo Template Factory Framework - Build Script·\n    OPTIONS:\n        -t, --template <name>       Template to use (default: default)\n        --theme <name>              Hugo theme to apply (default: compose)\n        -c, --components <list>     Comma-separated list of components to include\n        -o, --output <path>         Output directory (default: ./site)\n        --content <path>            Path to content directory\n        --config <path>             Path to custom configuration file\n        --minify                    Enable Hugo minification\n        --draft                     Include draft content\n        --future                    Include future content\n        --base-url <url>            Base URL for the site\n        -e, --environment <env>     Hugo environment (default: development)\n        -v, --verbose               Enable verbose output\n        -q, --quiet                 Suppress non-error output\n        --log-level <level>         Log level (debug|info|warn|error)\n        --validate-only             Only validate configuration, don't build\n        -h, --help                  Show this help message·\n    EXAMPLES:\n        # Basic build with default template\n        $0·\n        # Build with minimal template\n        $0 --template=minimal --theme=compose·\n        # Build with specific components\n        $0 --template=default --components=quiz-engine,analytics·\n        # Build with custom content directory\n        $0 --content=/path/to/content --output=/path/to/output·\n        # Production build with minification\n        $0 --environment=production --minify --base-url=https://example.com·\n        # Validate configuration only\n        $0 --validate-only --verbose·\n    AVAILABLE TEMPLATES:\n    $(list_templates)·\n    EOF\n    }·\n    # Function to list available templates\n    list_templates() {\n        local templates_dir=\\\"$PROJECT_ROOT/templates\\\"\n        if [[ -d \\\"$templates_dir\\\" ]]; then\n            find \\\"$templates_dir\\\" -mindepth 1 -maxdepth 1 -type d -exec basename {} \\\\; | sort | sed 's/^/    - /'\n        else\n            echo \\\"    - No templates found\\\"\n        fi\n    }·\n    # Function to validate input parameters\n    validate_parameters() {\n        log_verbose \\\"Validating input parameters...\\\"·\n        # Check if template exists\n        local template_path=\\\"$PROJECT_ROOT/templates/$TEMPLATE\\\"\n        if [[ ! -d \\\"$template_path\\\" ]]; then\n            log_error \\\"Template '$TEMPLATE' not found in $PROJECT_ROOT/templates/\\\"\n            log_info \\\"Available templates:\\\"\n            list_templates\n            return 1\n        fi·\n        # Check if components.yml exists in template\n        local components_file=\\\"$template_path/components.yml\\\"\n        if [[ ! -f \\\"$components_file\\\" ]]; then\n            log_warning \\\"No components.yml found in template '$TEMPLATE'\\\"\n        fi·\n        # Validate output directory\n        if [[ \\\"$OUTPUT\\\" == \\\".\\\" || \\\"$OUTPUT\\\" == \\\"./\\\" ]]; then\n            log_error \\\"Output directory cannot be current directory\\\"\n            return 1\n        fi·\n        # Check if output directory already exists and is not empty\n        if [[ -d \\\"$OUTPUT\\\" && \\\"$(ls -A \\\"$OUTPUT\\\" 2>/dev/null)\\\" ]]; then\n            log_warning \\\"Output directory '$OUTPUT' already exists and is not empty\\\"\n            if [[ \\\"$VERBOSE\\\" == \\\"true\\\" ]]; then\n                echo \\\"Contents:\\\"\n                ls -la \\\"$OUTPUT\\\" | head -5\n            fi\n        fi·\n        # Validate content directory if specified\n        if [[ -n \\\"$CONTENT\\\" && ! -d \\\"$CONTENT\\\" ]]; then\n            log_error \\\"Content directory '$CONTENT' not found\\\"\n            return 1\n        fi·\n        # Validate configuration file if specified\n        if [[ -n \\\"$CONFIG\\\" && ! -f \\\"$CONFIG\\\" ]]; then\n            log_error \\\"Configuration file '$CONFIG' not found\\\"\n            return 1\n        fi·\n        # Check Hugo installation\n        if ! command -v hugo >/dev/null 2>&1; then\n            log_error \\\"Hugo is not installed or not in PATH\\\"\n            log_info \\\"Please install Hugo: https://gohugo.io/getting-started/installing/\\\"\n            return 1\n        fi·\n        local hugo_version\n        hugo_version=$(hugo version 2>/dev/null | head -1)\n        log_verbose \\\"Found Hugo: $hugo_version\\\"·\n        log_success \\\"Parameter validation completed\\\"\n        return 0\n    }·\n    # Function to parse components.yml\n    parse_components() {\n        local template_path=\\\"$PROJECT_ROOT/templates/$TEMPLATE\\\"\n        local components_file=\\\"$template_path/components.yml\\\"·\n        if [[ ! -f \\\"$components_file\\\" ]]; then\n            log_verbose \\\"No components.yml file found, skipping component processing\\\"\n            return 0\n        fi·\n        log_verbose \\\"Parsing components from $components_file\\\"·\n        # Use Node.js to parse YAML if available, otherwise skip detailed parsing\n        if command -v node >/dev/null 2>&1; then\n            local js_parser=\\\"$SCRIPT_DIR/parse-components.js\\\"\n            if [[ -f \\\"$js_parser\\\" ]]; then\n                log_verbose \\\"Using Node.js YAML parser\\\"\n                node \\\"$js_parser\\\" \\\"$components_file\\\"\n            else\n                log_verbose \\\"Node.js YAML parser not found, using basic parsing\\\"\n            fi\n        else\n            log_verbose \\\"Node.js not available, skipping advanced component parsing\\\"\n        fi\n    }·\n    # Function to prepare build environment\n    prepare_build_environment() {\n        log_info \\\"Preparing build environment...\\\"·\n        # Create output directory\n        mkdir -p \\\"$OUTPUT\\\"\n        log_verbose \\\"Created output directory: $OUTPUT\\\"·\n        # Copy template files\n        local template_path=\\\"$PROJECT_ROOT/templates/$TEMPLATE\\\"\n        log_verbose \\\"Copying template files from: $template_path\\\"·\n        # Copy all files except .git directories\n        find \\\"$template_path\\\" -type f ! -path \\\"*/.git/*\\\" -exec cp --parents {} \\\"$OUTPUT/\\\" \\\\; 2>/dev/null || {\n            # Fallback for systems without --parents\n            rsync -av --exclude='.git' \\\"$template_path/\\\" \\\"$OUTPUT/\\\" 2>/dev/null || {\n                # Final fallback\n                cp -r \\\"$template_path\\\"/* \\\"$OUTPUT/\\\" 2>/dev/null || true\n            }\n        }·\n        # Copy custom content if specified\n        if [[ -n \\\"$CONTENT\\\" ]]; then\n            log_verbose \\\"Copying custom content from: $CONTENT\\\"\n            cp -r \\\"$CONTENT\\\"/* \\\"$OUTPUT/content/\\\" 2>/dev/null || true\n        fi·\n        # Initialize Git submodules if they exist\n        if [[ -f \\\"$PROJECT_ROOT/.gitmodules\\\" ]]; then\n            log_verbose \\\"Initializing Git submodules...\\\"\n            cd \\\"$PROJECT_ROOT\\\"\n            git submodule update --init --recursive 2>/dev/null || {\n                log_warning \\\"Failed to initialize Git submodules\\\"\n            }\n            cd - >/dev/null\n        fi·\n        # Copy theme if it exists as submodule\n        local theme_path=\\\"$PROJECT_ROOT/themes/$THEME\\\"\n        if [[ -d \\\"$theme_path\\\" ]]; then\n            log_verbose \\\"Copying theme: $THEME\\\"\n            mkdir -p \\\"$OUTPUT/themes\\\"\n            cp -r \\\"$theme_path\\\" \\\"$OUTPUT/themes/\\\" 2>/dev/null || true\n        fi·\n        # Copy components if they exist\n        if [[ -n \\\"$COMPONENTS\\\" ]]; then\n            IFS=',' read -ra COMP_ARRAY <<< \\\"$COMPONENTS\\\"\n            for component in \\\"${COMP_ARRAY[@]}\\\"; do\n                component=$(echo \\\"$component\\\" | xargs) # trim whitespace\n                local comp_path=\\\"$PROJECT_ROOT/components/$component\\\"\n                if [[ -d \\\"$comp_path\\\" ]]; then\n                    log_verbose \\\"Copying component: $component\\\"\n                    # Copy component files to appropriate locations\n                    if [[ -d \\\"$comp_path/static\\\" ]]; then\n                        cp -r \\\"$comp_path/static\\\"/* \\\"$OUTPUT/static/\\\" 2>/dev/null || true\n                    fi\n                    if [[ -d \\\"$comp_path/layouts\\\" ]]; then\n                        cp -r \\\"$comp_path/layouts\\\"/* \\\"$OUTPUT/layouts/\\\" 2>/dev/null || true\n                    fi\n                else\n                    log_warning \\\"Component '$component' not found in $PROJECT_ROOT/components/\\\"\n                fi\n            done\n        fi·\n        log_success \\\"Build environment prepared\\\"\n    }·\n    # Function to update Hugo configuration\n    update_hugo_config() {\n        log_info \\\"Updating Hugo configuration...\\\"·\n        local hugo_config=\\\"$OUTPUT/hugo.toml\\\"\n        if [[ ! -f \\\"$hugo_config\\\" ]]; then\n            log_warning \\\"No hugo.toml found, creating minimal configuration\\\"\n            cat > \\\"$hugo_config\\\" << EOF\n    baseURL = '${BASE_URL:-http://localhost:1313}'\n    languageCode = 'en-us'\n    title = 'Hugo Template Factory Site'\n    theme = '$THEME'\n    EOF\n        fi·\n        # Update configuration based on parameters\n        if [[ -n \\\"$BASE_URL\\\" ]]; then\n            log_verbose \\\"Setting baseURL to: $BASE_URL\\\"\n            sed -i \\\"s|baseURL = .*|baseURL = '$BASE_URL'|\\\" \\\"$hugo_config\\\"\n        fi·\n        if [[ \\\"$THEME\\\" != \\\"compose\\\" ]]; then\n            log_verbose \\\"Setting theme to: $THEME\\\"\n            sed -i \\\"s|theme = .*|theme = '$THEME'|\\\" \\\"$hugo_config\\\"\n        fi·\n        # Add environment-specific settings\n        if [[ \\\"$ENVIRONMENT\\\" == \\\"production\\\" ]]; then\n            echo \\\"\\\" >> \\\"$hugo_config\\\"\n            echo \\\"# Production environment settings\\\" >> \\\"$hugo_config\\\"\n            echo \\\"environment = \\\\\\\"production\\\\\\\"\\\" >> \\\"$hugo_config\\\"\n        fi·\n        log_success \\\"Hugo configuration updated\\\"\n    }·\n    # Function to run Hugo build\n    run_hugo_build() {\n        log_info \\\"Running Hugo build...\\\"·\n        cd \\\"$OUTPUT\\\"·\n        # Build Hugo command\n        local hugo_cmd=\\\"hugo\\\"·\n        # Add flags based on parameters\n        [[ \\\"$MINIFY\\\" == \\\"true\\\" ]] && hugo_cmd+=\\\" --minify\\\"\n        [[ \\\"$DRAFT\\\" == \\\"true\\\" ]] && hugo_cmd+=\\\" --draft\\\"\n        [[ \\\"$FUTURE\\\" == \\\"true\\\" ]] && hugo_cmd+=\\\" --future\\\"\n        [[ -n \\\"$BASE_URL\\\" ]] && hugo_cmd+=\\\" --baseURL \\\\\\\"$BASE_URL\\\\\\\"\\\"\n        [[ \\\"$ENVIRONMENT\\\" != \\\"development\\\" ]] && hugo_cmd+=\\\" --environment $ENVIRONMENT\\\"·\n        # Set log level\n        case \\\"$LOG_LEVEL\\\" in\n            debug) hugo_cmd+=\\\" --logLevel debug\\\" ;;\n            warn) hugo_cmd+=\\\" --logLevel warn\\\" ;;\n            error) hugo_cmd+=\\\" --logLevel error\\\" ;;\n            *) hugo_cmd+=\\\" --logLevel info\\\" ;;\n        esac·\n        # Set destination (output to current directory since we're already in OUTPUT)\n        hugo_cmd+=\\\" --destination .\\\"·\n        log_verbose \\\"Running: $hugo_cmd\\\"·\n        # Execute Hugo build\n        if [[ \\\"$VERBOSE\\\" == \\\"true\\\" ]]; then\n            eval \\\"$hugo_cmd\\\"\n        else\n            eval \\\"$hugo_cmd\\\" >/dev/null 2>&1 || {\n                log_error \\\"Hugo build failed\\\"\n                return 1\n            }\n        fi·\n        cd - >/dev/null·\n        log_success \\\"Hugo build completed\\\"\n    }·\n    # Function to show build summary\n    show_build_summary() {\n        log_info \\\"Build Summary:\\\"\n        echo \\\"   Template: $TEMPLATE\\\"\n        echo \\\"   Theme: $THEME\\\"\n        [[ -n \\\"$COMPONENTS\\\" ]] && echo \\\"   Components: $COMPONENTS\\\"\n        echo \\\"   Environment: $ENVIRONMENT\\\"\n        echo \\\"   Output: $OUTPUT\\\"·\n        # Check build output (Hugo now outputs directly to OUTPUT directory)\n        if [[ -d \\\"$OUTPUT\\\" ]]; then\n            local file_count\n            file_count=$(find \\\"$OUTPUT\\\" -type f ! -path \\\"*/.git/*\\\" 2>/dev/null | wc -l)\n            echo \\\"   Files generated: $file_count\\\"·\n            if command -v du >/dev/null 2>&1; then\n                local size\n                size=$(du -sh \\\"$OUTPUT\\\" 2>/dev/null | cut -f1 || echo \\\"unknown\\\")\n                echo \\\"   Total size: $size\\\"\n            fi·\n            if [[ \\\"$VERBOSE\\\" == \\\"true\\\" ]]; then\n                echo \\\"\\\"\n                log_info \\\"Generated files:\\\"\n                find \\\"$OUTPUT\\\" -type f ! -path \\\"*/.git/*\\\" 2>/dev/null | head -10 | sed 's|^|   |'\n                if [[ $file_count -gt 10 ]]; then\n                    echo \\\"   ... and $((file_count - 10)) more files\\\"\n                fi\n            fi\n        fi·\n        echo \\\"\\\"\n        log_success \\\"Build completed successfully!\\\"\n        echo \\\"   Run: hugo server -s $OUTPUT to preview locally\\\"\n    }·\n    # Function to parse command line arguments\n    parse_arguments() {\n        while [[ $# -gt 0 ]]; do\n            case $1 in\n                -t|--template)\n                    TEMPLATE=\\\"$2\\\"\n                    shift 2\n                    ;;\n                --theme)\n                    THEME=\\\"$2\\\"\n                    shift 2\n                    ;;\n                -c|--components)\n                    COMPONENTS=\\\"$2\\\"\n                    shift 2\n                    ;;\n                -o|--output)\n                    OUTPUT=\\\"$2\\\"\n                    shift 2\n                    ;;\n                --content)\n                    CONTENT=\\\"$2\\\"\n                    shift 2\n                    ;;\n                --config)\n                    CONFIG=\\\"$2\\\"\n                    shift 2\n                    ;;\n                --minify)\n                    MINIFY=true\n                    shift\n                    ;;\n                --draft)\n                    DRAFT=true\n                    shift\n                    ;;\n                --future)\n                    FUTURE=true\n                    shift\n                    ;;\n                --base-url)\n                    BASE_URL=\\\"$2\\\"\n                    shift 2\n                    ;;\n                -e|--environment)\n                    ENVIRONMENT=\\\"$2\\\"\n                    shift 2\n                    ;;\n                -v|--verbose)\n                    VERBOSE=true\n                    shift\n                    ;;\n                -q|--quiet)\n                    QUIET=true\n                    shift\n                    ;;\n                --log-level)\n                    LOG_LEVEL=\\\"$2\\\"\n                    shift 2\n                    ;;\n                --validate-only)\n                    VALIDATE_ONLY=true\n                    shift\n                    ;;\n                -h|--help)\n                    show_usage\n                    exit 0\n                    ;;\n                *)\n                    log_error \\\"Unknown option: $1\\\"\n                    echo \\\"\\\"\n                    show_usage\n                    exit 1\n                    ;;\n            esac\n        done\n    }·\n    # Main function\n    main() {\n        # Parse command line arguments\n        parse_arguments \\\"$@\\\"·\n        # Show header\n        if [[ \\\"$QUIET\\\" != \\\"true\\\" ]]; then\n            print_color \\\"$BLUE\\\" \\\"🏗️  Hugo Template Factory Build Script\\\"\n            print_color \\\"$GRAY\\\" \\\"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\\"\n            echo \\\"\\\"\n        fi·\n        # Validate parameters\n        if ! validate_parameters; then\n            exit 1\n        fi·\n        # If validation only, exit here\n        if [[ \\\"$VALIDATE_ONLY\\\" == \\\"true\\\" ]]; then\n            log_success \\\"Validation completed successfully\\\"\n            exit 0\n        fi·\n        # Parse components configuration\n        parse_components·\n        # Prepare build environment\n        prepare_build_environment·\n        # Update Hugo configuration\n        update_hugo_config·\n        # Run Hugo build\n        run_hugo_build·\n        # Show build summary\n        show_build_summary\n    }·\n    # Run main function with all arguments\n    main \\\"$@\\\"\"\n\n      86 |\n      87 |                 // Check for color codes or logging functions\n    > 88 |                 expect(buildContent).toMatch(/echo.*\\\\\\[|\\\\\\033|INFO|SUCCESS|ERROR/);\n         |                                      ^\n      89 |             }\n      90 |         });\n      91 |\n\n      at Object.toMatch (tests/unit/logger.test.js:88:38)\n\n  ● Logger System › File logging › should handle log rotation\n\n    expect(received).toMatch(expected)\n\n    Expected pattern: /rotation|maxSize|rotate|truncate/\n    Received string:  \"#!/usr/bin/env node·\n    /**\n     * Hugo Template Factory Framework - Centralized Logging System\n     * Provides consistent logging, progress tracking, and debugging capabilities\n     */·\n    const chalk = require('chalk');\n    const fs = require('fs-extra');\n    const path = require('path');\n    const util = require('util');·\n    /**\n     * Log levels\n     */\n    const LOG_LEVELS = {\n        DEBUG: 0,\n        INFO: 1,\n        WARN: 2,\n        ERROR: 3,\n        QUIET: 4\n    };·\n    /**\n     * Logger class\n     */\n    class Logger {\n        constructor(options = {}) {\n            this.level = LOG_LEVELS[options.level] || LOG_LEVELS.INFO;\n            this.prefix = options.prefix || '';\n            this.colors = options.colors !== false;\n            this.timestamp = options.timestamp || false;\n            this.logFile = options.logFile || null;\n            this.context = options.context || {};·\n            // Initialize log file if specified\n            if (this.logFile) {\n                this.initLogFile();\n            }\n        }·\n        /**\n         * Initialize log file\n         */\n        initLogFile() {\n            try {\n                const logDir = path.dirname(this.logFile);\n                fs.ensureDirSync(logDir);·\n                // Write session header\n                const header = `\\\\n=== Hugo Template Factory Log Session ===\\\\n` +\n                              `Date: ${new Date().toISOString()}\\\\n` +\n                              `Level: ${Object.keys(LOG_LEVELS)[this.level]}\\\\n` +\n                              `Context: ${JSON.stringify(this.context)}\\\\n` +\n                              `${'='.repeat(50)}\\\\n\\\\n`;·\n                fs.appendFileSync(this.logFile, header);\n            } catch (error) {\n                console.error('Failed to initialize log file:', error.message);\n            }\n        }·\n        /**\n         * Write to log file\n         * @param {string} level - Log level\n         * @param {string} message - Message to log\n         * @param {Object} data - Additional data\n         */\n        writeToFile(level, message, data = {}) {\n            if (!this.logFile) return;·\n            try {\n                const timestamp = new Date().toISOString();\n                const contextStr = Object.keys(this.context).length > 0 ?\n                    ` [${JSON.stringify(this.context)}]` : '';·\n                let logEntry = `[${timestamp}] ${level.toUpperCase()}${contextStr}: ${message}`;·\n                if (Object.keys(data).length > 0) {\n                    logEntry += `\\\\n  Data: ${JSON.stringify(data, null, 2)}`;\n                }·\n                logEntry += '\\\\n';·\n                fs.appendFileSync(this.logFile, logEntry);\n            } catch (error) {\n                // Silently fail to avoid logging loops\n            }\n        }·\n        /**\n         * Format message with timestamp and prefix\n         * @param {string} message - Message to format\n         */\n        formatMessage(message) {\n            let formatted = '';·\n            if (this.timestamp) {\n                const now = new Date();\n                const time = now.toTimeString().split(' ')[0];\n                formatted += chalk.gray(`[${time}] `);\n            }·\n            if (this.prefix) {\n                formatted += chalk.gray(`[${this.prefix}] `);\n            }·\n            formatted += message;\n            return formatted;\n        }·\n        /**\n         * Debug level logging\n         * @param {string} message - Debug message\n         * @param {...any} args - Additional arguments\n         */\n        debug(message, ...args) {\n            if (this.level > LOG_LEVELS.DEBUG) return;·\n            const formatted = this.formatMessage(\n                this.colors ? chalk.gray(`🔍 ${message}`) : `🔍 ${message}`\n            );·\n            console.log(formatted, ...args);\n            this.writeToFile('debug', message, { args });\n        }·\n        /**\n         * Info level logging\n         * @param {string} message - Info message\n         * @param {...any} args - Additional arguments\n         */\n        info(message, ...args) {\n            if (this.level > LOG_LEVELS.INFO) return;·\n            const formatted = this.formatMessage(\n                this.colors ? chalk.blue(`ℹ️  ${message}`) : `ℹ️  ${message}`\n            );·\n            console.log(formatted, ...args);\n            this.writeToFile('info', message, { args });\n        }·\n        /**\n         * Success level logging\n         * @param {string} message - Success message\n         * @param {...any} args - Additional arguments\n         */\n        success(message, ...args) {\n            if (this.level > LOG_LEVELS.INFO) return;·\n            const formatted = this.formatMessage(\n                this.colors ? chalk.green(`✅ ${message}`) : `✅ ${message}`\n            );·\n            console.log(formatted, ...args);\n            this.writeToFile('success', message, { args });\n        }·\n        /**\n         * Warning level logging\n         * @param {string} message - Warning message\n         * @param {...any} args - Additional arguments\n         */\n        warn(message, ...args) {\n            if (this.level > LOG_LEVELS.WARN) return;·\n            const formatted = this.formatMessage(\n                this.colors ? chalk.yellow(`⚠️  ${message}`) : `⚠️  ${message}`\n            );·\n            console.log(formatted, ...args);\n            this.writeToFile('warn', message, { args });\n        }·\n        /**\n         * Error level logging\n         * @param {string} message - Error message\n         * @param {...any} args - Additional arguments\n         */\n        error(message, ...args) {\n            if (this.level > LOG_LEVELS.ERROR) return;·\n            const formatted = this.formatMessage(\n                this.colors ? chalk.red(`❌ ${message}`) : `❌ ${message}`\n            );·\n            console.error(formatted, ...args);\n            this.writeToFile('error', message, { args });\n        }·\n        /**\n         * Always print regardless of log level\n         * @param {string} message - Message to print\n         * @param {...any} args - Additional arguments\n         */\n        print(message, ...args) {\n            const formatted = this.formatMessage(message);\n            console.log(formatted, ...args);\n            this.writeToFile('print', message, { args });\n        }·\n        /**\n         * Create a child logger with additional context\n         * @param {Object} context - Additional context\n         * @returns {Logger} Child logger\n         */\n        child(context) {\n            return new Logger({\n                level: Object.keys(LOG_LEVELS)[this.level],\n                prefix: this.prefix,\n                colors: this.colors,\n                timestamp: this.timestamp,\n                logFile: this.logFile,\n                context: { ...this.context, ...context }\n            });\n        }·\n        /**\n         * Set log level\n         * @param {string} level - Log level name\n         */\n        setLevel(level) {\n            const upperLevel = level.toUpperCase();\n            if (LOG_LEVELS.hasOwnProperty(upperLevel)) {\n                this.level = LOG_LEVELS[upperLevel];\n            } else {\n                this.warn(`Invalid log level: ${level}`);\n            }\n        }·\n        /**\n         * Get current log level name\n         * @returns {string} Log level name\n         */\n        getLevel() {\n            return Object.keys(LOG_LEVELS)[this.level];\n        }\n    }·\n    /**\n     * Progress tracker class\n     */\n    class ProgressTracker {\n        constructor(total, options = {}) {\n            this.total = total;\n            this.current = 0;\n            this.label = options.label || 'Progress';\n            this.width = options.width || 40;\n            this.logger = options.logger || new Logger();\n            this.startTime = Date.now();\n            this.showEta = options.showEta !== false;\n            this.showPercent = options.showPercent !== false;\n            this.showCount = options.showCount !== false;\n        }·\n        /**\n         * Update progress\n         * @param {number} increment - Amount to increment (default: 1)\n         * @param {string} message - Optional status message\n         */\n        update(increment = 1, message = '') {\n            this.current = Math.min(this.current + increment, this.total);\n            this.render(message);\n        }·\n        /**\n         * Set progress to specific value\n         * @param {number} value - Progress value\n         * @param {string} message - Optional status message\n         */\n        set(value, message = '') {\n            this.current = Math.min(Math.max(value, 0), this.total);\n            this.render(message);\n        }·\n        /**\n         * Render progress bar\n         * @param {string} message - Optional status message\n         */\n        render(message = '') {\n            const percent = this.total > 0 ? (this.current / this.total) : 0;\n            const filled = Math.floor(percent * this.width);\n            const empty = this.width - filled;·\n            let bar = chalk.green('█'.repeat(filled)) + chalk.gray('░'.repeat(empty));\n            let info = [];·\n            if (this.showPercent) {\n                info.push(`${(percent * 100).toFixed(1)}%`);\n            }·\n            if (this.showCount) {\n                info.push(`${this.current}/${this.total}`);\n            }·\n            if (this.showEta && this.current > 0) {\n                const elapsed = Date.now() - this.startTime;\n                const rate = this.current / elapsed;\n                const remaining = (this.total - this.current) / rate;·\n                if (remaining > 0 && remaining < Infinity) {\n                    const eta = new Date(Date.now() + remaining);\n                    info.push(`ETA: ${eta.toTimeString().split(' ')[0]}`);\n                }\n            }·\n            const infoStr = info.length > 0 ? ` (${info.join(', ')})` : '';\n            const statusMsg = message ? ` - ${message}` : '';·\n            // Clear line and rewrite\n            process.stdout.write(`\\\\r${this.label}: [${bar}]${infoStr}${statusMsg}`);·\n            // New line when complete\n            if (this.current >= this.total) {\n                process.stdout.write('\\\\n');\n            }\n        }·\n        /**\n         * Complete the progress\n         * @param {string} message - Completion message\n         */\n        complete(message = 'Complete') {\n            this.set(this.total, message);\n        }\n    }·\n    /**\n     * Performance monitor class\n     */\n    class PerformanceMonitor {\n        constructor(logger) {\n            this.logger = logger || new Logger();\n            this.timers = new Map();\n            this.counters = new Map();\n            this.memory = [];\n        }·\n        /**\n         * Start a timer\n         * @param {string} name - Timer name\n         */\n        startTimer(name) {\n            this.timers.set(name, {\n                start: process.hrtime.bigint(),\n                end: null\n            });\n            this.logger.debug(`Started timer: ${name}`);\n        }·\n        /**\n         * End a timer\n         * @param {string} name - Timer name\n         * @returns {number} Duration in milliseconds\n         */\n        endTimer(name) {\n            const timer = this.timers.get(name);\n            if (!timer) {\n                this.logger.warn(`Timer '${name}' not found`);\n                return 0;\n            }·\n            timer.end = process.hrtime.bigint();\n            const duration = Number(timer.end - timer.start) / 1000000; // Convert to ms·\n            this.logger.debug(`Timer '${name}' completed: ${duration.toFixed(2)}ms`);\n            return duration;\n        }·\n        /**\n         * Increment a counter\n         * @param {string} name - Counter name\n         * @param {number} increment - Amount to increment (default: 1)\n         */\n        incrementCounter(name, increment = 1) {\n            const current = this.counters.get(name) || 0;\n            this.counters.set(name, current + increment);\n        }·\n        /**\n         * Get counter value\n         * @param {string} name - Counter name\n         * @returns {number} Counter value\n         */\n        getCounter(name) {\n            return this.counters.get(name) || 0;\n        }·\n        /**\n         * Record memory usage\n         * @param {string} label - Memory snapshot label\n         */\n        recordMemory(label) {\n            const usage = process.memoryUsage();\n            this.memory.push({\n                label,\n                timestamp: Date.now(),\n                ...usage\n            });·\n            this.logger.debug(`Memory snapshot '${label}': ${(usage.heapUsed / 1024 / 1024).toFixed(2)}MB`);\n        }·\n        /**\n         * Get performance summary\n         * @returns {Object} Performance summary\n         */\n        getSummary() {\n            const summary = {\n                timers: {},\n                counters: Object.fromEntries(this.counters),\n                memory: this.memory\n            };·\n            // Calculate timer durations\n            for (const [name, timer] of this.timers) {\n                if (timer.end) {\n                    summary.timers[name] = Number(timer.end - timer.start) / 1000000;\n                }\n            }·\n            return summary;\n        }·\n        /**\n         * Print performance report\n         */\n        printReport() {\n            const summary = this.getSummary();·\n            this.logger.print(chalk.blue('\\\\n📊 Performance Report'));\n            this.logger.print(chalk.gray('━'.repeat(50)));·\n            // Timers\n            if (Object.keys(summary.timers).length > 0) {\n                this.logger.print(chalk.yellow('\\\\n⏱️  Timers:'));\n                for (const [name, duration] of Object.entries(summary.timers)) {\n                    this.logger.print(`   ${name}: ${duration.toFixed(2)}ms`);\n                }\n            }·\n            // Counters\n            if (Object.keys(summary.counters).length > 0) {\n                this.logger.print(chalk.yellow('\\\\n🔢 Counters:'));\n                for (const [name, count] of Object.entries(summary.counters)) {\n                    this.logger.print(`   ${name}: ${count}`);\n                }\n            }·\n            // Memory\n            if (summary.memory.length > 0) {\n                this.logger.print(chalk.yellow('\\\\n💾 Memory Usage:'));\n                summary.memory.forEach(snapshot => {\n                    const heapMB = (snapshot.heapUsed / 1024 / 1024).toFixed(2);\n                    this.logger.print(`   ${snapshot.label}: ${heapMB}MB`);\n                });\n            }\n        }\n    }·\n    /**\n     * Create default logger instance\n     */\n    function createLogger(options = {}) {\n        // Get log level from environment or options\n        const envLevel = process.env.HUGO_LOG_LEVEL;\n        const level = options.level || envLevel || 'INFO';·\n        // Get log file from environment or options\n        const envLogFile = process.env.HUGO_LOG_FILE;\n        const logFile = options.logFile || envLogFile || null;·\n        return new Logger({\n            level,\n            logFile,\n            colors: options.colors !== false && process.stdout.isTTY,\n            timestamp: options.timestamp || false,\n            prefix: options.prefix || '',\n            context: options.context || {}\n        });\n    }·\n    /**\n     * Create progress tracker\n     * @param {number} total - Total items\n     * @param {Object} options - Options\n     * @returns {ProgressTracker} Progress tracker instance\n     */\n    function createProgress(total, options = {}) {\n        return new ProgressTracker(total, options);\n    }·\n    /**\n     * Create performance monitor\n     * @param {Logger} logger - Logger instance\n     * @returns {PerformanceMonitor} Performance monitor instance\n     */\n    function createPerformanceMonitor(logger) {\n        return new PerformanceMonitor(logger);\n    }·\n    // Default logger instance\n    const defaultLogger = createLogger();·\n    module.exports = {\n        Logger,\n        ProgressTracker,\n        PerformanceMonitor,\n        LOG_LEVELS,\n        createLogger,\n        createProgress,\n        createPerformanceMonitor,\n        logger: defaultLogger\n    };\"\n\n      142 |\n      143 |             // Check for log rotation or file management\n    > 144 |             expect(loggerContent).toMatch(/rotation|maxSize|rotate|truncate/) ||\n          |                                   ^\n      145 |                    expect(loggerContent).toMatch(/fs\\./); // Basic file handling is acceptable\n      146 |         });\n      147 |     });\n\n      at Object.toMatch (tests/unit/logger.test.js:144:35)\n\n  ● Logger System › Error handling › should validate log parameters\n\n    expect(received).toMatch(expected)\n\n    Expected pattern: /typeof|instanceof|validate|check/\n    Received string:  \"#!/usr/bin/env node·\n    /**\n     * Hugo Template Factory Framework - Centralized Logging System\n     * Provides consistent logging, progress tracking, and debugging capabilities\n     */·\n    const chalk = require('chalk');\n    const fs = require('fs-extra');\n    const path = require('path');\n    const util = require('util');·\n    /**\n     * Log levels\n     */\n    const LOG_LEVELS = {\n        DEBUG: 0,\n        INFO: 1,\n        WARN: 2,\n        ERROR: 3,\n        QUIET: 4\n    };·\n    /**\n     * Logger class\n     */\n    class Logger {\n        constructor(options = {}) {\n            this.level = LOG_LEVELS[options.level] || LOG_LEVELS.INFO;\n            this.prefix = options.prefix || '';\n            this.colors = options.colors !== false;\n            this.timestamp = options.timestamp || false;\n            this.logFile = options.logFile || null;\n            this.context = options.context || {};·\n            // Initialize log file if specified\n            if (this.logFile) {\n                this.initLogFile();\n            }\n        }·\n        /**\n         * Initialize log file\n         */\n        initLogFile() {\n            try {\n                const logDir = path.dirname(this.logFile);\n                fs.ensureDirSync(logDir);·\n                // Write session header\n                const header = `\\\\n=== Hugo Template Factory Log Session ===\\\\n` +\n                              `Date: ${new Date().toISOString()}\\\\n` +\n                              `Level: ${Object.keys(LOG_LEVELS)[this.level]}\\\\n` +\n                              `Context: ${JSON.stringify(this.context)}\\\\n` +\n                              `${'='.repeat(50)}\\\\n\\\\n`;·\n                fs.appendFileSync(this.logFile, header);\n            } catch (error) {\n                console.error('Failed to initialize log file:', error.message);\n            }\n        }·\n        /**\n         * Write to log file\n         * @param {string} level - Log level\n         * @param {string} message - Message to log\n         * @param {Object} data - Additional data\n         */\n        writeToFile(level, message, data = {}) {\n            if (!this.logFile) return;·\n            try {\n                const timestamp = new Date().toISOString();\n                const contextStr = Object.keys(this.context).length > 0 ?\n                    ` [${JSON.stringify(this.context)}]` : '';·\n                let logEntry = `[${timestamp}] ${level.toUpperCase()}${contextStr}: ${message}`;·\n                if (Object.keys(data).length > 0) {\n                    logEntry += `\\\\n  Data: ${JSON.stringify(data, null, 2)}`;\n                }·\n                logEntry += '\\\\n';·\n                fs.appendFileSync(this.logFile, logEntry);\n            } catch (error) {\n                // Silently fail to avoid logging loops\n            }\n        }·\n        /**\n         * Format message with timestamp and prefix\n         * @param {string} message - Message to format\n         */\n        formatMessage(message) {\n            let formatted = '';·\n            if (this.timestamp) {\n                const now = new Date();\n                const time = now.toTimeString().split(' ')[0];\n                formatted += chalk.gray(`[${time}] `);\n            }·\n            if (this.prefix) {\n                formatted += chalk.gray(`[${this.prefix}] `);\n            }·\n            formatted += message;\n            return formatted;\n        }·\n        /**\n         * Debug level logging\n         * @param {string} message - Debug message\n         * @param {...any} args - Additional arguments\n         */\n        debug(message, ...args) {\n            if (this.level > LOG_LEVELS.DEBUG) return;·\n            const formatted = this.formatMessage(\n                this.colors ? chalk.gray(`🔍 ${message}`) : `🔍 ${message}`\n            );·\n            console.log(formatted, ...args);\n            this.writeToFile('debug', message, { args });\n        }·\n        /**\n         * Info level logging\n         * @param {string} message - Info message\n         * @param {...any} args - Additional arguments\n         */\n        info(message, ...args) {\n            if (this.level > LOG_LEVELS.INFO) return;·\n            const formatted = this.formatMessage(\n                this.colors ? chalk.blue(`ℹ️  ${message}`) : `ℹ️  ${message}`\n            );·\n            console.log(formatted, ...args);\n            this.writeToFile('info', message, { args });\n        }·\n        /**\n         * Success level logging\n         * @param {string} message - Success message\n         * @param {...any} args - Additional arguments\n         */\n        success(message, ...args) {\n            if (this.level > LOG_LEVELS.INFO) return;·\n            const formatted = this.formatMessage(\n                this.colors ? chalk.green(`✅ ${message}`) : `✅ ${message}`\n            );·\n            console.log(formatted, ...args);\n            this.writeToFile('success', message, { args });\n        }·\n        /**\n         * Warning level logging\n         * @param {string} message - Warning message\n         * @param {...any} args - Additional arguments\n         */\n        warn(message, ...args) {\n            if (this.level > LOG_LEVELS.WARN) return;·\n            const formatted = this.formatMessage(\n                this.colors ? chalk.yellow(`⚠️  ${message}`) : `⚠️  ${message}`\n            );·\n            console.log(formatted, ...args);\n            this.writeToFile('warn', message, { args });\n        }·\n        /**\n         * Error level logging\n         * @param {string} message - Error message\n         * @param {...any} args - Additional arguments\n         */\n        error(message, ...args) {\n            if (this.level > LOG_LEVELS.ERROR) return;·\n            const formatted = this.formatMessage(\n                this.colors ? chalk.red(`❌ ${message}`) : `❌ ${message}`\n            );·\n            console.error(formatted, ...args);\n            this.writeToFile('error', message, { args });\n        }·\n        /**\n         * Always print regardless of log level\n         * @param {string} message - Message to print\n         * @param {...any} args - Additional arguments\n         */\n        print(message, ...args) {\n            const formatted = this.formatMessage(message);\n            console.log(formatted, ...args);\n            this.writeToFile('print', message, { args });\n        }·\n        /**\n         * Create a child logger with additional context\n         * @param {Object} context - Additional context\n         * @returns {Logger} Child logger\n         */\n        child(context) {\n            return new Logger({\n                level: Object.keys(LOG_LEVELS)[this.level],\n                prefix: this.prefix,\n                colors: this.colors,\n                timestamp: this.timestamp,\n                logFile: this.logFile,\n                context: { ...this.context, ...context }\n            });\n        }·\n        /**\n         * Set log level\n         * @param {string} level - Log level name\n         */\n        setLevel(level) {\n            const upperLevel = level.toUpperCase();\n            if (LOG_LEVELS.hasOwnProperty(upperLevel)) {\n                this.level = LOG_LEVELS[upperLevel];\n            } else {\n                this.warn(`Invalid log level: ${level}`);\n            }\n        }·\n        /**\n         * Get current log level name\n         * @returns {string} Log level name\n         */\n        getLevel() {\n            return Object.keys(LOG_LEVELS)[this.level];\n        }\n    }·\n    /**\n     * Progress tracker class\n     */\n    class ProgressTracker {\n        constructor(total, options = {}) {\n            this.total = total;\n            this.current = 0;\n            this.label = options.label || 'Progress';\n            this.width = options.width || 40;\n            this.logger = options.logger || new Logger();\n            this.startTime = Date.now();\n            this.showEta = options.showEta !== false;\n            this.showPercent = options.showPercent !== false;\n            this.showCount = options.showCount !== false;\n        }·\n        /**\n         * Update progress\n         * @param {number} increment - Amount to increment (default: 1)\n         * @param {string} message - Optional status message\n         */\n        update(increment = 1, message = '') {\n            this.current = Math.min(this.current + increment, this.total);\n            this.render(message);\n        }·\n        /**\n         * Set progress to specific value\n         * @param {number} value - Progress value\n         * @param {string} message - Optional status message\n         */\n        set(value, message = '') {\n            this.current = Math.min(Math.max(value, 0), this.total);\n            this.render(message);\n        }·\n        /**\n         * Render progress bar\n         * @param {string} message - Optional status message\n         */\n        render(message = '') {\n            const percent = this.total > 0 ? (this.current / this.total) : 0;\n            const filled = Math.floor(percent * this.width);\n            const empty = this.width - filled;·\n            let bar = chalk.green('█'.repeat(filled)) + chalk.gray('░'.repeat(empty));\n            let info = [];·\n            if (this.showPercent) {\n                info.push(`${(percent * 100).toFixed(1)}%`);\n            }·\n            if (this.showCount) {\n                info.push(`${this.current}/${this.total}`);\n            }·\n            if (this.showEta && this.current > 0) {\n                const elapsed = Date.now() - this.startTime;\n                const rate = this.current / elapsed;\n                const remaining = (this.total - this.current) / rate;·\n                if (remaining > 0 && remaining < Infinity) {\n                    const eta = new Date(Date.now() + remaining);\n                    info.push(`ETA: ${eta.toTimeString().split(' ')[0]}`);\n                }\n            }·\n            const infoStr = info.length > 0 ? ` (${info.join(', ')})` : '';\n            const statusMsg = message ? ` - ${message}` : '';·\n            // Clear line and rewrite\n            process.stdout.write(`\\\\r${this.label}: [${bar}]${infoStr}${statusMsg}`);·\n            // New line when complete\n            if (this.current >= this.total) {\n                process.stdout.write('\\\\n');\n            }\n        }·\n        /**\n         * Complete the progress\n         * @param {string} message - Completion message\n         */\n        complete(message = 'Complete') {\n            this.set(this.total, message);\n        }\n    }·\n    /**\n     * Performance monitor class\n     */\n    class PerformanceMonitor {\n        constructor(logger) {\n            this.logger = logger || new Logger();\n            this.timers = new Map();\n            this.counters = new Map();\n            this.memory = [];\n        }·\n        /**\n         * Start a timer\n         * @param {string} name - Timer name\n         */\n        startTimer(name) {\n            this.timers.set(name, {\n                start: process.hrtime.bigint(),\n                end: null\n            });\n            this.logger.debug(`Started timer: ${name}`);\n        }·\n        /**\n         * End a timer\n         * @param {string} name - Timer name\n         * @returns {number} Duration in milliseconds\n         */\n        endTimer(name) {\n            const timer = this.timers.get(name);\n            if (!timer) {\n                this.logger.warn(`Timer '${name}' not found`);\n                return 0;\n            }·\n            timer.end = process.hrtime.bigint();\n            const duration = Number(timer.end - timer.start) / 1000000; // Convert to ms·\n            this.logger.debug(`Timer '${name}' completed: ${duration.toFixed(2)}ms`);\n            return duration;\n        }·\n        /**\n         * Increment a counter\n         * @param {string} name - Counter name\n         * @param {number} increment - Amount to increment (default: 1)\n         */\n        incrementCounter(name, increment = 1) {\n            const current = this.counters.get(name) || 0;\n            this.counters.set(name, current + increment);\n        }·\n        /**\n         * Get counter value\n         * @param {string} name - Counter name\n         * @returns {number} Counter value\n         */\n        getCounter(name) {\n            return this.counters.get(name) || 0;\n        }·\n        /**\n         * Record memory usage\n         * @param {string} label - Memory snapshot label\n         */\n        recordMemory(label) {\n            const usage = process.memoryUsage();\n            this.memory.push({\n                label,\n                timestamp: Date.now(),\n                ...usage\n            });·\n            this.logger.debug(`Memory snapshot '${label}': ${(usage.heapUsed / 1024 / 1024).toFixed(2)}MB`);\n        }·\n        /**\n         * Get performance summary\n         * @returns {Object} Performance summary\n         */\n        getSummary() {\n            const summary = {\n                timers: {},\n                counters: Object.fromEntries(this.counters),\n                memory: this.memory\n            };·\n            // Calculate timer durations\n            for (const [name, timer] of this.timers) {\n                if (timer.end) {\n                    summary.timers[name] = Number(timer.end - timer.start) / 1000000;\n                }\n            }·\n            return summary;\n        }·\n        /**\n         * Print performance report\n         */\n        printReport() {\n            const summary = this.getSummary();·\n            this.logger.print(chalk.blue('\\\\n📊 Performance Report'));\n            this.logger.print(chalk.gray('━'.repeat(50)));·\n            // Timers\n            if (Object.keys(summary.timers).length > 0) {\n                this.logger.print(chalk.yellow('\\\\n⏱️  Timers:'));\n                for (const [name, duration] of Object.entries(summary.timers)) {\n                    this.logger.print(`   ${name}: ${duration.toFixed(2)}ms`);\n                }\n            }·\n            // Counters\n            if (Object.keys(summary.counters).length > 0) {\n                this.logger.print(chalk.yellow('\\\\n🔢 Counters:'));\n                for (const [name, count] of Object.entries(summary.counters)) {\n                    this.logger.print(`   ${name}: ${count}`);\n                }\n            }·\n            // Memory\n            if (summary.memory.length > 0) {\n                this.logger.print(chalk.yellow('\\\\n💾 Memory Usage:'));\n                summary.memory.forEach(snapshot => {\n                    const heapMB = (snapshot.heapUsed / 1024 / 1024).toFixed(2);\n                    this.logger.print(`   ${snapshot.label}: ${heapMB}MB`);\n                });\n            }\n        }\n    }·\n    /**\n     * Create default logger instance\n     */\n    function createLogger(options = {}) {\n        // Get log level from environment or options\n        const envLevel = process.env.HUGO_LOG_LEVEL;\n        const level = options.level || envLevel || 'INFO';·\n        // Get log file from environment or options\n        const envLogFile = process.env.HUGO_LOG_FILE;\n        const logFile = options.logFile || envLogFile || null;·\n        return new Logger({\n            level,\n            logFile,\n            colors: options.colors !== false && process.stdout.isTTY,\n            timestamp: options.timestamp || false,\n            prefix: options.prefix || '',\n            context: options.context || {}\n        });\n    }·\n    /**\n     * Create progress tracker\n     * @param {number} total - Total items\n     * @param {Object} options - Options\n     * @returns {ProgressTracker} Progress tracker instance\n     */\n    function createProgress(total, options = {}) {\n        return new ProgressTracker(total, options);\n    }·\n    /**\n     * Create performance monitor\n     * @param {Logger} logger - Logger instance\n     * @returns {PerformanceMonitor} Performance monitor instance\n     */\n    function createPerformanceMonitor(logger) {\n        return new PerformanceMonitor(logger);\n    }·\n    // Default logger instance\n    const defaultLogger = createLogger();·\n    module.exports = {\n        Logger,\n        ProgressTracker,\n        PerformanceMonitor,\n        LOG_LEVELS,\n        createLogger,\n        createProgress,\n        createPerformanceMonitor,\n        logger: defaultLogger\n    };\"\n\n      175 |\n      176 |             // Check for parameter validation\n    > 177 |             expect(loggerContent).toMatch(/typeof|instanceof|validate|check/) ||\n          |                                   ^\n      178 |                    expect(loggerContent.length).toBeGreaterThan(1000); // Complex logger should have validation\n      179 |         });\n      180 |     });\n\n      at Object.toMatch (tests/unit/logger.test.js:177:35)\n\n  ● Logger System › Memory management › should cleanup resources\n\n    ReferenceError: Cannot access 'loggerContent' before initialization\n\n      206 |\n      207 |         test('should cleanup resources', () => {\n    > 208 |             const loggerContent = fs.readFileSync(loggerContent, 'utf8');\n          |                                                   ^\n      209 |\n      210 |             // Check for cleanup mechanisms\n      211 |             expect(loggerContent).toMatch(/close|cleanup|destroy|end/) ||\n\n      at Object.loggerContent (tests/unit/logger.test.js:208:51)\n"
    },
    {
      "leaks": false,
      "numFailingTests": 7,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1758397766091,
        "runtime": 8423,
        "slow": true,
        "start": 1758397757668
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/root/info-tech-io/hugo-templates/tests/performance/benchmark.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "Build Performance Benchmarks"
          ],
          "duration": 58,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/root/info-tech-io/hugo-templates/tests/performance/benchmark.test.js:77:46)"
          ],
          "fullName": "Performance Benchmarking Build Performance Benchmarks should benchmark minimal template build time",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should benchmark minimal template build time"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "Build Performance Benchmarks"
          ],
          "duration": 48,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/root/info-tech-io/hugo-templates/tests/performance/benchmark.test.js:92:46)"
          ],
          "fullName": "Performance Benchmarking Build Performance Benchmarks should benchmark default template build time",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should benchmark default template build time"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "Build Performance Benchmarks"
          ],
          "duration": 89,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/root/info-tech-io/hugo-templates/tests/performance/benchmark.test.js:107:46)"
          ],
          "fullName": "Performance Benchmarking Build Performance Benchmarks should benchmark components integration performance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should benchmark components integration performance"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "CLI Tools Performance"
          ],
          "duration": 483,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Benchmarking CLI Tools Performance should benchmark validation performance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should benchmark validation performance"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "CLI Tools Performance"
          ],
          "duration": 296,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Benchmarking CLI Tools Performance should benchmark list operations performance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should benchmark list operations performance"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "CLI Tools Performance"
          ],
          "duration": 726,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Benchmarking CLI Tools Performance should benchmark diagnostic performance",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should benchmark diagnostic performance"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "Memory Usage Benchmarks"
          ],
          "duration": 54,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Benchmarking Memory Usage Benchmarks should monitor memory usage during build",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should monitor memory usage during build"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "Memory Usage Benchmarks"
          ],
          "duration": 1217,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Benchmarking Memory Usage Benchmarks should monitor memory efficiency of CLI tools",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should monitor memory efficiency of CLI tools"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "Scalability Benchmarks"
          ],
          "duration": 124,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/root/info-tech-io/hugo-templates/tests/performance/benchmark.test.js:211:78)"
          ],
          "fullName": "Performance Benchmarking Scalability Benchmarks should benchmark multiple concurrent builds",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should benchmark multiple concurrent builds"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "Scalability Benchmarks"
          ],
          "duration": 2553,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Benchmarking Scalability Benchmarks should benchmark repeated operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should benchmark repeated operations"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "File Size Benchmarks"
          ],
          "duration": 37,
          "failureDetails": [
            {
              "errno": -2,
              "code": "ENOENT",
              "syscall": "scandir",
              "path": "/tmp/hugo-templates-perf-1758397758617/size-test"
            }
          ],
          "failureMessages": [
            "Error: ENOENT: no such file or directory, scandir '/tmp/hugo-templates-perf-1758397758617/size-test'\n    at Object.readdirSync (node:fs:1581:26)\n    at readdirSync (/root/info-tech-io/hugo-templates/tests/performance/benchmark.test.js:254:34)\n    at Object.getDirectorySize (/root/info-tech-io/hugo-templates/tests/performance/benchmark.test.js:267:32)"
          ],
          "fullName": "Performance Benchmarking File Size Benchmarks should measure output file sizes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should measure output file sizes"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "File Size Benchmarks"
          ],
          "duration": 83,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/root/info-tech-io/hugo-templates/tests/performance/benchmark.test.js:302:46)"
          ],
          "fullName": "Performance Benchmarking File Size Benchmarks should compare minified vs non-minified sizes",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should compare minified vs non-minified sizes"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "Resource Utilization"
          ],
          "duration": 49,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Benchmarking Resource Utilization should monitor CPU usage patterns",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should monitor CPU usage patterns"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "Resource Utilization"
          ],
          "duration": 56,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": false,
                "expected": true,
                "message": "expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/root/info-tech-io/hugo-templates/tests/performance/benchmark.test.js:354:50)"
          ],
          "fullName": "Performance Benchmarking Resource Utilization should test performance with different load levels",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should test performance with different load levels"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "Performance Regression Detection"
          ],
          "duration": 1053,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Benchmarking Performance Regression Detection should establish baseline performance metrics",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should establish baseline performance metrics"
        },
        {
          "ancestorTitles": [
            "Performance Benchmarking",
            "Performance Regression Detection"
          ],
          "duration": 137,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Performance Benchmarking Performance Regression Detection should compare with hugo-base baseline",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should compare with hugo-base baseline"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "performance"
      },
      "failureMessage": "  ● Performance Benchmarking › Build Performance Benchmarks › should benchmark minimal template build time\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      75 |\n      76 |             expect(duration).toBeLessThan(60000); // Should complete within 60 seconds\n    > 77 |             expect(fs.existsSync(outputDir)).toBe(true);\n         |                                              ^\n      78 |         }, 120000);\n      79 |\n      80 |         test('should benchmark default template build time', async () => {\n\n      at Object.toBe (tests/performance/benchmark.test.js:77:46)\n\n  ● Performance Benchmarking › Build Performance Benchmarks › should benchmark default template build time\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      90 |\n      91 |             expect(duration).toBeLessThan(90000); // Should complete within 90 seconds\n    > 92 |             expect(fs.existsSync(outputDir)).toBe(true);\n         |                                              ^\n      93 |         }, 120000);\n      94 |\n      95 |         test('should benchmark components integration performance', async () => {\n\n      at Object.toBe (tests/performance/benchmark.test.js:92:46)\n\n  ● Performance Benchmarking › Build Performance Benchmarks › should benchmark components integration performance\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      105 |\n      106 |             expect(duration).toBeLessThan(120000); // Should complete within 120 seconds\n    > 107 |             expect(fs.existsSync(outputDir)).toBe(true);\n          |                                              ^\n      108 |         }, 120000);\n      109 |     });\n      110 |\n\n      at Object.toBe (tests/performance/benchmark.test.js:107:46)\n\n  ● Performance Benchmarking › Scalability Benchmarks › should benchmark multiple concurrent builds\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      209 |             // Verify all builds completed\n      210 |             for (let i = 0; i < concurrentBuilds; i++) {\n    > 211 |                 expect(fs.existsSync(path.join(tempDir, `concurrent-${i}`))).toBe(true);\n          |                                                                              ^\n      212 |             }\n      213 |         }, 200000);\n      214 |\n\n      at Object.toBe (tests/performance/benchmark.test.js:211:78)\n\n  ● Performance Benchmarking › File Size Benchmarks › should measure output file sizes\n\n    ENOENT: no such file or directory, scandir '/tmp/hugo-templates-perf-1758397758617/size-test'\n\n      252 |             const getDirectorySize = (dirPath) => {\n      253 |                 let totalSize = 0;\n    > 254 |                 const files = fs.readdirSync(dirPath, { withFileTypes: true });\n          |                                  ^\n      255 |\n      256 |                 for (const file of files) {\n      257 |                     const filePath = path.join(dirPath, file.name);\n\n      at readdirSync (tests/performance/benchmark.test.js:254:34)\n      at Object.getDirectorySize (tests/performance/benchmark.test.js:267:32)\n\n  ● Performance Benchmarking › File Size Benchmarks › should compare minified vs non-minified sizes\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      300 |\n      301 |             // Both should exist\n    > 302 |             expect(fs.existsSync(normalDir)).toBe(true);\n          |                                              ^\n      303 |             expect(fs.existsSync(minifiedDir)).toBe(true);\n      304 |\n      305 |             // Note: We can't reliably test Hugo's minification without Hugo installed\n\n      at Object.toBe (tests/performance/benchmark.test.js:302:46)\n\n  ● Performance Benchmarking › Resource Utilization › should test performance with different load levels\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      352 |                 });\n      353 |\n    > 354 |                 expect(fs.existsSync(outputDir)).toBe(true);\n          |                                                  ^\n      355 |                 expect(duration).toBeLessThan(120000); // All loads should complete within 2 minutes\n      356 |             }\n      357 |         }, 360000);\n\n      at Object.toBe (tests/performance/benchmark.test.js:354:50)\n"
    },
    {
      "leaks": false,
      "numFailingTests": 13,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1758397767411,
        "runtime": 1266,
        "slow": false,
        "start": 1758397766145
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/root/info-tech-io/hugo-templates/tests/integration/build.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Build System Integration",
            "End-to-end build process"
          ],
          "duration": 44,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2030549,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-test-1758397766588/minimal-build\" --verbose\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/build.test.js:35:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Build System Integration End-to-end build process should build minimal template successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should build minimal template successfully"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "End-to-end build process"
          ],
          "duration": 50,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n"
              ],
              "pid": 2030565,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=default --theme=compose --output=\"/tmp/hugo-templates-test-1758397766588/default-build\" --verbose\n\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/build.test.js:57:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Build System Integration End-to-end build process should build default template successfully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should build default template successfully"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "End-to-end build process"
          ],
          "duration": 30,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n"
              ],
              "pid": 2030581,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=default --theme=compose --components=quiz-engine --output=\"/tmp/hugo-templates-test-1758397766588/components-build\" --verbose\n\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/build.test.js:81:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Build System Integration End-to-end build process should build with components integration",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should build with components integration"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "Hugo build integration"
          ],
          "duration": 41,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                {
                  "type": "Buffer",
                  "data": [
                    10,
                    85,
                    115,
                    97,
                    103,
                    101,
                    58,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    91,
                    79,
                    80,
                    84,
                    73,
                    79,
                    78,
                    83,
                    93,
                    10,
                    10,
                    72,
                    117,
                    103,
                    111,
                    32,
                    84,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    32,
                    70,
                    97,
                    99,
                    116,
                    111,
                    114,
                    121,
                    32,
                    70,
                    114,
                    97,
                    109,
                    101,
                    119,
                    111,
                    114,
                    107,
                    32,
                    45,
                    32,
                    66,
                    117,
                    105,
                    108,
                    100,
                    32,
                    83,
                    99,
                    114,
                    105,
                    112,
                    116,
                    10,
                    10,
                    79,
                    80,
                    84,
                    73,
                    79,
                    78,
                    83,
                    58,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    116,
                    44,
                    32,
                    45,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    32,
                    60,
                    110,
                    97,
                    109,
                    101,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    84,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    32,
                    116,
                    111,
                    32,
                    117,
                    115,
                    101,
                    32,
                    40,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    58,
                    32,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    116,
                    104,
                    101,
                    109,
                    101,
                    32,
                    60,
                    110,
                    97,
                    109,
                    101,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    72,
                    117,
                    103,
                    111,
                    32,
                    116,
                    104,
                    101,
                    109,
                    101,
                    32,
                    116,
                    111,
                    32,
                    97,
                    112,
                    112,
                    108,
                    121,
                    32,
                    40,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    58,
                    32,
                    99,
                    111,
                    109,
                    112,
                    111,
                    115,
                    101,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    99,
                    44,
                    32,
                    45,
                    45,
                    99,
                    111,
                    109,
                    112,
                    111,
                    110,
                    101,
                    110,
                    116,
                    115,
                    32,
                    60,
                    108,
                    105,
                    115,
                    116,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    67,
                    111,
                    109,
                    109,
                    97,
                    45,
                    115,
                    101,
                    112,
                    97,
                    114,
                    97,
                    116,
                    101,
                    100,
                    32,
                    108,
                    105,
                    115,
                    116,
                    32,
                    111,
                    102,
                    32,
                    99,
                    111,
                    109,
                    112,
                    111,
                    110,
                    101,
                    110,
                    116,
                    115,
                    32,
                    116,
                    111,
                    32,
                    105,
                    110,
                    99,
                    108,
                    117,
                    100,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    111,
                    44,
                    32,
                    45,
                    45,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    32,
                    60,
                    112,
                    97,
                    116,
                    104,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    79,
                    117,
                    116,
                    112,
                    117,
                    116,
                    32,
                    100,
                    105,
                    114,
                    101,
                    99,
                    116,
                    111,
                    114,
                    121,
                    32,
                    40,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    58,
                    32,
                    46,
                    47,
                    115,
                    105,
                    116,
                    101,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    32,
                    60,
                    112,
                    97,
                    116,
                    104,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    80,
                    97,
                    116,
                    104,
                    32,
                    116,
                    111,
                    32,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    32,
                    100,
                    105,
                    114,
                    101,
                    99,
                    116,
                    111,
                    114,
                    121,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    99,
                    111,
                    110,
                    102,
                    105,
                    103,
                    32,
                    60,
                    112,
                    97,
                    116,
                    104,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    80,
                    97,
                    116,
                    104,
                    32,
                    116,
                    111,
                    32,
                    99,
                    117,
                    115,
                    116,
                    111,
                    109,
                    32,
                    99,
                    111,
                    110,
                    102,
                    105,
                    103,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    32,
                    102,
                    105,
                    108,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    109,
                    105,
                    110,
                    105,
                    102,
                    121,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    69,
                    110,
                    97,
                    98,
                    108,
                    101,
                    32,
                    72,
                    117,
                    103,
                    111,
                    32,
                    109,
                    105,
                    110,
                    105,
                    102,
                    105,
                    99,
                    97,
                    116,
                    105,
                    111,
                    110,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    100,
                    114,
                    97,
                    102,
                    116,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    73,
                    110,
                    99,
                    108,
                    117,
                    100,
                    101,
                    32,
                    100,
                    114,
                    97,
                    102,
                    116,
                    32,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    102,
                    117,
                    116,
                    117,
                    114,
                    101,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    73,
                    110,
                    99,
                    108,
                    117,
                    100,
                    101,
                    32,
                    102,
                    117,
                    116,
                    117,
                    114,
                    101,
                    32,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    98,
                    97,
                    115,
                    101,
                    45,
                    117,
                    114,
                    108,
                    32,
                    60,
                    117,
                    114,
                    108,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    66,
                    97,
                    115,
                    101,
                    32,
                    85,
                    82,
                    76,
                    32,
                    102,
                    111,
                    114,
                    32,
                    116,
                    104,
                    101,
                    32,
                    115,
                    105,
                    116,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    101,
                    44,
                    32,
                    45,
                    45,
                    101,
                    110,
                    118,
                    105,
                    114,
                    111,
                    110,
                    109,
                    101,
                    110,
                    116,
                    32,
                    60,
                    101,
                    110,
                    118,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    72,
                    117,
                    103,
                    111,
                    32,
                    101,
                    110,
                    118,
                    105,
                    114,
                    111,
                    110,
                    109,
                    101,
                    110,
                    116,
                    32,
                    40,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    58,
                    32,
                    100,
                    101,
                    118,
                    101,
                    108,
                    111,
                    112,
                    109,
                    101,
                    110,
                    116,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    118,
                    44,
                    32,
                    45,
                    45,
                    118,
                    101,
                    114,
                    98,
                    111,
                    115,
                    101,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    69,
                    110,
                    97,
                    98,
                    108,
                    101,
                    32,
                    118,
                    101,
                    114,
                    98,
                    111,
                    115,
                    101,
                    32,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    113,
                    44,
                    32,
                    45,
                    45,
                    113,
                    117,
                    105,
                    101,
                    116,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    83,
                    117,
                    112,
                    112,
                    114,
                    101,
                    115,
                    115,
                    32,
                    110,
                    111,
                    110,
                    45,
                    101,
                    114,
                    114,
                    111,
                    114,
                    32,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    108,
                    111,
                    103,
                    45,
                    108,
                    101,
                    118,
                    101,
                    108,
                    32,
                    60,
                    108,
                    101,
                    118,
                    101,
                    108,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    76,
                    111,
                    103,
                    32,
                    108,
                    101,
                    118,
                    101,
                    108,
                    32,
                    40,
                    100,
                    101,
                    98,
                    117,
                    103,
                    124,
                    105,
                    110,
                    102,
                    111,
                    124,
                    119,
                    97,
                    114,
                    110,
                    124,
                    101,
                    114,
                    114,
                    111,
                    114,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    118,
                    97,
                    108,
                    105,
                    100,
                    97,
                    116,
                    101,
                    45,
                    111,
                    110,
                    108,
                    121,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    79,
                    110,
                    108,
                    121,
                    32,
                    118,
                    97,
                    108,
                    105,
                    100,
                    97,
                    116,
                    101,
                    32,
                    99,
                    111,
                    110,
                    102,
                    105,
                    103,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    44,
                    32,
                    100,
                    111,
                    110,
                    39,
                    116,
                    32,
                    98,
                    117,
                    105,
                    108,
                    100,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    104,
                    44,
                    32,
                    45,
                    45,
                    104,
                    101,
                    108,
                    112,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    83,
                    104,
                    111,
                    119,
                    32,
                    116,
                    104,
                    105,
                    115,
                    32,
                    104,
                    101,
                    108,
                    112,
                    32,
                    109,
                    101,
                    115,
                    115,
                    97,
                    103,
                    101,
                    10,
                    10,
                    69,
                    88,
                    65,
                    77,
                    80,
                    76,
                    69,
                    83,
                    58,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    66,
                    97,
                    115,
                    105,
                    99,
                    32,
                    98,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    32,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    66,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    109,
                    105,
                    110,
                    105,
                    109,
                    97,
                    108,
                    32,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    61,
                    109,
                    105,
                    110,
                    105,
                    109,
                    97,
                    108,
                    32,
                    45,
                    45,
                    116,
                    104,
                    101,
                    109,
                    101,
                    61,
                    99,
                    111,
                    109,
                    112,
                    111,
                    115,
                    101,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    66,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    115,
                    112,
                    101,
                    99,
                    105,
                    102,
                    105,
                    99,
                    32,
                    99,
                    111,
                    109,
                    112,
                    111,
                    110,
                    101,
                    110,
                    116,
                    115,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    61,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    32,
                    45,
                    45,
                    99,
                    111,
                    109,
                    112,
                    111,
                    110,
                    101,
                    110,
                    116,
                    115,
                    61,
                    113,
                    117,
                    105,
                    122,
                    45,
                    101,
                    110,
                    103,
                    105,
                    110,
                    101,
                    44,
                    97,
                    110,
                    97,
                    108,
                    121,
                    116,
                    105,
                    99,
                    115,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    66,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    99,
                    117,
                    115,
                    116,
                    111,
                    109,
                    32,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    32,
                    100,
                    105,
                    114,
                    101,
                    99,
                    116,
                    111,
                    114,
                    121,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    61,
                    47,
                    112,
                    97,
                    116,
                    104,
                    47,
                    116,
                    111,
                    47,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    32,
                    45,
                    45,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    61,
                    47,
                    112,
                    97,
                    116,
                    104,
                    47,
                    116,
                    111,
                    47,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    80,
                    114,
                    111,
                    100,
                    117,
                    99,
                    116,
                    105,
                    111,
                    110,
                    32,
                    98,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    109,
                    105,
                    110,
                    105,
                    102,
                    105,
                    99,
                    97,
                    116,
                    105,
                    111,
                    110,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    101,
                    110,
                    118,
                    105,
                    114,
                    111,
                    110,
                    109,
                    101,
                    110,
                    116,
                    61,
                    112,
                    114,
                    111,
                    100,
                    117,
                    99,
                    116,
                    105,
                    111,
                    110,
                    32,
                    45,
                    45,
                    109,
                    105,
                    110,
                    105,
                    102,
                    121,
                    32,
                    45,
                    45,
                    98,
                    97,
                    115,
                    101,
                    45,
                    117,
                    114,
                    108,
                    61,
                    104,
                    116,
                    116,
                    112,
                    115,
                    58,
                    47,
                    47,
                    101,
                    120,
                    97,
                    109,
                    112,
                    108,
                    101,
                    46,
                    99,
                    111,
                    109,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    86,
                    97,
                    108,
                    105,
                    100,
                    97,
                    116,
                    101,
                    32,
                    99,
                    111,
                    110,
                    102,
                    105,
                    103,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    32,
                    111,
                    110,
                    108,
                    121,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    118,
                    97,
                    108,
                    105,
                    100,
                    97,
                    116,
                    101,
                    45,
                    111,
                    110,
                    108,
                    121,
                    32,
                    45,
                    45,
                    118,
                    101,
                    114,
                    98,
                    111,
                    115,
                    101,
                    10,
                    10,
                    65,
                    86,
                    65,
                    73,
                    76,
                    65,
                    66,
                    76,
                    69,
                    32,
                    84,
                    69,
                    77,
                    80,
                    76,
                    65,
                    84,
                    69,
                    83,
                    58,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    97,
                    99,
                    97,
                    100,
                    101,
                    109,
                    105,
                    99,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    101,
                    110,
                    116,
                    101,
                    114,
                    112,
                    114,
                    105,
                    115,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    109,
                    105,
                    110,
                    105,
                    109,
                    97,
                    108,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    116,
                    101,
                    115,
                    116,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    45,
                    49,
                    55,
                    53,
                    56,
                    51,
                    54,
                    56,
                    57,
                    55,
                    56,
                    52,
                    52,
                    54,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    116,
                    101,
                    115,
                    116,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    45,
                    49,
                    55,
                    53,
                    56,
                    51,
                    57,
                    55,
                    55,
                    53,
                    51,
                    51,
                    51,
                    54,
                    10,
                    10
                  ]
                },
                {
                  "type": "Buffer",
                  "data": [
                    27,
                    91,
                    48,
                    59,
                    51,
                    49,
                    109,
                    226,
                    157,
                    140,
                    32,
                    85,
                    110,
                    107,
                    110,
                    111,
                    119,
                    110,
                    32,
                    111,
                    112,
                    116,
                    105,
                    111,
                    110,
                    58,
                    32,
                    45,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    61,
                    109,
                    105,
                    110,
                    105,
                    109,
                    97,
                    108,
                    27,
                    91,
                    48,
                    109,
                    10
                  ]
                }
              ],
              "pid": 2030597,
              "stdout": {
                "type": "Buffer",
                "data": [
                  10,
                  85,
                  115,
                  97,
                  103,
                  101,
                  58,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  91,
                  79,
                  80,
                  84,
                  73,
                  79,
                  78,
                  83,
                  93,
                  10,
                  10,
                  72,
                  117,
                  103,
                  111,
                  32,
                  84,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  32,
                  70,
                  97,
                  99,
                  116,
                  111,
                  114,
                  121,
                  32,
                  70,
                  114,
                  97,
                  109,
                  101,
                  119,
                  111,
                  114,
                  107,
                  32,
                  45,
                  32,
                  66,
                  117,
                  105,
                  108,
                  100,
                  32,
                  83,
                  99,
                  114,
                  105,
                  112,
                  116,
                  10,
                  10,
                  79,
                  80,
                  84,
                  73,
                  79,
                  78,
                  83,
                  58,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  116,
                  44,
                  32,
                  45,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  32,
                  60,
                  110,
                  97,
                  109,
                  101,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  84,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  32,
                  116,
                  111,
                  32,
                  117,
                  115,
                  101,
                  32,
                  40,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  58,
                  32,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  116,
                  104,
                  101,
                  109,
                  101,
                  32,
                  60,
                  110,
                  97,
                  109,
                  101,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  72,
                  117,
                  103,
                  111,
                  32,
                  116,
                  104,
                  101,
                  109,
                  101,
                  32,
                  116,
                  111,
                  32,
                  97,
                  112,
                  112,
                  108,
                  121,
                  32,
                  40,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  58,
                  32,
                  99,
                  111,
                  109,
                  112,
                  111,
                  115,
                  101,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  99,
                  44,
                  32,
                  45,
                  45,
                  99,
                  111,
                  109,
                  112,
                  111,
                  110,
                  101,
                  110,
                  116,
                  115,
                  32,
                  60,
                  108,
                  105,
                  115,
                  116,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  67,
                  111,
                  109,
                  109,
                  97,
                  45,
                  115,
                  101,
                  112,
                  97,
                  114,
                  97,
                  116,
                  101,
                  100,
                  32,
                  108,
                  105,
                  115,
                  116,
                  32,
                  111,
                  102,
                  32,
                  99,
                  111,
                  109,
                  112,
                  111,
                  110,
                  101,
                  110,
                  116,
                  115,
                  32,
                  116,
                  111,
                  32,
                  105,
                  110,
                  99,
                  108,
                  117,
                  100,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  111,
                  44,
                  32,
                  45,
                  45,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  32,
                  60,
                  112,
                  97,
                  116,
                  104,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  79,
                  117,
                  116,
                  112,
                  117,
                  116,
                  32,
                  100,
                  105,
                  114,
                  101,
                  99,
                  116,
                  111,
                  114,
                  121,
                  32,
                  40,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  58,
                  32,
                  46,
                  47,
                  115,
                  105,
                  116,
                  101,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  32,
                  60,
                  112,
                  97,
                  116,
                  104,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  80,
                  97,
                  116,
                  104,
                  32,
                  116,
                  111,
                  32,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  32,
                  100,
                  105,
                  114,
                  101,
                  99,
                  116,
                  111,
                  114,
                  121,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103,
                  32,
                  60,
                  112,
                  97,
                  116,
                  104,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  80,
                  97,
                  116,
                  104,
                  32,
                  116,
                  111,
                  32,
                  99,
                  117,
                  115,
                  116,
                  111,
                  109,
                  32,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103,
                  117,
                  114,
                  97,
                  116,
                  105,
                  111,
                  110,
                  32,
                  102,
                  105,
                  108,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  109,
                  105,
                  110,
                  105,
                  102,
                  121,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  69,
                  110,
                  97,
                  98,
                  108,
                  101,
                  32,
                  72,
                  117,
                  103,
                  111,
                  32,
                  109,
                  105,
                  110,
                  105,
                  102,
                  105,
                  99,
                  97,
                  116,
                  105,
                  111,
                  110,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  100,
                  114,
                  97,
                  102,
                  116,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  73,
                  110,
                  99,
                  108,
                  117,
                  100,
                  101,
                  32,
                  100,
                  114,
                  97,
                  102,
                  116,
                  32,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  102,
                  117,
                  116,
                  117,
                  114,
                  101,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  73,
                  110,
                  99,
                  108,
                  117,
                  100,
                  101,
                  32,
                  102,
                  117,
                  116,
                  117,
                  114,
                  101,
                  32,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  98,
                  97,
                  115,
                  101,
                  45,
                  117,
                  114,
                  108,
                  32,
                  60,
                  117,
                  114,
                  108,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  66,
                  97,
                  115,
                  101,
                  32,
                  85,
                  82,
                  76,
                  32,
                  102,
                  111,
                  114,
                  32,
                  116,
                  104,
                  101,
                  32,
                  115,
                  105,
                  116,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  101,
                  44,
                  32,
                  45,
                  45,
                  101,
                  110,
                  118,
                  105,
                  114,
                  111,
                  110,
                  109,
                  101,
                  110,
                  116,
                  32,
                  60,
                  101,
                  110,
                  118,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  72,
                  117,
                  103,
                  111,
                  32,
                  101,
                  110,
                  118,
                  105,
                  114,
                  111,
                  110,
                  109,
                  101,
                  110,
                  116,
                  32,
                  40,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  58,
                  32,
                  100,
                  101,
                  118,
                  101,
                  108,
                  111,
                  112,
                  109,
                  101,
                  110,
                  116,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  118,
                  44,
                  32,
                  45,
                  45,
                  118,
                  101,
                  114,
                  98,
                  111,
                  115,
                  101,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  69,
                  110,
                  97,
                  98,
                  108,
                  101,
                  32,
                  118,
                  101,
                  114,
                  98,
                  111,
                  115,
                  101,
                  32,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  113,
                  44,
                  32,
                  45,
                  45,
                  113,
                  117,
                  105,
                  101,
                  116,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  83,
                  117,
                  112,
                  112,
                  114,
                  101,
                  115,
                  115,
                  32,
                  110,
                  111,
                  110,
                  45,
                  101,
                  114,
                  114,
                  111,
                  114,
                  32,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  108,
                  111,
                  103,
                  45,
                  108,
                  101,
                  118,
                  101,
                  108,
                  32,
                  60,
                  108,
                  101,
                  118,
                  101,
                  108,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  76,
                  111,
                  103,
                  32,
                  108,
                  101,
                  118,
                  101,
                  108,
                  32,
                  40,
                  100,
                  101,
                  98,
                  117,
                  103,
                  124,
                  105,
                  110,
                  102,
                  111,
                  124,
                  119,
                  97,
                  114,
                  110,
                  124,
                  101,
                  114,
                  114,
                  111,
                  114,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  118,
                  97,
                  108,
                  105,
                  100,
                  97,
                  116,
                  101,
                  45,
                  111,
                  110,
                  108,
                  121,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  79,
                  110,
                  108,
                  121,
                  32,
                  118,
                  97,
                  108,
                  105,
                  100,
                  97,
                  116,
                  101,
                  32,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103,
                  117,
                  114,
                  97,
                  116,
                  105,
                  111,
                  110,
                  44,
                  32,
                  100,
                  111,
                  110,
                  39,
                  116,
                  32,
                  98,
                  117,
                  105,
                  108,
                  100,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  104,
                  44,
                  32,
                  45,
                  45,
                  104,
                  101,
                  108,
                  112,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  83,
                  104,
                  111,
                  119,
                  32,
                  116,
                  104,
                  105,
                  115,
                  32,
                  104,
                  101,
                  108,
                  112,
                  32,
                  109,
                  101,
                  115,
                  115,
                  97,
                  103,
                  101,
                  10,
                  10,
                  69,
                  88,
                  65,
                  77,
                  80,
                  76,
                  69,
                  83,
                  58,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  66,
                  97,
                  115,
                  105,
                  99,
                  32,
                  98,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  32,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  66,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  109,
                  105,
                  110,
                  105,
                  109,
                  97,
                  108,
                  32,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  61,
                  109,
                  105,
                  110,
                  105,
                  109,
                  97,
                  108,
                  32,
                  45,
                  45,
                  116,
                  104,
                  101,
                  109,
                  101,
                  61,
                  99,
                  111,
                  109,
                  112,
                  111,
                  115,
                  101,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  66,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  115,
                  112,
                  101,
                  99,
                  105,
                  102,
                  105,
                  99,
                  32,
                  99,
                  111,
                  109,
                  112,
                  111,
                  110,
                  101,
                  110,
                  116,
                  115,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  61,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  32,
                  45,
                  45,
                  99,
                  111,
                  109,
                  112,
                  111,
                  110,
                  101,
                  110,
                  116,
                  115,
                  61,
                  113,
                  117,
                  105,
                  122,
                  45,
                  101,
                  110,
                  103,
                  105,
                  110,
                  101,
                  44,
                  97,
                  110,
                  97,
                  108,
                  121,
                  116,
                  105,
                  99,
                  115,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  66,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  99,
                  117,
                  115,
                  116,
                  111,
                  109,
                  32,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  32,
                  100,
                  105,
                  114,
                  101,
                  99,
                  116,
                  111,
                  114,
                  121,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  61,
                  47,
                  112,
                  97,
                  116,
                  104,
                  47,
                  116,
                  111,
                  47,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  32,
                  45,
                  45,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  61,
                  47,
                  112,
                  97,
                  116,
                  104,
                  47,
                  116,
                  111,
                  47,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  80,
                  114,
                  111,
                  100,
                  117,
                  99,
                  116,
                  105,
                  111,
                  110,
                  32,
                  98,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  109,
                  105,
                  110,
                  105,
                  102,
                  105,
                  99,
                  97,
                  116,
                  105,
                  111,
                  110,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  101,
                  110,
                  118,
                  105,
                  114,
                  111,
                  110,
                  109,
                  101,
                  110,
                  116,
                  61,
                  112,
                  114,
                  111,
                  100,
                  117,
                  99,
                  116,
                  105,
                  111,
                  110,
                  32,
                  45,
                  45,
                  109,
                  105,
                  110,
                  105,
                  102,
                  121,
                  32,
                  45,
                  45,
                  98,
                  97,
                  115,
                  101,
                  45,
                  117,
                  114,
                  108,
                  61,
                  104,
                  116,
                  116,
                  112,
                  115,
                  58,
                  47,
                  47,
                  101,
                  120,
                  97,
                  109,
                  112,
                  108,
                  101,
                  46,
                  99,
                  111,
                  109,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  86,
                  97,
                  108,
                  105,
                  100,
                  97,
                  116,
                  101,
                  32,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103,
                  117,
                  114,
                  97,
                  116,
                  105,
                  111,
                  110,
                  32,
                  111,
                  110,
                  108,
                  121,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  118,
                  97,
                  108,
                  105,
                  100,
                  97,
                  116,
                  101,
                  45,
                  111,
                  110,
                  108,
                  121,
                  32,
                  45,
                  45,
                  118,
                  101,
                  114,
                  98,
                  111,
                  115,
                  101,
                  10,
                  10,
                  65,
                  86,
                  65,
                  73,
                  76,
                  65,
                  66,
                  76,
                  69,
                  32,
                  84,
                  69,
                  77,
                  80,
                  76,
                  65,
                  84,
                  69,
                  83,
                  58,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  97,
                  99,
                  97,
                  100,
                  101,
                  109,
                  105,
                  99,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  101,
                  110,
                  116,
                  101,
                  114,
                  112,
                  114,
                  105,
                  115,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  109,
                  105,
                  110,
                  105,
                  109,
                  97,
                  108,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  116,
                  101,
                  115,
                  116,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  45,
                  49,
                  55,
                  53,
                  56,
                  51,
                  54,
                  56,
                  57,
                  55,
                  56,
                  52,
                  52,
                  54,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  116,
                  101,
                  115,
                  116,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  45,
                  49,
                  55,
                  53,
                  56,
                  51,
                  57,
                  55,
                  55,
                  53,
                  51,
                  51,
                  51,
                  54,
                  10,
                  10
                ]
              },
              "stderr": {
                "type": "Buffer",
                "data": [
                  27,
                  91,
                  48,
                  59,
                  51,
                  49,
                  109,
                  226,
                  157,
                  140,
                  32,
                  85,
                  110,
                  107,
                  110,
                  111,
                  119,
                  110,
                  32,
                  111,
                  112,
                  116,
                  105,
                  111,
                  110,
                  58,
                  32,
                  45,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  61,
                  109,
                  105,
                  110,
                  105,
                  109,
                  97,
                  108,
                  27,
                  91,
                  48,
                  109,
                  10
                ]
              }
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-test-1758397766588/hugo-minimal\"\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/build.test.js:104:13)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Build System Integration Hugo build integration should produce valid Hugo site with minimal template",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should produce valid Hugo site with minimal template"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "Hugo build integration"
          ],
          "duration": 42,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                {
                  "type": "Buffer",
                  "data": [
                    10,
                    85,
                    115,
                    97,
                    103,
                    101,
                    58,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    91,
                    79,
                    80,
                    84,
                    73,
                    79,
                    78,
                    83,
                    93,
                    10,
                    10,
                    72,
                    117,
                    103,
                    111,
                    32,
                    84,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    32,
                    70,
                    97,
                    99,
                    116,
                    111,
                    114,
                    121,
                    32,
                    70,
                    114,
                    97,
                    109,
                    101,
                    119,
                    111,
                    114,
                    107,
                    32,
                    45,
                    32,
                    66,
                    117,
                    105,
                    108,
                    100,
                    32,
                    83,
                    99,
                    114,
                    105,
                    112,
                    116,
                    10,
                    10,
                    79,
                    80,
                    84,
                    73,
                    79,
                    78,
                    83,
                    58,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    116,
                    44,
                    32,
                    45,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    32,
                    60,
                    110,
                    97,
                    109,
                    101,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    84,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    32,
                    116,
                    111,
                    32,
                    117,
                    115,
                    101,
                    32,
                    40,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    58,
                    32,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    116,
                    104,
                    101,
                    109,
                    101,
                    32,
                    60,
                    110,
                    97,
                    109,
                    101,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    72,
                    117,
                    103,
                    111,
                    32,
                    116,
                    104,
                    101,
                    109,
                    101,
                    32,
                    116,
                    111,
                    32,
                    97,
                    112,
                    112,
                    108,
                    121,
                    32,
                    40,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    58,
                    32,
                    99,
                    111,
                    109,
                    112,
                    111,
                    115,
                    101,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    99,
                    44,
                    32,
                    45,
                    45,
                    99,
                    111,
                    109,
                    112,
                    111,
                    110,
                    101,
                    110,
                    116,
                    115,
                    32,
                    60,
                    108,
                    105,
                    115,
                    116,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    67,
                    111,
                    109,
                    109,
                    97,
                    45,
                    115,
                    101,
                    112,
                    97,
                    114,
                    97,
                    116,
                    101,
                    100,
                    32,
                    108,
                    105,
                    115,
                    116,
                    32,
                    111,
                    102,
                    32,
                    99,
                    111,
                    109,
                    112,
                    111,
                    110,
                    101,
                    110,
                    116,
                    115,
                    32,
                    116,
                    111,
                    32,
                    105,
                    110,
                    99,
                    108,
                    117,
                    100,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    111,
                    44,
                    32,
                    45,
                    45,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    32,
                    60,
                    112,
                    97,
                    116,
                    104,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    79,
                    117,
                    116,
                    112,
                    117,
                    116,
                    32,
                    100,
                    105,
                    114,
                    101,
                    99,
                    116,
                    111,
                    114,
                    121,
                    32,
                    40,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    58,
                    32,
                    46,
                    47,
                    115,
                    105,
                    116,
                    101,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    32,
                    60,
                    112,
                    97,
                    116,
                    104,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    80,
                    97,
                    116,
                    104,
                    32,
                    116,
                    111,
                    32,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    32,
                    100,
                    105,
                    114,
                    101,
                    99,
                    116,
                    111,
                    114,
                    121,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    99,
                    111,
                    110,
                    102,
                    105,
                    103,
                    32,
                    60,
                    112,
                    97,
                    116,
                    104,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    80,
                    97,
                    116,
                    104,
                    32,
                    116,
                    111,
                    32,
                    99,
                    117,
                    115,
                    116,
                    111,
                    109,
                    32,
                    99,
                    111,
                    110,
                    102,
                    105,
                    103,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    32,
                    102,
                    105,
                    108,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    109,
                    105,
                    110,
                    105,
                    102,
                    121,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    69,
                    110,
                    97,
                    98,
                    108,
                    101,
                    32,
                    72,
                    117,
                    103,
                    111,
                    32,
                    109,
                    105,
                    110,
                    105,
                    102,
                    105,
                    99,
                    97,
                    116,
                    105,
                    111,
                    110,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    100,
                    114,
                    97,
                    102,
                    116,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    73,
                    110,
                    99,
                    108,
                    117,
                    100,
                    101,
                    32,
                    100,
                    114,
                    97,
                    102,
                    116,
                    32,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    102,
                    117,
                    116,
                    117,
                    114,
                    101,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    73,
                    110,
                    99,
                    108,
                    117,
                    100,
                    101,
                    32,
                    102,
                    117,
                    116,
                    117,
                    114,
                    101,
                    32,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    98,
                    97,
                    115,
                    101,
                    45,
                    117,
                    114,
                    108,
                    32,
                    60,
                    117,
                    114,
                    108,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    66,
                    97,
                    115,
                    101,
                    32,
                    85,
                    82,
                    76,
                    32,
                    102,
                    111,
                    114,
                    32,
                    116,
                    104,
                    101,
                    32,
                    115,
                    105,
                    116,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    101,
                    44,
                    32,
                    45,
                    45,
                    101,
                    110,
                    118,
                    105,
                    114,
                    111,
                    110,
                    109,
                    101,
                    110,
                    116,
                    32,
                    60,
                    101,
                    110,
                    118,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    72,
                    117,
                    103,
                    111,
                    32,
                    101,
                    110,
                    118,
                    105,
                    114,
                    111,
                    110,
                    109,
                    101,
                    110,
                    116,
                    32,
                    40,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    58,
                    32,
                    100,
                    101,
                    118,
                    101,
                    108,
                    111,
                    112,
                    109,
                    101,
                    110,
                    116,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    118,
                    44,
                    32,
                    45,
                    45,
                    118,
                    101,
                    114,
                    98,
                    111,
                    115,
                    101,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    69,
                    110,
                    97,
                    98,
                    108,
                    101,
                    32,
                    118,
                    101,
                    114,
                    98,
                    111,
                    115,
                    101,
                    32,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    113,
                    44,
                    32,
                    45,
                    45,
                    113,
                    117,
                    105,
                    101,
                    116,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    83,
                    117,
                    112,
                    112,
                    114,
                    101,
                    115,
                    115,
                    32,
                    110,
                    111,
                    110,
                    45,
                    101,
                    114,
                    114,
                    111,
                    114,
                    32,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    108,
                    111,
                    103,
                    45,
                    108,
                    101,
                    118,
                    101,
                    108,
                    32,
                    60,
                    108,
                    101,
                    118,
                    101,
                    108,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    76,
                    111,
                    103,
                    32,
                    108,
                    101,
                    118,
                    101,
                    108,
                    32,
                    40,
                    100,
                    101,
                    98,
                    117,
                    103,
                    124,
                    105,
                    110,
                    102,
                    111,
                    124,
                    119,
                    97,
                    114,
                    110,
                    124,
                    101,
                    114,
                    114,
                    111,
                    114,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    118,
                    97,
                    108,
                    105,
                    100,
                    97,
                    116,
                    101,
                    45,
                    111,
                    110,
                    108,
                    121,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    79,
                    110,
                    108,
                    121,
                    32,
                    118,
                    97,
                    108,
                    105,
                    100,
                    97,
                    116,
                    101,
                    32,
                    99,
                    111,
                    110,
                    102,
                    105,
                    103,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    44,
                    32,
                    100,
                    111,
                    110,
                    39,
                    116,
                    32,
                    98,
                    117,
                    105,
                    108,
                    100,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    104,
                    44,
                    32,
                    45,
                    45,
                    104,
                    101,
                    108,
                    112,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    83,
                    104,
                    111,
                    119,
                    32,
                    116,
                    104,
                    105,
                    115,
                    32,
                    104,
                    101,
                    108,
                    112,
                    32,
                    109,
                    101,
                    115,
                    115,
                    97,
                    103,
                    101,
                    10,
                    10,
                    69,
                    88,
                    65,
                    77,
                    80,
                    76,
                    69,
                    83,
                    58,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    66,
                    97,
                    115,
                    105,
                    99,
                    32,
                    98,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    32,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    66,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    109,
                    105,
                    110,
                    105,
                    109,
                    97,
                    108,
                    32,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    61,
                    109,
                    105,
                    110,
                    105,
                    109,
                    97,
                    108,
                    32,
                    45,
                    45,
                    116,
                    104,
                    101,
                    109,
                    101,
                    61,
                    99,
                    111,
                    109,
                    112,
                    111,
                    115,
                    101,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    66,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    115,
                    112,
                    101,
                    99,
                    105,
                    102,
                    105,
                    99,
                    32,
                    99,
                    111,
                    109,
                    112,
                    111,
                    110,
                    101,
                    110,
                    116,
                    115,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    61,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    32,
                    45,
                    45,
                    99,
                    111,
                    109,
                    112,
                    111,
                    110,
                    101,
                    110,
                    116,
                    115,
                    61,
                    113,
                    117,
                    105,
                    122,
                    45,
                    101,
                    110,
                    103,
                    105,
                    110,
                    101,
                    44,
                    97,
                    110,
                    97,
                    108,
                    121,
                    116,
                    105,
                    99,
                    115,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    66,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    99,
                    117,
                    115,
                    116,
                    111,
                    109,
                    32,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    32,
                    100,
                    105,
                    114,
                    101,
                    99,
                    116,
                    111,
                    114,
                    121,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    61,
                    47,
                    112,
                    97,
                    116,
                    104,
                    47,
                    116,
                    111,
                    47,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    32,
                    45,
                    45,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    61,
                    47,
                    112,
                    97,
                    116,
                    104,
                    47,
                    116,
                    111,
                    47,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    80,
                    114,
                    111,
                    100,
                    117,
                    99,
                    116,
                    105,
                    111,
                    110,
                    32,
                    98,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    109,
                    105,
                    110,
                    105,
                    102,
                    105,
                    99,
                    97,
                    116,
                    105,
                    111,
                    110,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    101,
                    110,
                    118,
                    105,
                    114,
                    111,
                    110,
                    109,
                    101,
                    110,
                    116,
                    61,
                    112,
                    114,
                    111,
                    100,
                    117,
                    99,
                    116,
                    105,
                    111,
                    110,
                    32,
                    45,
                    45,
                    109,
                    105,
                    110,
                    105,
                    102,
                    121,
                    32,
                    45,
                    45,
                    98,
                    97,
                    115,
                    101,
                    45,
                    117,
                    114,
                    108,
                    61,
                    104,
                    116,
                    116,
                    112,
                    115,
                    58,
                    47,
                    47,
                    101,
                    120,
                    97,
                    109,
                    112,
                    108,
                    101,
                    46,
                    99,
                    111,
                    109,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    86,
                    97,
                    108,
                    105,
                    100,
                    97,
                    116,
                    101,
                    32,
                    99,
                    111,
                    110,
                    102,
                    105,
                    103,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    32,
                    111,
                    110,
                    108,
                    121,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    118,
                    97,
                    108,
                    105,
                    100,
                    97,
                    116,
                    101,
                    45,
                    111,
                    110,
                    108,
                    121,
                    32,
                    45,
                    45,
                    118,
                    101,
                    114,
                    98,
                    111,
                    115,
                    101,
                    10,
                    10,
                    65,
                    86,
                    65,
                    73,
                    76,
                    65,
                    66,
                    76,
                    69,
                    32,
                    84,
                    69,
                    77,
                    80,
                    76,
                    65,
                    84,
                    69,
                    83,
                    58,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    97,
                    99,
                    97,
                    100,
                    101,
                    109,
                    105,
                    99,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    101,
                    110,
                    116,
                    101,
                    114,
                    112,
                    114,
                    105,
                    115,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    109,
                    105,
                    110,
                    105,
                    109,
                    97,
                    108,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    116,
                    101,
                    115,
                    116,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    45,
                    49,
                    55,
                    53,
                    56,
                    51,
                    54,
                    56,
                    57,
                    55,
                    56,
                    52,
                    52,
                    54,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    116,
                    101,
                    115,
                    116,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    45,
                    49,
                    55,
                    53,
                    56,
                    51,
                    57,
                    55,
                    55,
                    53,
                    51,
                    51,
                    51,
                    54,
                    10,
                    10
                  ]
                },
                {
                  "type": "Buffer",
                  "data": [
                    27,
                    91,
                    48,
                    59,
                    51,
                    49,
                    109,
                    226,
                    157,
                    140,
                    32,
                    85,
                    110,
                    107,
                    110,
                    111,
                    119,
                    110,
                    32,
                    111,
                    112,
                    116,
                    105,
                    111,
                    110,
                    58,
                    32,
                    45,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    61,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    27,
                    91,
                    48,
                    109,
                    10
                  ]
                }
              ],
              "pid": 2030613,
              "stdout": {
                "type": "Buffer",
                "data": [
                  10,
                  85,
                  115,
                  97,
                  103,
                  101,
                  58,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  91,
                  79,
                  80,
                  84,
                  73,
                  79,
                  78,
                  83,
                  93,
                  10,
                  10,
                  72,
                  117,
                  103,
                  111,
                  32,
                  84,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  32,
                  70,
                  97,
                  99,
                  116,
                  111,
                  114,
                  121,
                  32,
                  70,
                  114,
                  97,
                  109,
                  101,
                  119,
                  111,
                  114,
                  107,
                  32,
                  45,
                  32,
                  66,
                  117,
                  105,
                  108,
                  100,
                  32,
                  83,
                  99,
                  114,
                  105,
                  112,
                  116,
                  10,
                  10,
                  79,
                  80,
                  84,
                  73,
                  79,
                  78,
                  83,
                  58,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  116,
                  44,
                  32,
                  45,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  32,
                  60,
                  110,
                  97,
                  109,
                  101,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  84,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  32,
                  116,
                  111,
                  32,
                  117,
                  115,
                  101,
                  32,
                  40,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  58,
                  32,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  116,
                  104,
                  101,
                  109,
                  101,
                  32,
                  60,
                  110,
                  97,
                  109,
                  101,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  72,
                  117,
                  103,
                  111,
                  32,
                  116,
                  104,
                  101,
                  109,
                  101,
                  32,
                  116,
                  111,
                  32,
                  97,
                  112,
                  112,
                  108,
                  121,
                  32,
                  40,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  58,
                  32,
                  99,
                  111,
                  109,
                  112,
                  111,
                  115,
                  101,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  99,
                  44,
                  32,
                  45,
                  45,
                  99,
                  111,
                  109,
                  112,
                  111,
                  110,
                  101,
                  110,
                  116,
                  115,
                  32,
                  60,
                  108,
                  105,
                  115,
                  116,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  67,
                  111,
                  109,
                  109,
                  97,
                  45,
                  115,
                  101,
                  112,
                  97,
                  114,
                  97,
                  116,
                  101,
                  100,
                  32,
                  108,
                  105,
                  115,
                  116,
                  32,
                  111,
                  102,
                  32,
                  99,
                  111,
                  109,
                  112,
                  111,
                  110,
                  101,
                  110,
                  116,
                  115,
                  32,
                  116,
                  111,
                  32,
                  105,
                  110,
                  99,
                  108,
                  117,
                  100,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  111,
                  44,
                  32,
                  45,
                  45,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  32,
                  60,
                  112,
                  97,
                  116,
                  104,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  79,
                  117,
                  116,
                  112,
                  117,
                  116,
                  32,
                  100,
                  105,
                  114,
                  101,
                  99,
                  116,
                  111,
                  114,
                  121,
                  32,
                  40,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  58,
                  32,
                  46,
                  47,
                  115,
                  105,
                  116,
                  101,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  32,
                  60,
                  112,
                  97,
                  116,
                  104,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  80,
                  97,
                  116,
                  104,
                  32,
                  116,
                  111,
                  32,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  32,
                  100,
                  105,
                  114,
                  101,
                  99,
                  116,
                  111,
                  114,
                  121,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103,
                  32,
                  60,
                  112,
                  97,
                  116,
                  104,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  80,
                  97,
                  116,
                  104,
                  32,
                  116,
                  111,
                  32,
                  99,
                  117,
                  115,
                  116,
                  111,
                  109,
                  32,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103,
                  117,
                  114,
                  97,
                  116,
                  105,
                  111,
                  110,
                  32,
                  102,
                  105,
                  108,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  109,
                  105,
                  110,
                  105,
                  102,
                  121,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  69,
                  110,
                  97,
                  98,
                  108,
                  101,
                  32,
                  72,
                  117,
                  103,
                  111,
                  32,
                  109,
                  105,
                  110,
                  105,
                  102,
                  105,
                  99,
                  97,
                  116,
                  105,
                  111,
                  110,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  100,
                  114,
                  97,
                  102,
                  116,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  73,
                  110,
                  99,
                  108,
                  117,
                  100,
                  101,
                  32,
                  100,
                  114,
                  97,
                  102,
                  116,
                  32,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  102,
                  117,
                  116,
                  117,
                  114,
                  101,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  73,
                  110,
                  99,
                  108,
                  117,
                  100,
                  101,
                  32,
                  102,
                  117,
                  116,
                  117,
                  114,
                  101,
                  32,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  98,
                  97,
                  115,
                  101,
                  45,
                  117,
                  114,
                  108,
                  32,
                  60,
                  117,
                  114,
                  108,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  66,
                  97,
                  115,
                  101,
                  32,
                  85,
                  82,
                  76,
                  32,
                  102,
                  111,
                  114,
                  32,
                  116,
                  104,
                  101,
                  32,
                  115,
                  105,
                  116,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  101,
                  44,
                  32,
                  45,
                  45,
                  101,
                  110,
                  118,
                  105,
                  114,
                  111,
                  110,
                  109,
                  101,
                  110,
                  116,
                  32,
                  60,
                  101,
                  110,
                  118,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  72,
                  117,
                  103,
                  111,
                  32,
                  101,
                  110,
                  118,
                  105,
                  114,
                  111,
                  110,
                  109,
                  101,
                  110,
                  116,
                  32,
                  40,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  58,
                  32,
                  100,
                  101,
                  118,
                  101,
                  108,
                  111,
                  112,
                  109,
                  101,
                  110,
                  116,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  118,
                  44,
                  32,
                  45,
                  45,
                  118,
                  101,
                  114,
                  98,
                  111,
                  115,
                  101,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  69,
                  110,
                  97,
                  98,
                  108,
                  101,
                  32,
                  118,
                  101,
                  114,
                  98,
                  111,
                  115,
                  101,
                  32,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  113,
                  44,
                  32,
                  45,
                  45,
                  113,
                  117,
                  105,
                  101,
                  116,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  83,
                  117,
                  112,
                  112,
                  114,
                  101,
                  115,
                  115,
                  32,
                  110,
                  111,
                  110,
                  45,
                  101,
                  114,
                  114,
                  111,
                  114,
                  32,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  108,
                  111,
                  103,
                  45,
                  108,
                  101,
                  118,
                  101,
                  108,
                  32,
                  60,
                  108,
                  101,
                  118,
                  101,
                  108,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  76,
                  111,
                  103,
                  32,
                  108,
                  101,
                  118,
                  101,
                  108,
                  32,
                  40,
                  100,
                  101,
                  98,
                  117,
                  103,
                  124,
                  105,
                  110,
                  102,
                  111,
                  124,
                  119,
                  97,
                  114,
                  110,
                  124,
                  101,
                  114,
                  114,
                  111,
                  114,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  118,
                  97,
                  108,
                  105,
                  100,
                  97,
                  116,
                  101,
                  45,
                  111,
                  110,
                  108,
                  121,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  79,
                  110,
                  108,
                  121,
                  32,
                  118,
                  97,
                  108,
                  105,
                  100,
                  97,
                  116,
                  101,
                  32,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103,
                  117,
                  114,
                  97,
                  116,
                  105,
                  111,
                  110,
                  44,
                  32,
                  100,
                  111,
                  110,
                  39,
                  116,
                  32,
                  98,
                  117,
                  105,
                  108,
                  100,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  104,
                  44,
                  32,
                  45,
                  45,
                  104,
                  101,
                  108,
                  112,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  83,
                  104,
                  111,
                  119,
                  32,
                  116,
                  104,
                  105,
                  115,
                  32,
                  104,
                  101,
                  108,
                  112,
                  32,
                  109,
                  101,
                  115,
                  115,
                  97,
                  103,
                  101,
                  10,
                  10,
                  69,
                  88,
                  65,
                  77,
                  80,
                  76,
                  69,
                  83,
                  58,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  66,
                  97,
                  115,
                  105,
                  99,
                  32,
                  98,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  32,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  66,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  109,
                  105,
                  110,
                  105,
                  109,
                  97,
                  108,
                  32,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  61,
                  109,
                  105,
                  110,
                  105,
                  109,
                  97,
                  108,
                  32,
                  45,
                  45,
                  116,
                  104,
                  101,
                  109,
                  101,
                  61,
                  99,
                  111,
                  109,
                  112,
                  111,
                  115,
                  101,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  66,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  115,
                  112,
                  101,
                  99,
                  105,
                  102,
                  105,
                  99,
                  32,
                  99,
                  111,
                  109,
                  112,
                  111,
                  110,
                  101,
                  110,
                  116,
                  115,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  61,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  32,
                  45,
                  45,
                  99,
                  111,
                  109,
                  112,
                  111,
                  110,
                  101,
                  110,
                  116,
                  115,
                  61,
                  113,
                  117,
                  105,
                  122,
                  45,
                  101,
                  110,
                  103,
                  105,
                  110,
                  101,
                  44,
                  97,
                  110,
                  97,
                  108,
                  121,
                  116,
                  105,
                  99,
                  115,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  66,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  99,
                  117,
                  115,
                  116,
                  111,
                  109,
                  32,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  32,
                  100,
                  105,
                  114,
                  101,
                  99,
                  116,
                  111,
                  114,
                  121,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  61,
                  47,
                  112,
                  97,
                  116,
                  104,
                  47,
                  116,
                  111,
                  47,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  32,
                  45,
                  45,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  61,
                  47,
                  112,
                  97,
                  116,
                  104,
                  47,
                  116,
                  111,
                  47,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  80,
                  114,
                  111,
                  100,
                  117,
                  99,
                  116,
                  105,
                  111,
                  110,
                  32,
                  98,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  109,
                  105,
                  110,
                  105,
                  102,
                  105,
                  99,
                  97,
                  116,
                  105,
                  111,
                  110,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  101,
                  110,
                  118,
                  105,
                  114,
                  111,
                  110,
                  109,
                  101,
                  110,
                  116,
                  61,
                  112,
                  114,
                  111,
                  100,
                  117,
                  99,
                  116,
                  105,
                  111,
                  110,
                  32,
                  45,
                  45,
                  109,
                  105,
                  110,
                  105,
                  102,
                  121,
                  32,
                  45,
                  45,
                  98,
                  97,
                  115,
                  101,
                  45,
                  117,
                  114,
                  108,
                  61,
                  104,
                  116,
                  116,
                  112,
                  115,
                  58,
                  47,
                  47,
                  101,
                  120,
                  97,
                  109,
                  112,
                  108,
                  101,
                  46,
                  99,
                  111,
                  109,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  86,
                  97,
                  108,
                  105,
                  100,
                  97,
                  116,
                  101,
                  32,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103,
                  117,
                  114,
                  97,
                  116,
                  105,
                  111,
                  110,
                  32,
                  111,
                  110,
                  108,
                  121,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  118,
                  97,
                  108,
                  105,
                  100,
                  97,
                  116,
                  101,
                  45,
                  111,
                  110,
                  108,
                  121,
                  32,
                  45,
                  45,
                  118,
                  101,
                  114,
                  98,
                  111,
                  115,
                  101,
                  10,
                  10,
                  65,
                  86,
                  65,
                  73,
                  76,
                  65,
                  66,
                  76,
                  69,
                  32,
                  84,
                  69,
                  77,
                  80,
                  76,
                  65,
                  84,
                  69,
                  83,
                  58,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  97,
                  99,
                  97,
                  100,
                  101,
                  109,
                  105,
                  99,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  101,
                  110,
                  116,
                  101,
                  114,
                  112,
                  114,
                  105,
                  115,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  109,
                  105,
                  110,
                  105,
                  109,
                  97,
                  108,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  116,
                  101,
                  115,
                  116,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  45,
                  49,
                  55,
                  53,
                  56,
                  51,
                  54,
                  56,
                  57,
                  55,
                  56,
                  52,
                  52,
                  54,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  116,
                  101,
                  115,
                  116,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  45,
                  49,
                  55,
                  53,
                  56,
                  51,
                  57,
                  55,
                  55,
                  53,
                  51,
                  51,
                  51,
                  54,
                  10,
                  10
                ]
              },
              "stderr": {
                "type": "Buffer",
                "data": [
                  27,
                  91,
                  48,
                  59,
                  51,
                  49,
                  109,
                  226,
                  157,
                  140,
                  32,
                  85,
                  110,
                  107,
                  110,
                  111,
                  119,
                  110,
                  32,
                  111,
                  112,
                  116,
                  105,
                  111,
                  110,
                  58,
                  32,
                  45,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  61,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  27,
                  91,
                  48,
                  109,
                  10
                ]
              }
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=default --theme=compose --output=\"/tmp/hugo-templates-test-1758397766588/hugo-default\"\n\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/build.test.js:138:13)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Build System Integration Hugo build integration should produce valid Hugo site with default template",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should produce valid Hugo site with default template"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "Theme integration"
          ],
          "duration": 42,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                {
                  "type": "Buffer",
                  "data": [
                    10,
                    85,
                    115,
                    97,
                    103,
                    101,
                    58,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    91,
                    79,
                    80,
                    84,
                    73,
                    79,
                    78,
                    83,
                    93,
                    10,
                    10,
                    72,
                    117,
                    103,
                    111,
                    32,
                    84,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    32,
                    70,
                    97,
                    99,
                    116,
                    111,
                    114,
                    121,
                    32,
                    70,
                    114,
                    97,
                    109,
                    101,
                    119,
                    111,
                    114,
                    107,
                    32,
                    45,
                    32,
                    66,
                    117,
                    105,
                    108,
                    100,
                    32,
                    83,
                    99,
                    114,
                    105,
                    112,
                    116,
                    10,
                    10,
                    79,
                    80,
                    84,
                    73,
                    79,
                    78,
                    83,
                    58,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    116,
                    44,
                    32,
                    45,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    32,
                    60,
                    110,
                    97,
                    109,
                    101,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    84,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    32,
                    116,
                    111,
                    32,
                    117,
                    115,
                    101,
                    32,
                    40,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    58,
                    32,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    116,
                    104,
                    101,
                    109,
                    101,
                    32,
                    60,
                    110,
                    97,
                    109,
                    101,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    72,
                    117,
                    103,
                    111,
                    32,
                    116,
                    104,
                    101,
                    109,
                    101,
                    32,
                    116,
                    111,
                    32,
                    97,
                    112,
                    112,
                    108,
                    121,
                    32,
                    40,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    58,
                    32,
                    99,
                    111,
                    109,
                    112,
                    111,
                    115,
                    101,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    99,
                    44,
                    32,
                    45,
                    45,
                    99,
                    111,
                    109,
                    112,
                    111,
                    110,
                    101,
                    110,
                    116,
                    115,
                    32,
                    60,
                    108,
                    105,
                    115,
                    116,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    67,
                    111,
                    109,
                    109,
                    97,
                    45,
                    115,
                    101,
                    112,
                    97,
                    114,
                    97,
                    116,
                    101,
                    100,
                    32,
                    108,
                    105,
                    115,
                    116,
                    32,
                    111,
                    102,
                    32,
                    99,
                    111,
                    109,
                    112,
                    111,
                    110,
                    101,
                    110,
                    116,
                    115,
                    32,
                    116,
                    111,
                    32,
                    105,
                    110,
                    99,
                    108,
                    117,
                    100,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    111,
                    44,
                    32,
                    45,
                    45,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    32,
                    60,
                    112,
                    97,
                    116,
                    104,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    79,
                    117,
                    116,
                    112,
                    117,
                    116,
                    32,
                    100,
                    105,
                    114,
                    101,
                    99,
                    116,
                    111,
                    114,
                    121,
                    32,
                    40,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    58,
                    32,
                    46,
                    47,
                    115,
                    105,
                    116,
                    101,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    32,
                    60,
                    112,
                    97,
                    116,
                    104,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    80,
                    97,
                    116,
                    104,
                    32,
                    116,
                    111,
                    32,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    32,
                    100,
                    105,
                    114,
                    101,
                    99,
                    116,
                    111,
                    114,
                    121,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    99,
                    111,
                    110,
                    102,
                    105,
                    103,
                    32,
                    60,
                    112,
                    97,
                    116,
                    104,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    80,
                    97,
                    116,
                    104,
                    32,
                    116,
                    111,
                    32,
                    99,
                    117,
                    115,
                    116,
                    111,
                    109,
                    32,
                    99,
                    111,
                    110,
                    102,
                    105,
                    103,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    32,
                    102,
                    105,
                    108,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    109,
                    105,
                    110,
                    105,
                    102,
                    121,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    69,
                    110,
                    97,
                    98,
                    108,
                    101,
                    32,
                    72,
                    117,
                    103,
                    111,
                    32,
                    109,
                    105,
                    110,
                    105,
                    102,
                    105,
                    99,
                    97,
                    116,
                    105,
                    111,
                    110,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    100,
                    114,
                    97,
                    102,
                    116,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    73,
                    110,
                    99,
                    108,
                    117,
                    100,
                    101,
                    32,
                    100,
                    114,
                    97,
                    102,
                    116,
                    32,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    102,
                    117,
                    116,
                    117,
                    114,
                    101,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    73,
                    110,
                    99,
                    108,
                    117,
                    100,
                    101,
                    32,
                    102,
                    117,
                    116,
                    117,
                    114,
                    101,
                    32,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    98,
                    97,
                    115,
                    101,
                    45,
                    117,
                    114,
                    108,
                    32,
                    60,
                    117,
                    114,
                    108,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    66,
                    97,
                    115,
                    101,
                    32,
                    85,
                    82,
                    76,
                    32,
                    102,
                    111,
                    114,
                    32,
                    116,
                    104,
                    101,
                    32,
                    115,
                    105,
                    116,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    101,
                    44,
                    32,
                    45,
                    45,
                    101,
                    110,
                    118,
                    105,
                    114,
                    111,
                    110,
                    109,
                    101,
                    110,
                    116,
                    32,
                    60,
                    101,
                    110,
                    118,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    72,
                    117,
                    103,
                    111,
                    32,
                    101,
                    110,
                    118,
                    105,
                    114,
                    111,
                    110,
                    109,
                    101,
                    110,
                    116,
                    32,
                    40,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    58,
                    32,
                    100,
                    101,
                    118,
                    101,
                    108,
                    111,
                    112,
                    109,
                    101,
                    110,
                    116,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    118,
                    44,
                    32,
                    45,
                    45,
                    118,
                    101,
                    114,
                    98,
                    111,
                    115,
                    101,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    69,
                    110,
                    97,
                    98,
                    108,
                    101,
                    32,
                    118,
                    101,
                    114,
                    98,
                    111,
                    115,
                    101,
                    32,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    113,
                    44,
                    32,
                    45,
                    45,
                    113,
                    117,
                    105,
                    101,
                    116,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    83,
                    117,
                    112,
                    112,
                    114,
                    101,
                    115,
                    115,
                    32,
                    110,
                    111,
                    110,
                    45,
                    101,
                    114,
                    114,
                    111,
                    114,
                    32,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    108,
                    111,
                    103,
                    45,
                    108,
                    101,
                    118,
                    101,
                    108,
                    32,
                    60,
                    108,
                    101,
                    118,
                    101,
                    108,
                    62,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    76,
                    111,
                    103,
                    32,
                    108,
                    101,
                    118,
                    101,
                    108,
                    32,
                    40,
                    100,
                    101,
                    98,
                    117,
                    103,
                    124,
                    105,
                    110,
                    102,
                    111,
                    124,
                    119,
                    97,
                    114,
                    110,
                    124,
                    101,
                    114,
                    114,
                    111,
                    114,
                    41,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    45,
                    118,
                    97,
                    108,
                    105,
                    100,
                    97,
                    116,
                    101,
                    45,
                    111,
                    110,
                    108,
                    121,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    79,
                    110,
                    108,
                    121,
                    32,
                    118,
                    97,
                    108,
                    105,
                    100,
                    97,
                    116,
                    101,
                    32,
                    99,
                    111,
                    110,
                    102,
                    105,
                    103,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    44,
                    32,
                    100,
                    111,
                    110,
                    39,
                    116,
                    32,
                    98,
                    117,
                    105,
                    108,
                    100,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    104,
                    44,
                    32,
                    45,
                    45,
                    104,
                    101,
                    108,
                    112,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    32,
                    83,
                    104,
                    111,
                    119,
                    32,
                    116,
                    104,
                    105,
                    115,
                    32,
                    104,
                    101,
                    108,
                    112,
                    32,
                    109,
                    101,
                    115,
                    115,
                    97,
                    103,
                    101,
                    10,
                    10,
                    69,
                    88,
                    65,
                    77,
                    80,
                    76,
                    69,
                    83,
                    58,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    66,
                    97,
                    115,
                    105,
                    99,
                    32,
                    98,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    32,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    66,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    109,
                    105,
                    110,
                    105,
                    109,
                    97,
                    108,
                    32,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    61,
                    109,
                    105,
                    110,
                    105,
                    109,
                    97,
                    108,
                    32,
                    45,
                    45,
                    116,
                    104,
                    101,
                    109,
                    101,
                    61,
                    99,
                    111,
                    109,
                    112,
                    111,
                    115,
                    101,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    66,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    115,
                    112,
                    101,
                    99,
                    105,
                    102,
                    105,
                    99,
                    32,
                    99,
                    111,
                    109,
                    112,
                    111,
                    110,
                    101,
                    110,
                    116,
                    115,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    61,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    32,
                    45,
                    45,
                    99,
                    111,
                    109,
                    112,
                    111,
                    110,
                    101,
                    110,
                    116,
                    115,
                    61,
                    113,
                    117,
                    105,
                    122,
                    45,
                    101,
                    110,
                    103,
                    105,
                    110,
                    101,
                    44,
                    97,
                    110,
                    97,
                    108,
                    121,
                    116,
                    105,
                    99,
                    115,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    66,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    99,
                    117,
                    115,
                    116,
                    111,
                    109,
                    32,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    32,
                    100,
                    105,
                    114,
                    101,
                    99,
                    116,
                    111,
                    114,
                    121,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    61,
                    47,
                    112,
                    97,
                    116,
                    104,
                    47,
                    116,
                    111,
                    47,
                    99,
                    111,
                    110,
                    116,
                    101,
                    110,
                    116,
                    32,
                    45,
                    45,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    61,
                    47,
                    112,
                    97,
                    116,
                    104,
                    47,
                    116,
                    111,
                    47,
                    111,
                    117,
                    116,
                    112,
                    117,
                    116,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    80,
                    114,
                    111,
                    100,
                    117,
                    99,
                    116,
                    105,
                    111,
                    110,
                    32,
                    98,
                    117,
                    105,
                    108,
                    100,
                    32,
                    119,
                    105,
                    116,
                    104,
                    32,
                    109,
                    105,
                    110,
                    105,
                    102,
                    105,
                    99,
                    97,
                    116,
                    105,
                    111,
                    110,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    101,
                    110,
                    118,
                    105,
                    114,
                    111,
                    110,
                    109,
                    101,
                    110,
                    116,
                    61,
                    112,
                    114,
                    111,
                    100,
                    117,
                    99,
                    116,
                    105,
                    111,
                    110,
                    32,
                    45,
                    45,
                    109,
                    105,
                    110,
                    105,
                    102,
                    121,
                    32,
                    45,
                    45,
                    98,
                    97,
                    115,
                    101,
                    45,
                    117,
                    114,
                    108,
                    61,
                    104,
                    116,
                    116,
                    112,
                    115,
                    58,
                    47,
                    47,
                    101,
                    120,
                    97,
                    109,
                    112,
                    108,
                    101,
                    46,
                    99,
                    111,
                    109,
                    10,
                    10,
                    32,
                    32,
                    32,
                    32,
                    35,
                    32,
                    86,
                    97,
                    108,
                    105,
                    100,
                    97,
                    116,
                    101,
                    32,
                    99,
                    111,
                    110,
                    102,
                    105,
                    103,
                    117,
                    114,
                    97,
                    116,
                    105,
                    111,
                    110,
                    32,
                    111,
                    110,
                    108,
                    121,
                    10,
                    32,
                    32,
                    32,
                    32,
                    115,
                    99,
                    114,
                    105,
                    112,
                    116,
                    115,
                    47,
                    98,
                    117,
                    105,
                    108,
                    100,
                    46,
                    115,
                    104,
                    32,
                    45,
                    45,
                    118,
                    97,
                    108,
                    105,
                    100,
                    97,
                    116,
                    101,
                    45,
                    111,
                    110,
                    108,
                    121,
                    32,
                    45,
                    45,
                    118,
                    101,
                    114,
                    98,
                    111,
                    115,
                    101,
                    10,
                    10,
                    65,
                    86,
                    65,
                    73,
                    76,
                    65,
                    66,
                    76,
                    69,
                    32,
                    84,
                    69,
                    77,
                    80,
                    76,
                    65,
                    84,
                    69,
                    83,
                    58,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    97,
                    99,
                    97,
                    100,
                    101,
                    109,
                    105,
                    99,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    100,
                    101,
                    102,
                    97,
                    117,
                    108,
                    116,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    101,
                    110,
                    116,
                    101,
                    114,
                    112,
                    114,
                    105,
                    115,
                    101,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    109,
                    105,
                    110,
                    105,
                    109,
                    97,
                    108,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    116,
                    101,
                    115,
                    116,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    45,
                    49,
                    55,
                    53,
                    56,
                    51,
                    54,
                    56,
                    57,
                    55,
                    56,
                    52,
                    52,
                    54,
                    10,
                    32,
                    32,
                    32,
                    32,
                    45,
                    32,
                    116,
                    101,
                    115,
                    116,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    45,
                    49,
                    55,
                    53,
                    56,
                    51,
                    57,
                    55,
                    55,
                    53,
                    51,
                    51,
                    51,
                    54,
                    10,
                    10
                  ]
                },
                {
                  "type": "Buffer",
                  "data": [
                    27,
                    91,
                    48,
                    59,
                    51,
                    49,
                    109,
                    226,
                    157,
                    140,
                    32,
                    85,
                    110,
                    107,
                    110,
                    111,
                    119,
                    110,
                    32,
                    111,
                    112,
                    116,
                    105,
                    111,
                    110,
                    58,
                    32,
                    45,
                    45,
                    116,
                    101,
                    109,
                    112,
                    108,
                    97,
                    116,
                    101,
                    61,
                    109,
                    105,
                    110,
                    105,
                    109,
                    97,
                    108,
                    27,
                    91,
                    48,
                    109,
                    10
                  ]
                }
              ],
              "pid": 2030629,
              "stdout": {
                "type": "Buffer",
                "data": [
                  10,
                  85,
                  115,
                  97,
                  103,
                  101,
                  58,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  91,
                  79,
                  80,
                  84,
                  73,
                  79,
                  78,
                  83,
                  93,
                  10,
                  10,
                  72,
                  117,
                  103,
                  111,
                  32,
                  84,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  32,
                  70,
                  97,
                  99,
                  116,
                  111,
                  114,
                  121,
                  32,
                  70,
                  114,
                  97,
                  109,
                  101,
                  119,
                  111,
                  114,
                  107,
                  32,
                  45,
                  32,
                  66,
                  117,
                  105,
                  108,
                  100,
                  32,
                  83,
                  99,
                  114,
                  105,
                  112,
                  116,
                  10,
                  10,
                  79,
                  80,
                  84,
                  73,
                  79,
                  78,
                  83,
                  58,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  116,
                  44,
                  32,
                  45,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  32,
                  60,
                  110,
                  97,
                  109,
                  101,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  84,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  32,
                  116,
                  111,
                  32,
                  117,
                  115,
                  101,
                  32,
                  40,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  58,
                  32,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  116,
                  104,
                  101,
                  109,
                  101,
                  32,
                  60,
                  110,
                  97,
                  109,
                  101,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  72,
                  117,
                  103,
                  111,
                  32,
                  116,
                  104,
                  101,
                  109,
                  101,
                  32,
                  116,
                  111,
                  32,
                  97,
                  112,
                  112,
                  108,
                  121,
                  32,
                  40,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  58,
                  32,
                  99,
                  111,
                  109,
                  112,
                  111,
                  115,
                  101,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  99,
                  44,
                  32,
                  45,
                  45,
                  99,
                  111,
                  109,
                  112,
                  111,
                  110,
                  101,
                  110,
                  116,
                  115,
                  32,
                  60,
                  108,
                  105,
                  115,
                  116,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  67,
                  111,
                  109,
                  109,
                  97,
                  45,
                  115,
                  101,
                  112,
                  97,
                  114,
                  97,
                  116,
                  101,
                  100,
                  32,
                  108,
                  105,
                  115,
                  116,
                  32,
                  111,
                  102,
                  32,
                  99,
                  111,
                  109,
                  112,
                  111,
                  110,
                  101,
                  110,
                  116,
                  115,
                  32,
                  116,
                  111,
                  32,
                  105,
                  110,
                  99,
                  108,
                  117,
                  100,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  111,
                  44,
                  32,
                  45,
                  45,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  32,
                  60,
                  112,
                  97,
                  116,
                  104,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  79,
                  117,
                  116,
                  112,
                  117,
                  116,
                  32,
                  100,
                  105,
                  114,
                  101,
                  99,
                  116,
                  111,
                  114,
                  121,
                  32,
                  40,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  58,
                  32,
                  46,
                  47,
                  115,
                  105,
                  116,
                  101,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  32,
                  60,
                  112,
                  97,
                  116,
                  104,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  80,
                  97,
                  116,
                  104,
                  32,
                  116,
                  111,
                  32,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  32,
                  100,
                  105,
                  114,
                  101,
                  99,
                  116,
                  111,
                  114,
                  121,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103,
                  32,
                  60,
                  112,
                  97,
                  116,
                  104,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  80,
                  97,
                  116,
                  104,
                  32,
                  116,
                  111,
                  32,
                  99,
                  117,
                  115,
                  116,
                  111,
                  109,
                  32,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103,
                  117,
                  114,
                  97,
                  116,
                  105,
                  111,
                  110,
                  32,
                  102,
                  105,
                  108,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  109,
                  105,
                  110,
                  105,
                  102,
                  121,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  69,
                  110,
                  97,
                  98,
                  108,
                  101,
                  32,
                  72,
                  117,
                  103,
                  111,
                  32,
                  109,
                  105,
                  110,
                  105,
                  102,
                  105,
                  99,
                  97,
                  116,
                  105,
                  111,
                  110,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  100,
                  114,
                  97,
                  102,
                  116,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  73,
                  110,
                  99,
                  108,
                  117,
                  100,
                  101,
                  32,
                  100,
                  114,
                  97,
                  102,
                  116,
                  32,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  102,
                  117,
                  116,
                  117,
                  114,
                  101,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  73,
                  110,
                  99,
                  108,
                  117,
                  100,
                  101,
                  32,
                  102,
                  117,
                  116,
                  117,
                  114,
                  101,
                  32,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  98,
                  97,
                  115,
                  101,
                  45,
                  117,
                  114,
                  108,
                  32,
                  60,
                  117,
                  114,
                  108,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  66,
                  97,
                  115,
                  101,
                  32,
                  85,
                  82,
                  76,
                  32,
                  102,
                  111,
                  114,
                  32,
                  116,
                  104,
                  101,
                  32,
                  115,
                  105,
                  116,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  101,
                  44,
                  32,
                  45,
                  45,
                  101,
                  110,
                  118,
                  105,
                  114,
                  111,
                  110,
                  109,
                  101,
                  110,
                  116,
                  32,
                  60,
                  101,
                  110,
                  118,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  72,
                  117,
                  103,
                  111,
                  32,
                  101,
                  110,
                  118,
                  105,
                  114,
                  111,
                  110,
                  109,
                  101,
                  110,
                  116,
                  32,
                  40,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  58,
                  32,
                  100,
                  101,
                  118,
                  101,
                  108,
                  111,
                  112,
                  109,
                  101,
                  110,
                  116,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  118,
                  44,
                  32,
                  45,
                  45,
                  118,
                  101,
                  114,
                  98,
                  111,
                  115,
                  101,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  69,
                  110,
                  97,
                  98,
                  108,
                  101,
                  32,
                  118,
                  101,
                  114,
                  98,
                  111,
                  115,
                  101,
                  32,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  113,
                  44,
                  32,
                  45,
                  45,
                  113,
                  117,
                  105,
                  101,
                  116,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  83,
                  117,
                  112,
                  112,
                  114,
                  101,
                  115,
                  115,
                  32,
                  110,
                  111,
                  110,
                  45,
                  101,
                  114,
                  114,
                  111,
                  114,
                  32,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  108,
                  111,
                  103,
                  45,
                  108,
                  101,
                  118,
                  101,
                  108,
                  32,
                  60,
                  108,
                  101,
                  118,
                  101,
                  108,
                  62,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  76,
                  111,
                  103,
                  32,
                  108,
                  101,
                  118,
                  101,
                  108,
                  32,
                  40,
                  100,
                  101,
                  98,
                  117,
                  103,
                  124,
                  105,
                  110,
                  102,
                  111,
                  124,
                  119,
                  97,
                  114,
                  110,
                  124,
                  101,
                  114,
                  114,
                  111,
                  114,
                  41,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  45,
                  118,
                  97,
                  108,
                  105,
                  100,
                  97,
                  116,
                  101,
                  45,
                  111,
                  110,
                  108,
                  121,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  79,
                  110,
                  108,
                  121,
                  32,
                  118,
                  97,
                  108,
                  105,
                  100,
                  97,
                  116,
                  101,
                  32,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103,
                  117,
                  114,
                  97,
                  116,
                  105,
                  111,
                  110,
                  44,
                  32,
                  100,
                  111,
                  110,
                  39,
                  116,
                  32,
                  98,
                  117,
                  105,
                  108,
                  100,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  104,
                  44,
                  32,
                  45,
                  45,
                  104,
                  101,
                  108,
                  112,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  32,
                  83,
                  104,
                  111,
                  119,
                  32,
                  116,
                  104,
                  105,
                  115,
                  32,
                  104,
                  101,
                  108,
                  112,
                  32,
                  109,
                  101,
                  115,
                  115,
                  97,
                  103,
                  101,
                  10,
                  10,
                  69,
                  88,
                  65,
                  77,
                  80,
                  76,
                  69,
                  83,
                  58,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  66,
                  97,
                  115,
                  105,
                  99,
                  32,
                  98,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  32,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  66,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  109,
                  105,
                  110,
                  105,
                  109,
                  97,
                  108,
                  32,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  61,
                  109,
                  105,
                  110,
                  105,
                  109,
                  97,
                  108,
                  32,
                  45,
                  45,
                  116,
                  104,
                  101,
                  109,
                  101,
                  61,
                  99,
                  111,
                  109,
                  112,
                  111,
                  115,
                  101,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  66,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  115,
                  112,
                  101,
                  99,
                  105,
                  102,
                  105,
                  99,
                  32,
                  99,
                  111,
                  109,
                  112,
                  111,
                  110,
                  101,
                  110,
                  116,
                  115,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  61,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  32,
                  45,
                  45,
                  99,
                  111,
                  109,
                  112,
                  111,
                  110,
                  101,
                  110,
                  116,
                  115,
                  61,
                  113,
                  117,
                  105,
                  122,
                  45,
                  101,
                  110,
                  103,
                  105,
                  110,
                  101,
                  44,
                  97,
                  110,
                  97,
                  108,
                  121,
                  116,
                  105,
                  99,
                  115,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  66,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  99,
                  117,
                  115,
                  116,
                  111,
                  109,
                  32,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  32,
                  100,
                  105,
                  114,
                  101,
                  99,
                  116,
                  111,
                  114,
                  121,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  61,
                  47,
                  112,
                  97,
                  116,
                  104,
                  47,
                  116,
                  111,
                  47,
                  99,
                  111,
                  110,
                  116,
                  101,
                  110,
                  116,
                  32,
                  45,
                  45,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  61,
                  47,
                  112,
                  97,
                  116,
                  104,
                  47,
                  116,
                  111,
                  47,
                  111,
                  117,
                  116,
                  112,
                  117,
                  116,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  80,
                  114,
                  111,
                  100,
                  117,
                  99,
                  116,
                  105,
                  111,
                  110,
                  32,
                  98,
                  117,
                  105,
                  108,
                  100,
                  32,
                  119,
                  105,
                  116,
                  104,
                  32,
                  109,
                  105,
                  110,
                  105,
                  102,
                  105,
                  99,
                  97,
                  116,
                  105,
                  111,
                  110,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  101,
                  110,
                  118,
                  105,
                  114,
                  111,
                  110,
                  109,
                  101,
                  110,
                  116,
                  61,
                  112,
                  114,
                  111,
                  100,
                  117,
                  99,
                  116,
                  105,
                  111,
                  110,
                  32,
                  45,
                  45,
                  109,
                  105,
                  110,
                  105,
                  102,
                  121,
                  32,
                  45,
                  45,
                  98,
                  97,
                  115,
                  101,
                  45,
                  117,
                  114,
                  108,
                  61,
                  104,
                  116,
                  116,
                  112,
                  115,
                  58,
                  47,
                  47,
                  101,
                  120,
                  97,
                  109,
                  112,
                  108,
                  101,
                  46,
                  99,
                  111,
                  109,
                  10,
                  10,
                  32,
                  32,
                  32,
                  32,
                  35,
                  32,
                  86,
                  97,
                  108,
                  105,
                  100,
                  97,
                  116,
                  101,
                  32,
                  99,
                  111,
                  110,
                  102,
                  105,
                  103,
                  117,
                  114,
                  97,
                  116,
                  105,
                  111,
                  110,
                  32,
                  111,
                  110,
                  108,
                  121,
                  10,
                  32,
                  32,
                  32,
                  32,
                  115,
                  99,
                  114,
                  105,
                  112,
                  116,
                  115,
                  47,
                  98,
                  117,
                  105,
                  108,
                  100,
                  46,
                  115,
                  104,
                  32,
                  45,
                  45,
                  118,
                  97,
                  108,
                  105,
                  100,
                  97,
                  116,
                  101,
                  45,
                  111,
                  110,
                  108,
                  121,
                  32,
                  45,
                  45,
                  118,
                  101,
                  114,
                  98,
                  111,
                  115,
                  101,
                  10,
                  10,
                  65,
                  86,
                  65,
                  73,
                  76,
                  65,
                  66,
                  76,
                  69,
                  32,
                  84,
                  69,
                  77,
                  80,
                  76,
                  65,
                  84,
                  69,
                  83,
                  58,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  97,
                  99,
                  97,
                  100,
                  101,
                  109,
                  105,
                  99,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  100,
                  101,
                  102,
                  97,
                  117,
                  108,
                  116,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  101,
                  110,
                  116,
                  101,
                  114,
                  112,
                  114,
                  105,
                  115,
                  101,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  109,
                  105,
                  110,
                  105,
                  109,
                  97,
                  108,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  116,
                  101,
                  115,
                  116,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  45,
                  49,
                  55,
                  53,
                  56,
                  51,
                  54,
                  56,
                  57,
                  55,
                  56,
                  52,
                  52,
                  54,
                  10,
                  32,
                  32,
                  32,
                  32,
                  45,
                  32,
                  116,
                  101,
                  115,
                  116,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  45,
                  49,
                  55,
                  53,
                  56,
                  51,
                  57,
                  55,
                  55,
                  53,
                  51,
                  51,
                  51,
                  54,
                  10,
                  10
                ]
              },
              "stderr": {
                "type": "Buffer",
                "data": [
                  27,
                  91,
                  48,
                  59,
                  51,
                  49,
                  109,
                  226,
                  157,
                  140,
                  32,
                  85,
                  110,
                  107,
                  110,
                  111,
                  119,
                  110,
                  32,
                  111,
                  112,
                  116,
                  105,
                  111,
                  110,
                  58,
                  32,
                  45,
                  45,
                  116,
                  101,
                  109,
                  112,
                  108,
                  97,
                  116,
                  101,
                  61,
                  109,
                  105,
                  110,
                  105,
                  109,
                  97,
                  108,
                  27,
                  91,
                  48,
                  109,
                  10
                ]
              }
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-test-1758397766588/theme-integration\"\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/build.test.js:168:13)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Build System Integration Theme integration should integrate compose theme correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should integrate compose theme correctly"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "Theme integration"
          ],
          "duration": 42,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n"
              ],
              "pid": 2030645,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=default --theme=compose --output=\"/tmp/hugo-templates-test-1758397766588/submodule-test\" --verbose\n\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/build.test.js:192:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Build System Integration Theme integration should handle theme submodules correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle theme submodules correctly"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "Environment-specific builds"
          ],
          "duration": 27,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2030661,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --theme=compose --environment=production --output=\"/tmp/hugo-templates-test-1758397766588/production\"\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/build.test.js:213:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Build System Integration Environment-specific builds should build for production environment",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should build for production environment"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "Environment-specific builds"
          ],
          "duration": 37,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2030677,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --theme=compose --environment=development --output=\"/tmp/hugo-templates-test-1758397766588/development\"\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/build.test.js:228:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Build System Integration Environment-specific builds should build for development environment",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should build for development environment"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "Custom content integration"
          ],
          "duration": 50,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2030693,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --theme=compose --content=\"/tmp/hugo-templates-test-1758397766588/custom-content-source\" --output=\"/tmp/hugo-templates-test-1758397766588/custom-content\"\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/build.test.js:253:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Build System Integration Custom content integration should handle custom content directory",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle custom content directory"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "Build options integration"
          ],
          "duration": 45,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2030709,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --theme=compose --minify --output=\"/tmp/hugo-templates-test-1758397766588/minified\"\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/build.test.js:274:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Build System Integration Build options integration should handle minification option",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle minification option"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "Build options integration"
          ],
          "duration": 42,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2030725,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --theme=compose --verbose --output=\"/tmp/hugo-templates-test-1758397766588/verbose\"\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/build.test.js:286:28)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Build System Integration Build options integration should handle verbose output",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle verbose output"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "Error handling integration"
          ],
          "duration": 47,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Build System Integration Error handling integration should handle invalid template gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle invalid template gracefully"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "Error handling integration"
          ],
          "duration": 40,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Build System Integration Error handling integration should handle invalid theme gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle invalid theme gracefully"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "Error handling integration"
          ],
          "duration": 38,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Build System Integration Error handling integration should handle missing output directory",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing output directory"
        },
        {
          "ancestorTitles": [
            "Build System Integration",
            "Parallel build support"
          ],
          "duration": 75,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2030789,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-test-1758397766588/parallel1\"\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at execSync (/root/info-tech-io/hugo-templates/tests/integration/build.test.js:343:40)\n    at new Promise (<anonymous>)\n    at /root/info-tech-io/hugo-templates/tests/integration/build.test.js:341:24\n    at Array.map (<anonymous>)\n    at Object.map (/root/info-tech-io/hugo-templates/tests/integration/build.test.js:340:42)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "Build System Integration Parallel build support should handle multiple builds concurrently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle multiple builds concurrently"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "integration"
      },
      "failureMessage": "  ● Build System Integration › End-to-end build process › should build minimal template successfully\n\n    Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-test-1758397766588/minimal-build\" --verbose\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      33 |             const buildCommand = `bash scripts/build.sh --template=minimal --theme=compose --output=\"${outputDir}\" --verbose`;\n      34 |\n    > 35 |             const output = execSync(buildCommand, {\n         |                            ^\n      36 |                 encoding: 'utf8',\n      37 |                 cwd: testDir,\n      38 |                 timeout: 60000\n\n      at Object.execSync (tests/integration/build.test.js:35:28)\n\n  ● Build System Integration › End-to-end build process › should build default template successfully\n\n    Command failed: bash scripts/build.sh --template=default --theme=compose --output=\"/tmp/hugo-templates-test-1758397766588/default-build\" --verbose\n    \u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n      55 |             const buildCommand = `bash scripts/build.sh --template=default --theme=compose --output=\"${outputDir}\" --verbose`;\n      56 |\n    > 57 |             const output = execSync(buildCommand, {\n         |                            ^\n      58 |                 encoding: 'utf8',\n      59 |                 cwd: testDir,\n      60 |                 timeout: 60000\n\n      at Object.execSync (tests/integration/build.test.js:57:28)\n\n  ● Build System Integration › End-to-end build process › should build with components integration\n\n    Command failed: bash scripts/build.sh --template=default --theme=compose --components=quiz-engine --output=\"/tmp/hugo-templates-test-1758397766588/components-build\" --verbose\n    \u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n      79 |             const buildCommand = `bash scripts/build.sh --template=default --theme=compose --components=quiz-engine --output=\"${outputDir}\" --verbose`;\n      80 |\n    > 81 |             const output = execSync(buildCommand, {\n         |                            ^\n      82 |                 encoding: 'utf8',\n      83 |                 cwd: testDir,\n      84 |                 timeout: 60000\n\n      at Object.execSync (tests/integration/build.test.js:81:28)\n\n  ● Build System Integration › Hugo build integration › should produce valid Hugo site with minimal template\n\n    Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-test-1758397766588/hugo-minimal\"\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      102 |\n      103 |             // Build the template\n    > 104 |             execSync(`bash scripts/build.sh --template=minimal --theme=compose --output=\"${outputDir}\"`, {\n          |             ^\n      105 |                 cwd: testDir,\n      106 |                 timeout: 60000\n      107 |             });\n\n      at Object.execSync (tests/integration/build.test.js:104:13)\n\n  ● Build System Integration › Hugo build integration › should produce valid Hugo site with default template\n\n    Command failed: bash scripts/build.sh --template=default --theme=compose --output=\"/tmp/hugo-templates-test-1758397766588/hugo-default\"\n    \u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n      136 |\n      137 |             // Build the template\n    > 138 |             execSync(`bash scripts/build.sh --template=default --theme=compose --output=\"${outputDir}\"`, {\n          |             ^\n      139 |                 cwd: testDir,\n      140 |                 timeout: 60000\n      141 |             });\n\n      at Object.execSync (tests/integration/build.test.js:138:13)\n\n  ● Build System Integration › Theme integration › should integrate compose theme correctly\n\n    Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-test-1758397766588/theme-integration\"\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      166 |             const outputDir = path.join(tempDir, 'theme-integration');\n      167 |\n    > 168 |             execSync(`bash scripts/build.sh --template=minimal --theme=compose --output=\"${outputDir}\"`, {\n          |             ^\n      169 |                 cwd: testDir,\n      170 |                 timeout: 60000\n      171 |             });\n\n      at Object.execSync (tests/integration/build.test.js:168:13)\n\n  ● Build System Integration › Theme integration › should handle theme submodules correctly\n\n    Command failed: bash scripts/build.sh --template=default --theme=compose --output=\"/tmp/hugo-templates-test-1758397766588/submodule-test\" --verbose\n    \u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n      190 |             const outputDir = path.join(tempDir, 'submodule-test');\n      191 |\n    > 192 |             const output = execSync(`bash scripts/build.sh --template=default --theme=compose --output=\"${outputDir}\" --verbose`, {\n          |                            ^\n      193 |                 encoding: 'utf8',\n      194 |                 cwd: testDir,\n      195 |                 timeout: 60000\n\n      at Object.execSync (tests/integration/build.test.js:192:28)\n\n  ● Build System Integration › Environment-specific builds › should build for production environment\n\n    Command failed: bash scripts/build.sh --template=minimal --theme=compose --environment=production --output=\"/tmp/hugo-templates-test-1758397766588/production\"\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      211 |             const outputDir = path.join(tempDir, 'production');\n      212 |\n    > 213 |             const output = execSync(`bash scripts/build.sh --template=minimal --theme=compose --environment=production --output=\"${outputDir}\"`, {\n          |                            ^\n      214 |                 encoding: 'utf8',\n      215 |                 cwd: testDir,\n      216 |                 timeout: 60000\n\n      at Object.execSync (tests/integration/build.test.js:213:28)\n\n  ● Build System Integration › Environment-specific builds › should build for development environment\n\n    Command failed: bash scripts/build.sh --template=minimal --theme=compose --environment=development --output=\"/tmp/hugo-templates-test-1758397766588/development\"\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      226 |             const outputDir = path.join(tempDir, 'development');\n      227 |\n    > 228 |             const output = execSync(`bash scripts/build.sh --template=minimal --theme=compose --environment=development --output=\"${outputDir}\"`, {\n          |                            ^\n      229 |                 encoding: 'utf8',\n      230 |                 cwd: testDir,\n      231 |                 timeout: 60000\n\n      at Object.execSync (tests/integration/build.test.js:228:28)\n\n  ● Build System Integration › Custom content integration › should handle custom content directory\n\n    Command failed: bash scripts/build.sh --template=minimal --theme=compose --content=\"/tmp/hugo-templates-test-1758397766588/custom-content-source\" --output=\"/tmp/hugo-templates-test-1758397766588/custom-content\"\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      251 |             );\n      252 |\n    > 253 |             const output = execSync(`bash scripts/build.sh --template=minimal --theme=compose --content=\"${customContentDir}\" --output=\"${outputDir}\"`, {\n          |                            ^\n      254 |                 encoding: 'utf8',\n      255 |                 cwd: testDir,\n      256 |                 timeout: 60000\n\n      at Object.execSync (tests/integration/build.test.js:253:28)\n\n  ● Build System Integration › Build options integration › should handle minification option\n\n    Command failed: bash scripts/build.sh --template=minimal --theme=compose --minify --output=\"/tmp/hugo-templates-test-1758397766588/minified\"\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      272 |             const outputDir = path.join(tempDir, 'minified');\n      273 |\n    > 274 |             const output = execSync(`bash scripts/build.sh --template=minimal --theme=compose --minify --output=\"${outputDir}\"`, {\n          |                            ^\n      275 |                 encoding: 'utf8',\n      276 |                 cwd: testDir,\n      277 |                 timeout: 60000\n\n      at Object.execSync (tests/integration/build.test.js:274:28)\n\n  ● Build System Integration › Build options integration › should handle verbose output\n\n    Command failed: bash scripts/build.sh --template=minimal --theme=compose --verbose --output=\"/tmp/hugo-templates-test-1758397766588/verbose\"\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      284 |             const outputDir = path.join(tempDir, 'verbose');\n      285 |\n    > 286 |             const output = execSync(`bash scripts/build.sh --template=minimal --theme=compose --verbose --output=\"${outputDir}\"`, {\n          |                            ^\n      287 |                 encoding: 'utf8',\n      288 |                 cwd: testDir,\n      289 |                 timeout: 60000\n\n      at Object.execSync (tests/integration/build.test.js:286:28)\n\n  ● Build System Integration › Parallel build support › should handle multiple builds concurrently\n\n    Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-test-1758397766588/parallel1\"\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      341 |                 return new Promise((resolve, reject) => {\n      342 |                     try {\n    > 343 |                         const output = execSync(`bash scripts/build.sh --template=minimal --theme=compose --output=\"${outputDir}\"`, {\n          |                                        ^\n      344 |                             encoding: 'utf8',\n      345 |                             cwd: testDir,\n      346 |                             timeout: 60000\n\n      at execSync (tests/integration/build.test.js:343:40)\n      at tests/integration/build.test.js:341:24\n          at Array.map (<anonymous>)\n      at Object.map (tests/integration/build.test.js:340:42)\n"
    },
    {
      "leaks": false,
      "numFailingTests": 13,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1758397772342,
        "runtime": 4870,
        "slow": false,
        "start": 1758397767472
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js",
      "testResults": [
        {
          "ancestorTitles": [
            "CLI Workflow Integration",
            "Complete workflow scenarios"
          ],
          "duration": 815,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "🔍 Hugo Template Factory - Advanced Validation\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n📋 Validating project structure...\n📋 Validating template: default...\n\n📊 Validation Results:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n✅ Information (26):\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n   ℹ️  Template 'minimal' has required file: hugo.toml\n   ℹ️  Template 'minimal' has required file: components.yml\n   ℹ️  Template 'minimal' has recommended directory: content\n   ℹ️  Template 'minimal' has recommended directory: static\n   ℹ️  Template 'minimal' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758368978446' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758368978446' has required file: components.yml\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: content\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: static\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758397753336' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758397753336' has required file: components.yml\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: content\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: static\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: archetypes\n   ℹ️  Found 6 templates: academic, default, enterprise, minimal, test-template-1758368978446, test-template-1758397753336\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n\n⚠️  Warnings (29):\n   ⚠️  Template 'academic' missing components.yml (recommended)\n   ⚠️  Template 'academic' missing recommended directory: content\n   ⚠️  Template 'academic' missing recommended directory: static\n   ⚠️  Template 'academic' missing recommended directory: archetypes\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Template 'enterprise' missing components.yml (recommended)\n   ⚠️  Template 'enterprise' missing recommended directory: content\n   ⚠️  Template 'enterprise' missing recommended directory: static\n   ⚠️  Template 'enterprise' missing recommended directory: archetypes\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n\n❌ Errors (11):\n   ❌ Template 'academic' missing required file: hugo.toml\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'name'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'version'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'description'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'status'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Template 'enterprise' missing required file: hugo.toml\n\n💥 Overall validation: FAILED\n   Found 11 errors that must be fixed\n",
                "❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n"
              ],
              "pid": 2030830,
              "stdout": "🔍 Hugo Template Factory - Advanced Validation\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n📋 Validating project structure...\n📋 Validating template: default...\n\n📊 Validation Results:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n✅ Information (26):\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n   ℹ️  Template 'minimal' has required file: hugo.toml\n   ℹ️  Template 'minimal' has required file: components.yml\n   ℹ️  Template 'minimal' has recommended directory: content\n   ℹ️  Template 'minimal' has recommended directory: static\n   ℹ️  Template 'minimal' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758368978446' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758368978446' has required file: components.yml\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: content\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: static\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758397753336' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758397753336' has required file: components.yml\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: content\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: static\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: archetypes\n   ℹ️  Found 6 templates: academic, default, enterprise, minimal, test-template-1758368978446, test-template-1758397753336\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n\n⚠️  Warnings (29):\n   ⚠️  Template 'academic' missing components.yml (recommended)\n   ⚠️  Template 'academic' missing recommended directory: content\n   ⚠️  Template 'academic' missing recommended directory: static\n   ⚠️  Template 'academic' missing recommended directory: archetypes\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Template 'enterprise' missing components.yml (recommended)\n   ⚠️  Template 'enterprise' missing recommended directory: content\n   ⚠️  Template 'enterprise' missing recommended directory: static\n   ⚠️  Template 'enterprise' missing recommended directory: archetypes\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n\n❌ Errors (11):\n   ❌ Template 'academic' missing required file: hugo.toml\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'name'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'version'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'description'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'status'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Template 'enterprise' missing required file: hugo.toml\n\n💥 Overall validation: FAILED\n   Found 11 errors that must be fixed\n",
              "stderr": "❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: node scripts/validate.js --template default --theme compose\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:39:36)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Workflow Integration Complete workflow scenarios should execute complete workflow: list → validate → build",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "failed",
          "title": "should execute complete workflow: list → validate → build"
        },
        {
          "ancestorTitles": [
            "CLI Workflow Integration",
            "Complete workflow scenarios"
          ],
          "duration": 711,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Diagnostics\"\nReceived string:    \"[19:49:28] 🔍 Hugo Template Factory - System Diagnostic\n[19:49:28] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:28]·\n[19:49:28] ℹ️  Checking system information...\n[19:49:28] ✅ System: linux x64 (6.1.0-34-amd64)\n[19:49:28] ✅ Memory: 0.71GB used / 0.93GB total\n[19:49:28] ✅ CPUs: 1\n[19:49:28] ℹ️  Checking environment configuration...\n[19:49:28] ✅ Node environment: test\n[19:49:28] ✅ Current directory: /root/info-tech-io/hugo-templates\n[19:49:28] ✅ PATH entries: 11\n[19:49:28] ℹ️  Checking required dependencies...\n[19:49:28] ✅ ✓ node: v23.11.1\n[19:49:29] ✅ ✓ npm: 11.4.2\n[19:49:29] ✅ ✓ hugo: hugo v0.148.0-c0d9bebacc6bf42a91a74d8bb0de7bc775c8e573+extended linux/amd64 BuildDate=2025-07-08T13:34:49Z VendorInfo=gohugoio\n[19:49:29] ✅ ✓ git: git version 2.39.5\n[19:49:29] ✅ ✓ bash: GNU bash, version 5.2.15(1)-release (x86_64-pc-linux-gnu)\n[19:49:29] ℹ️  - yarn: not available (optional)\n[19:49:29] ✅ Package: hugo-templates@0.1.0-alpha.1\n[19:49:29] ✅ Dependencies: 7 runtime, 4 dev\n[19:49:29] ℹ️  Checking project structure...\n[19:49:29] ✅ Directory templates/: 6 items\n[19:49:29] ✅ Directory themes/: 1 items\n[19:49:29] ✅ Directory components/: 1 items\n[19:49:29] ✅ Directory scripts/: 9 items\n[19:49:29] ✅ Directory schemas/: 5 items\n[19:49:29] ✅ Directory docs/: 0 items\n[19:49:29] ✅ File package.json: 1875 bytes\n[19:49:29] ✅ File collection.json: 1077 bytes\n[19:49:29] ✅ File .gitignore: 1306 bytes\n[19:49:29] ✅ File README.md: 2624 bytes\n[19:49:29] ⚠️  Git: 8 files with changes\n[19:49:29] ℹ️  Checking file permissions...\n[19:49:29] ✅ Script build.sh: executable\n[19:49:29] ✅ Script factory.js: executable\n[19:49:29] ✅ Script validate.js: executable\n[19:49:29] ✅ Script list.js: executable\n[19:49:29] ✅ Script generate.js: executable\n[19:49:29] ✅ Directory templates/: read/write access\n[19:49:29] ✅ Directory themes/: read/write access\n[19:49:29] ✅ Directory components/: read/write access\n[19:49:29] ℹ️  Running performance checks...\n[19:49:29] ✅ I/O Performance: 0.54ms for 100KB\n[19:49:29] ✅ Script execution: 200.51ms\n[19:49:29]·\n[19:49:29] 📋 Diagnostic Summary\n[19:49:29] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:29] ⚠️  WARNING: Uncommitted changes in git repository\n[19:49:29]·\n[19:49:29] ⚠️  ⚠️  1 warnings found - System is mostly ready\n[19:49:29]·\n📊 Performance Report\n[19:49:29] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:29]·\n⏱️  Timers:\n[19:49:29]    diagnostic: 594.31ms\n[19:49:29]    file_io: 0.54ms\n[19:49:29]    script_exec: 200.51ms\n[19:49:29]·\n💾 Memory Usage:\n[19:49:29]    start: 5.32MB\n[19:49:29]    end: 5.62MB\n\"",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Diagnostics\"\nReceived string:    \"[19:49:28] 🔍 Hugo Template Factory - System Diagnostic\n[19:49:28] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:28]·\n[19:49:28] ℹ️  Checking system information...\n[19:49:28] ✅ System: linux x64 (6.1.0-34-amd64)\n[19:49:28] ✅ Memory: 0.71GB used / 0.93GB total\n[19:49:28] ✅ CPUs: 1\n[19:49:28] ℹ️  Checking environment configuration...\n[19:49:28] ✅ Node environment: test\n[19:49:28] ✅ Current directory: /root/info-tech-io/hugo-templates\n[19:49:28] ✅ PATH entries: 11\n[19:49:28] ℹ️  Checking required dependencies...\n[19:49:28] ✅ ✓ node: v23.11.1\n[19:49:29] ✅ ✓ npm: 11.4.2\n[19:49:29] ✅ ✓ hugo: hugo v0.148.0-c0d9bebacc6bf42a91a74d8bb0de7bc775c8e573+extended linux/amd64 BuildDate=2025-07-08T13:34:49Z VendorInfo=gohugoio\n[19:49:29] ✅ ✓ git: git version 2.39.5\n[19:49:29] ✅ ✓ bash: GNU bash, version 5.2.15(1)-release (x86_64-pc-linux-gnu)\n[19:49:29] ℹ️  - yarn: not available (optional)\n[19:49:29] ✅ Package: hugo-templates@0.1.0-alpha.1\n[19:49:29] ✅ Dependencies: 7 runtime, 4 dev\n[19:49:29] ℹ️  Checking project structure...\n[19:49:29] ✅ Directory templates/: 6 items\n[19:49:29] ✅ Directory themes/: 1 items\n[19:49:29] ✅ Directory components/: 1 items\n[19:49:29] ✅ Directory scripts/: 9 items\n[19:49:29] ✅ Directory schemas/: 5 items\n[19:49:29] ✅ Directory docs/: 0 items\n[19:49:29] ✅ File package.json: 1875 bytes\n[19:49:29] ✅ File collection.json: 1077 bytes\n[19:49:29] ✅ File .gitignore: 1306 bytes\n[19:49:29] ✅ File README.md: 2624 bytes\n[19:49:29] ⚠️  Git: 8 files with changes\n[19:49:29] ℹ️  Checking file permissions...\n[19:49:29] ✅ Script build.sh: executable\n[19:49:29] ✅ Script factory.js: executable\n[19:49:29] ✅ Script validate.js: executable\n[19:49:29] ✅ Script list.js: executable\n[19:49:29] ✅ Script generate.js: executable\n[19:49:29] ✅ Directory templates/: read/write access\n[19:49:29] ✅ Directory themes/: read/write access\n[19:49:29] ✅ Directory components/: read/write access\n[19:49:29] ℹ️  Running performance checks...\n[19:49:29] ✅ I/O Performance: 0.54ms for 100KB\n[19:49:29] ✅ Script execution: 200.51ms\n[19:49:29]·\n[19:49:29] 📋 Diagnostic Summary\n[19:49:29] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:29] ⚠️  WARNING: Uncommitted changes in git repository\n[19:49:29]·\n[19:49:29] ⚠️  ⚠️  1 warnings found - System is mostly ready\n[19:49:29]·\n📊 Performance Report\n[19:49:29] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n[19:49:29]·\n⏱️  Timers:\n[19:49:29]    diagnostic: 594.31ms\n[19:49:29]    file_io: 0.54ms\n[19:49:29]    script_exec: 200.51ms\n[19:49:29]·\n💾 Memory Usage:\n[19:49:29]    start: 5.32MB\n[19:49:29]    end: 5.62MB\n\"\n    at Object.toContain (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:67:38)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Workflow Integration Complete workflow scenarios should execute diagnostic → build → validate workflow",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should execute diagnostic → build → validate workflow"
        },
        {
          "ancestorTitles": [
            "CLI Workflow Integration",
            "Node.js vs Bash CLI compatibility"
          ],
          "duration": 101,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: /root/info-tech-io/hugo-templates/scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    /root/info-tech-io/hugo-templates/scripts/build.sh\n\n    # Build with minimal template\n    /root/info-tech-io/hugo-templates/scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    /root/info-tech-io/hugo-templates/scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    /root/info-tech-io/hugo-templates/scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    /root/info-tech-io/hugo-templates/scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    /root/info-tech-io/hugo-templates/scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n❌ Wrapper execution failed: Build script exited with code 1\n"
              ],
              "pid": 2030885,
              "stdout": "\nUsage: /root/info-tech-io/hugo-templates/scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    /root/info-tech-io/hugo-templates/scripts/build.sh\n\n    # Build with minimal template\n    /root/info-tech-io/hugo-templates/scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    /root/info-tech-io/hugo-templates/scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    /root/info-tech-io/hugo-templates/scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    /root/info-tech-io/hugo-templates/scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    /root/info-tech-io/hugo-templates/scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n❌ Wrapper execution failed: Build script exited with code 1\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: node scripts/factory.js --template=minimal --theme=compose --output=\"/tmp/hugo-templates-cli-test-1758397767813/node-build\"\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n❌ Wrapper execution failed: Build script exited with code 1\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:96:32)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Workflow Integration Node.js vs Bash CLI compatibility should produce same results with Node.js and Bash interfaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should produce same results with Node.js and Bash interfaces"
        },
        {
          "ancestorTitles": [
            "CLI Workflow Integration",
            "Node.js vs Bash CLI compatibility"
          ],
          "duration": 496,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "🔍 Hugo Template Factory - Advanced Validation\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n📋 Validating project structure...\n📋 Validating template: default...\n\n📊 Validation Results:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n✅ Information (26):\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n   ℹ️  Template 'minimal' has required file: hugo.toml\n   ℹ️  Template 'minimal' has required file: components.yml\n   ℹ️  Template 'minimal' has recommended directory: content\n   ℹ️  Template 'minimal' has recommended directory: static\n   ℹ️  Template 'minimal' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758368978446' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758368978446' has required file: components.yml\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: content\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: static\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758397753336' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758397753336' has required file: components.yml\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: content\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: static\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: archetypes\n   ℹ️  Found 6 templates: academic, default, enterprise, minimal, test-template-1758368978446, test-template-1758397753336\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n\n⚠️  Warnings (29):\n   ⚠️  Template 'academic' missing components.yml (recommended)\n   ⚠️  Template 'academic' missing recommended directory: content\n   ⚠️  Template 'academic' missing recommended directory: static\n   ⚠️  Template 'academic' missing recommended directory: archetypes\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Template 'enterprise' missing components.yml (recommended)\n   ⚠️  Template 'enterprise' missing recommended directory: content\n   ⚠️  Template 'enterprise' missing recommended directory: static\n   ⚠️  Template 'enterprise' missing recommended directory: archetypes\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n\n❌ Errors (11):\n   ❌ Template 'academic' missing required file: hugo.toml\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'name'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'version'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'description'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'status'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Template 'enterprise' missing required file: hugo.toml\n\n💥 Overall validation: FAILED\n   Found 11 errors that must be fixed\n",
                "❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n"
              ],
              "pid": 2030910,
              "stdout": "🔍 Hugo Template Factory - Advanced Validation\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n📋 Validating project structure...\n📋 Validating template: default...\n\n📊 Validation Results:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n✅ Information (26):\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n   ℹ️  Template 'minimal' has required file: hugo.toml\n   ℹ️  Template 'minimal' has required file: components.yml\n   ℹ️  Template 'minimal' has recommended directory: content\n   ℹ️  Template 'minimal' has recommended directory: static\n   ℹ️  Template 'minimal' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758368978446' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758368978446' has required file: components.yml\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: content\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: static\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758397753336' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758397753336' has required file: components.yml\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: content\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: static\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: archetypes\n   ℹ️  Found 6 templates: academic, default, enterprise, minimal, test-template-1758368978446, test-template-1758397753336\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n\n⚠️  Warnings (29):\n   ⚠️  Template 'academic' missing components.yml (recommended)\n   ⚠️  Template 'academic' missing recommended directory: content\n   ⚠️  Template 'academic' missing recommended directory: static\n   ⚠️  Template 'academic' missing recommended directory: archetypes\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Template 'enterprise' missing components.yml (recommended)\n   ⚠️  Template 'enterprise' missing recommended directory: content\n   ⚠️  Template 'enterprise' missing recommended directory: static\n   ⚠️  Template 'enterprise' missing recommended directory: archetypes\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n\n❌ Errors (11):\n   ❌ Template 'academic' missing required file: hugo.toml\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'name'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'version'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'description'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'status'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Template 'enterprise' missing required file: hugo.toml\n\n💥 Overall validation: FAILED\n   Found 11 errors that must be fixed\n",
              "stderr": "❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: node scripts/validate.js --template default\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:123:36)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Workflow Integration Node.js vs Bash CLI compatibility should handle validation consistently across interfaces",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle validation consistently across interfaces"
        },
        {
          "ancestorTitles": [
            "CLI Workflow Integration",
            "Error recovery workflows"
          ],
          "duration": 66,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2030935,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --validate-only\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:154:33)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Workflow Integration Error recovery workflows should recover from invalid parameters gracefully",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should recover from invalid parameters gracefully"
        },
        {
          "ancestorTitles": [
            "CLI Workflow Integration",
            "Error recovery workflows"
          ],
          "duration": 53,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2030951,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-cli-test-1758397767813/recovery-test\"\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:171:33)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Workflow Integration Error recovery workflows should handle partial build failures",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle partial build failures"
        },
        {
          "ancestorTitles": [
            "CLI Workflow Integration",
            "Advanced parameter combinations"
          ],
          "duration": 38,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n"
              ],
              "pid": 2030967,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=default --theme=compose --components=quiz-engine --environment=production --minify --verbose --output=\"/tmp/hugo-templates-cli-test-1758397767813/complex-params\"\n\u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:186:34)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Workflow Integration Advanced parameter combinations should handle complex parameter combinations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle complex parameter combinations"
        },
        {
          "ancestorTitles": [
            "CLI Workflow Integration",
            "Advanced parameter combinations"
          ],
          "duration": 25,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2030983,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-cli-test-1758397767813/edge-cases\" --verbose\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:205:35)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Workflow Integration Advanced parameter combinations should handle edge case parameter values",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle edge case parameter values"
        },
        {
          "ancestorTitles": [
            "CLI Workflow Integration",
            "Cross-platform workflow compatibility"
          ],
          "duration": 56,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2030999,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-cli-test-1758397767813/cross-platform\"\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:220:40)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Workflow Integration Cross-platform workflow compatibility should work with different path separators",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should work with different path separators"
        },
        {
          "ancestorTitles": [
            "CLI Workflow Integration",
            "Cross-platform workflow compatibility"
          ],
          "duration": 461,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CLI Workflow Integration Cross-platform workflow compatibility should handle different line endings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle different line endings"
        },
        {
          "ancestorTitles": [
            "CLI Workflow Integration",
            "Performance workflow testing"
          ],
          "duration": 33,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
                "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
              ],
              "pid": 2031024,
              "stdout": "\nUsage: scripts/build.sh [OPTIONS]\n\nHugo Template Factory Framework - Build Script\n\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message\n\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh\n\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose\n\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics\n\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output\n\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com\n\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose\n\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336\n\n",
              "stderr": "\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-cli-test-1758397767813/performance-test\"\n\u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at Object.execSync (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:248:38)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Workflow Integration Performance workflow testing should complete workflow within reasonable time",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should complete workflow within reasonable time"
        },
        {
          "ancestorTitles": [
            "CLI Workflow Integration",
            "Performance workflow testing"
          ],
          "duration": 1456,
          "failureDetails": [
            {
              "status": 1,
              "signal": null,
              "output": [
                null,
                "🔍 Hugo Template Factory - Advanced Validation\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n📋 Validating project structure...\n📋 Validating template: minimal...\n\n📊 Validation Results:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n✅ Information (26):\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n   ℹ️  Template 'minimal' has required file: hugo.toml\n   ℹ️  Template 'minimal' has required file: components.yml\n   ℹ️  Template 'minimal' has recommended directory: content\n   ℹ️  Template 'minimal' has recommended directory: static\n   ℹ️  Template 'minimal' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758368978446' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758368978446' has required file: components.yml\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: content\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: static\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758397753336' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758397753336' has required file: components.yml\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: content\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: static\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: archetypes\n   ℹ️  Found 6 templates: academic, default, enterprise, minimal, test-template-1758368978446, test-template-1758397753336\n   ℹ️  Template 'minimal' has required file: hugo.toml\n   ℹ️  Template 'minimal' has required file: components.yml\n   ℹ️  Template 'minimal' has recommended directory: content\n   ℹ️  Template 'minimal' has recommended directory: static\n   ℹ️  Template 'minimal' has recommended directory: archetypes\n\n⚠️  Warnings (25):\n   ⚠️  Template 'academic' missing components.yml (recommended)\n   ⚠️  Template 'academic' missing recommended directory: content\n   ⚠️  Template 'academic' missing recommended directory: static\n   ⚠️  Template 'academic' missing recommended directory: archetypes\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Template 'enterprise' missing components.yml (recommended)\n   ⚠️  Template 'enterprise' missing recommended directory: content\n   ⚠️  Template 'enterprise' missing recommended directory: static\n   ⚠️  Template 'enterprise' missing recommended directory: archetypes\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n\n❌ Errors (11):\n   ❌ Template 'academic' missing required file: hugo.toml\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'name'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'version'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'description'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'status'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Template 'enterprise' missing required file: hugo.toml\n\n💥 Overall validation: FAILED\n   Found 11 errors that must be fixed\n",
                "❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n"
              ],
              "pid": 2031048,
              "stdout": "🔍 Hugo Template Factory - Advanced Validation\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n📋 Validating project structure...\n📋 Validating template: minimal...\n\n📊 Validation Results:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n✅ Information (26):\n   ℹ️  Template 'default' has required file: hugo.toml\n   ℹ️  Template 'default' has required file: components.yml\n   ℹ️  Template 'default' has recommended directory: content\n   ℹ️  Template 'default' has recommended directory: static\n   ℹ️  Template 'default' has recommended directory: archetypes\n   ℹ️  Template 'minimal' has required file: hugo.toml\n   ℹ️  Template 'minimal' has required file: components.yml\n   ℹ️  Template 'minimal' has recommended directory: content\n   ℹ️  Template 'minimal' has recommended directory: static\n   ℹ️  Template 'minimal' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758368978446' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758368978446' has required file: components.yml\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: content\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: static\n   ℹ️  Template 'test-template-1758368978446' has recommended directory: archetypes\n   ℹ️  Template 'test-template-1758397753336' has required file: hugo.toml\n   ℹ️  Template 'test-template-1758397753336' has required file: components.yml\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: content\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: static\n   ℹ️  Template 'test-template-1758397753336' has recommended directory: archetypes\n   ℹ️  Found 6 templates: academic, default, enterprise, minimal, test-template-1758368978446, test-template-1758397753336\n   ℹ️  Template 'minimal' has required file: hugo.toml\n   ℹ️  Template 'minimal' has required file: components.yml\n   ℹ️  Template 'minimal' has recommended directory: content\n   ℹ️  Template 'minimal' has recommended directory: static\n   ℹ️  Template 'minimal' has recommended directory: archetypes\n\n⚠️  Warnings (25):\n   ⚠️  Template 'academic' missing components.yml (recommended)\n   ⚠️  Template 'academic' missing recommended directory: content\n   ⚠️  Template 'academic' missing recommended directory: static\n   ⚠️  Template 'academic' missing recommended directory: archetypes\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Template 'enterprise' missing components.yml (recommended)\n   ⚠️  Template 'enterprise' missing recommended directory: content\n   ⚠️  Template 'enterprise' missing recommended directory: static\n   ⚠️  Template 'enterprise' missing recommended directory: archetypes\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n   ⚠️  Component 'quiz-engine' submodule path does not exist: components/quiz-engine\n   ⚠️  Component 'quiz-engine' static file not found: quiz/ (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: js/quiz.js (in components/quiz-engine)\n   ⚠️  Component 'quiz-engine' static file not found: css/quiz.css (in components/quiz-engine)\n   ⚠️  Component 'compose-theme' submodule path does not exist: themes/compose\n\n❌ Errors (11):\n   ❌ Template 'academic' missing required file: hugo.toml\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'name'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'version'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'description'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must have required property 'status'\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Schema validation error in /root/info-tech-io/hugo-templates/templates/default/components.yml\n      Details: {\n  \"path\": \"\",\n  \"message\": \"must NOT have additional properties\",\n  \"data\": {\n    \"template\": {\n      \"name\": \"default\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Full-featured template with all components (equivalent to hugo-base)\",\n      \"author\": \"info-tech-io\",\n      \"license\": \"MIT\"\n    },\n    \"components\": {\n      \"quiz-engine\": {\n        \"version\": \"^1.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Interactive quiz system for educational content\",\n        \"repository\": \"https://github.com/info-tech-io/quiz.git\",\n        \"submodule_path\": \"components/quiz-engine\",\n        \"static_files\": [\n          \"quiz/\",\n          \"js/quiz.js\",\n          \"css/quiz.css\"\n        ],\n        \"layouts\": [\n          \"shortcodes/quiz.html\",\n          \"partials/quiz/\"\n        ],\n        \"configuration\": {\n          \"params\": {\n            \"quiz\": {\n              \"enabled\": true,\n              \"theme\": \"default\",\n              \"showResults\": true,\n              \"allowRetry\": true\n            }\n          }\n        }\n      },\n      \"compose-theme\": {\n        \"version\": \"^4.0.0\",\n        \"status\": \"stable\",\n        \"description\": \"Clean and modern Hugo theme\",\n        \"repository\": \"https://github.com/onweru/compose.git\",\n        \"submodule_path\": \"themes/compose\",\n        \"configuration\": {\n          \"theme\": \"compose\",\n          \"params\": {\n            \"compose\": {\n              \"logo\": \"logo.png\",\n              \"favicon\": \"favicon.ico\",\n              \"social\": {\n                \"github\": \"info-tech-io\"\n              }\n            }\n          }\n        }\n      },\n      \"analytics\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Analytics tracking component\",\n        \"files\": {\n          \"static\": [\n            \"js/analytics.js\"\n          ],\n          \"layouts\": [\n            \"partials/analytics.html\"\n          ]\n        }\n      },\n      \"auth\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Authentication system component\",\n        \"files\": {\n          \"static\": [\n            \"js/auth.js\",\n            \"css/auth.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/login.html\",\n            \"partials/auth/\"\n          ]\n        }\n      },\n      \"citations\": {\n        \"version\": \"^0.1.0\",\n        \"status\": \"planned\",\n        \"description\": \"Academic citation system\",\n        \"files\": {\n          \"static\": [\n            \"js/citations.js\",\n            \"css/citations.css\"\n          ],\n          \"layouts\": [\n            \"shortcodes/cite.html\",\n            \"partials/citations/\"\n          ]\n        }\n      }\n    },\n    \"hugo\": {\n      \"minVersion\": \"0.110.0\",\n      \"extended\": false,\n      \"modules\": [\n        {\n          \"path\": \"github.com/onweru/compose\"\n        }\n      ]\n    },\n    \"build\": {\n      \"writeStats\": true,\n      \"noJSConfigInAssets\": false,\n      \"useResourceCacheWhen\": \"fallback\"\n    },\n    \"security\": {\n      \"funcs\": {\n        \"getenv\": [\n          \"^HUGO_\",\n          \"^CI$\"\n        ]\n      },\n      \"exec\": {\n        \"allow\": [\n          \"^dart-sass-embedded$\",\n          \"^go$\",\n          \"^npx$\",\n          \"^postcss$\"\n        ]\n      }\n    }\n  }\n}\n   ❌ Template 'enterprise' missing required file: hugo.toml\n\n💥 Overall validation: FAILED\n   Found 11 errors that must be fixed\n",
              "stderr": "❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n"
            }
          ],
          "failureMessages": [
            "Error: Command failed: node scripts/validate.js --template minimal\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n\n    at genericNodeError (node:internal/errors:983:15)\n    at wrappedFn (node:internal/errors:537:14)\n    at checkExecSyncError (node:child_process:882:11)\n    at execSync (node:child_process:954:15)\n    at execSync (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:264:23)\n    at op (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:271:33)\n    at new Promise (<anonymous>)\n    at /root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:269:17\n    at Array.map (<anonymous>)\n    at Object.map (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:268:58)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Workflow Integration Performance workflow testing should handle concurrent CLI operations",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "status": "failed",
          "title": "should handle concurrent CLI operations"
        },
        {
          "ancestorTitles": [
            "CLI Workflow Integration",
            "Help and documentation workflow"
          ],
          "duration": 27,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Options:\"\nReceived string:    \"Usage: scripts/build.sh [OPTIONS]·\nHugo Template Factory Framework - Build Script·\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message·\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh·\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose·\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics·\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output·\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com·\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose·\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336·\n\"",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Options:\"\nReceived string:    \"Usage: scripts/build.sh [OPTIONS]·\nHugo Template Factory Framework - Build Script·\nOPTIONS:\n    -t, --template <name>       Template to use (default: default)\n    --theme <name>              Hugo theme to apply (default: compose)\n    -c, --components <list>     Comma-separated list of components to include\n    -o, --output <path>         Output directory (default: ./site)\n    --content <path>            Path to content directory\n    --config <path>             Path to custom configuration file\n    --minify                    Enable Hugo minification\n    --draft                     Include draft content\n    --future                    Include future content\n    --base-url <url>            Base URL for the site\n    -e, --environment <env>     Hugo environment (default: development)\n    -v, --verbose               Enable verbose output\n    -q, --quiet                 Suppress non-error output\n    --log-level <level>         Log level (debug|info|warn|error)\n    --validate-only             Only validate configuration, don't build\n    -h, --help                  Show this help message·\nEXAMPLES:\n    # Basic build with default template\n    scripts/build.sh·\n    # Build with minimal template\n    scripts/build.sh --template=minimal --theme=compose·\n    # Build with specific components\n    scripts/build.sh --template=default --components=quiz-engine,analytics·\n    # Build with custom content directory\n    scripts/build.sh --content=/path/to/content --output=/path/to/output·\n    # Production build with minification\n    scripts/build.sh --environment=production --minify --base-url=https://example.com·\n    # Validate configuration only\n    scripts/build.sh --validate-only --verbose·\nAVAILABLE TEMPLATES:\n    - academic\n    - default\n    - enterprise\n    - minimal\n    - test-template-1758368978446\n    - test-template-1758397753336·\n\"\n    at Object.toContain (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:313:118)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Workflow Integration Help and documentation workflow should provide consistent help across all CLI tools",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "failed",
          "title": "should provide consistent help across all CLI tools"
        },
        {
          "ancestorTitles": [
            "CLI Workflow Integration",
            "Help and documentation workflow"
          ],
          "duration": 78,
          "failureDetails": [
            {
              "matcherResult": {
                "message": "expect(received).toContain(expected) // indexOf\n\nExpected substring: \"version\"\nReceived string:    \"Hugo Template Factory Framework v0.1.0-alpha.1\nNode.js wrapper for bash build script\n\"",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"version\"\nReceived string:    \"Hugo Template Factory Framework v0.1.0-alpha.1\nNode.js wrapper for bash build script\n\"\n    at Object.toContain (/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js:329:89)\n    at Promise.then.completed (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:121:9)\n    at run (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/root/info-tech-io/hugo-templates/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/root/info-tech-io/hugo-templates/node_modules/jest-runner/build/runTest.js:444:34)"
          ],
          "fullName": "CLI Workflow Integration Help and documentation workflow should provide version information consistently",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "failed",
          "title": "should provide version information consistently"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "integration"
      },
      "failureMessage": "  ● CLI Workflow Integration › Complete workflow scenarios › should execute complete workflow: list → validate → build\n\n    Command failed: node scripts/validate.js --template default --theme compose\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n\n      37 |\n      38 |             // Step 2: Validate template combination\n    > 39 |             const validateOutput = execSync(`node scripts/validate.js --template default --theme compose`, {\n         |                                    ^\n      40 |                 encoding: 'utf8',\n      41 |                 cwd: testDir,\n      42 |                 timeout: 15000\n\n      at Object.execSync (tests/integration/cli-workflow.test.js:39:36)\n\n  ● CLI Workflow Integration › Complete workflow scenarios › should execute diagnostic → build → validate workflow\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Diagnostics\"\n    Received string:    \"[19:49:28] 🔍 Hugo Template Factory - System Diagnostic\n    [19:49:28] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n    [19:49:28]·\n    [19:49:28] ℹ️  Checking system information...\n    [19:49:28] ✅ System: linux x64 (6.1.0-34-amd64)\n    [19:49:28] ✅ Memory: 0.71GB used / 0.93GB total\n    [19:49:28] ✅ CPUs: 1\n    [19:49:28] ℹ️  Checking environment configuration...\n    [19:49:28] ✅ Node environment: test\n    [19:49:28] ✅ Current directory: /root/info-tech-io/hugo-templates\n    [19:49:28] ✅ PATH entries: 11\n    [19:49:28] ℹ️  Checking required dependencies...\n    [19:49:28] ✅ ✓ node: v23.11.1\n    [19:49:29] ✅ ✓ npm: 11.4.2\n    [19:49:29] ✅ ✓ hugo: hugo v0.148.0-c0d9bebacc6bf42a91a74d8bb0de7bc775c8e573+extended linux/amd64 BuildDate=2025-07-08T13:34:49Z VendorInfo=gohugoio\n    [19:49:29] ✅ ✓ git: git version 2.39.5\n    [19:49:29] ✅ ✓ bash: GNU bash, version 5.2.15(1)-release (x86_64-pc-linux-gnu)\n    [19:49:29] ℹ️  - yarn: not available (optional)\n    [19:49:29] ✅ Package: hugo-templates@0.1.0-alpha.1\n    [19:49:29] ✅ Dependencies: 7 runtime, 4 dev\n    [19:49:29] ℹ️  Checking project structure...\n    [19:49:29] ✅ Directory templates/: 6 items\n    [19:49:29] ✅ Directory themes/: 1 items\n    [19:49:29] ✅ Directory components/: 1 items\n    [19:49:29] ✅ Directory scripts/: 9 items\n    [19:49:29] ✅ Directory schemas/: 5 items\n    [19:49:29] ✅ Directory docs/: 0 items\n    [19:49:29] ✅ File package.json: 1875 bytes\n    [19:49:29] ✅ File collection.json: 1077 bytes\n    [19:49:29] ✅ File .gitignore: 1306 bytes\n    [19:49:29] ✅ File README.md: 2624 bytes\n    [19:49:29] ⚠️  Git: 8 files with changes\n    [19:49:29] ℹ️  Checking file permissions...\n    [19:49:29] ✅ Script build.sh: executable\n    [19:49:29] ✅ Script factory.js: executable\n    [19:49:29] ✅ Script validate.js: executable\n    [19:49:29] ✅ Script list.js: executable\n    [19:49:29] ✅ Script generate.js: executable\n    [19:49:29] ✅ Directory templates/: read/write access\n    [19:49:29] ✅ Directory themes/: read/write access\n    [19:49:29] ✅ Directory components/: read/write access\n    [19:49:29] ℹ️  Running performance checks...\n    [19:49:29] ✅ I/O Performance: 0.54ms for 100KB\n    [19:49:29] ✅ Script execution: 200.51ms\n    [19:49:29]·\n    [19:49:29] 📋 Diagnostic Summary\n    [19:49:29] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n    [19:49:29] ⚠️  WARNING: Uncommitted changes in git repository\n    [19:49:29]·\n    [19:49:29] ⚠️  ⚠️  1 warnings found - System is mostly ready\n    [19:49:29]·\n    📊 Performance Report\n    [19:49:29] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n    [19:49:29]·\n    ⏱️  Timers:\n    [19:49:29]    diagnostic: 594.31ms\n    [19:49:29]    file_io: 0.54ms\n    [19:49:29]    script_exec: 200.51ms\n    [19:49:29]·\n    💾 Memory Usage:\n    [19:49:29]    start: 5.32MB\n    [19:49:29]    end: 5.62MB\n    \"\n\n      65 |             });\n      66 |\n    > 67 |             expect(diagnosticOutput).toContain('Diagnostics') || expect(diagnosticOutput).toContain('System') || expect(diagnosticOutput).toContain('✓');\n         |                                      ^\n      68 |\n      69 |             // Step 2: Build minimal template\n      70 |             const outputDir = path.join(tempDir, 'diagnostic-workflow');\n\n      at Object.toContain (tests/integration/cli-workflow.test.js:67:38)\n\n  ● CLI Workflow Integration › Node.js vs Bash CLI compatibility › should produce same results with Node.js and Bash interfaces\n\n    Command failed: node scripts/factory.js --template=minimal --theme=compose --output=\"/tmp/hugo-templates-cli-test-1758397767813/node-build\"\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n    ❌ Wrapper execution failed: Build script exited with code 1\n\n      94 |\n      95 |             // Build with Node.js interface\n    > 96 |             const nodeOutput = execSync(`node scripts/factory.js --template=minimal --theme=compose --output=\"${outputDir1}\"`, {\n         |                                ^\n      97 |                 encoding: 'utf8',\n      98 |                 cwd: testDir,\n      99 |                 timeout: 60000\n\n      at Object.execSync (tests/integration/cli-workflow.test.js:96:32)\n\n  ● CLI Workflow Integration › Node.js vs Bash CLI compatibility › should handle validation consistently across interfaces\n\n    Command failed: node scripts/validate.js --template default\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n\n      121 |         test('should handle validation consistently across interfaces', async () => {\n      122 |             // Validate with Node.js script\n    > 123 |             const nodeValidation = execSync(`node scripts/validate.js --template default`, {\n          |                                    ^\n      124 |                 encoding: 'utf8',\n      125 |                 cwd: testDir,\n      126 |                 timeout: 10000\n\n      at Object.execSync (tests/integration/cli-workflow.test.js:123:36)\n\n  ● CLI Workflow Integration › Error recovery workflows › should recover from invalid parameters gracefully\n\n    Command failed: bash scripts/build.sh --template=minimal --validate-only\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      152 |\n      153 |             // Should still work with valid parameters after error\n    > 154 |             const validOutput = execSync(`bash scripts/build.sh --template=minimal --validate-only`, {\n          |                                 ^\n      155 |                 encoding: 'utf8',\n      156 |                 cwd: testDir,\n      157 |                 timeout: 10000\n\n      at Object.execSync (tests/integration/cli-workflow.test.js:154:33)\n\n  ● CLI Workflow Integration › Error recovery workflows › should handle partial build failures\n\n    Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-cli-test-1758397767813/recovery-test\"\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      169 |\n      170 |             // Build should still work despite existing content\n    > 171 |             const buildOutput = execSync(`bash scripts/build.sh --template=minimal --theme=compose --output=\"${outputDir}\"`, {\n          |                                 ^\n      172 |                 encoding: 'utf8',\n      173 |                 cwd: testDir,\n      174 |                 timeout: 60000\n\n      at Object.execSync (tests/integration/cli-workflow.test.js:171:33)\n\n  ● CLI Workflow Integration › Advanced parameter combinations › should handle complex parameter combinations\n\n    Command failed: bash scripts/build.sh --template=default --theme=compose --components=quiz-engine --environment=production --minify --verbose --output=\"/tmp/hugo-templates-cli-test-1758397767813/complex-params\"\n    \u001b[0;31m❌ Unknown option: --template=default\u001b[0m\n\n      184 |             const outputDir = path.join(tempDir, 'complex-params');\n      185 |\n    > 186 |             const complexBuild = execSync(`bash scripts/build.sh --template=default --theme=compose --components=quiz-engine --environment=production --minify --verbose --output=\"${outputDir}\"`, {\n          |                                  ^\n      187 |                 encoding: 'utf8',\n      188 |                 cwd: testDir,\n      189 |                 timeout: 90000\n\n      at Object.execSync (tests/integration/cli-workflow.test.js:186:34)\n\n  ● CLI Workflow Integration › Advanced parameter combinations › should handle edge case parameter values\n\n    Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-cli-test-1758397767813/edge-cases\" --verbose\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      203 |\n      204 |             // Test with edge case values\n    > 205 |             const edgeCaseBuild = execSync(`bash scripts/build.sh --template=minimal --theme=compose --output=\"${outputDir}\" --verbose`, {\n          |                                   ^\n      206 |                 encoding: 'utf8',\n      207 |                 cwd: testDir,\n      208 |                 timeout: 60000\n\n      at Object.execSync (tests/integration/cli-workflow.test.js:205:35)\n\n  ● CLI Workflow Integration › Cross-platform workflow compatibility › should work with different path separators\n\n    Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-cli-test-1758397767813/cross-platform\"\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      218 |\n      219 |             // Use path.join for cross-platform compatibility\n    > 220 |             const crossPlatformBuild = execSync(`bash scripts/build.sh --template=minimal --theme=compose --output=\"${outputDir}\"`, {\n          |                                        ^\n      221 |                 encoding: 'utf8',\n      222 |                 cwd: testDir,\n      223 |                 timeout: 60000\n\n      at Object.execSync (tests/integration/cli-workflow.test.js:220:40)\n\n  ● CLI Workflow Integration › Performance workflow testing › should complete workflow within reasonable time\n\n    Command failed: bash scripts/build.sh --template=minimal --theme=compose --output=\"/tmp/hugo-templates-cli-test-1758397767813/performance-test\"\n    \u001b[0;31m❌ Unknown option: --template=minimal\u001b[0m\n\n      246 |\n      247 |             const outputDir = path.join(tempDir, 'performance-test');\n    > 248 |             const performanceBuild = execSync(`bash scripts/build.sh --template=minimal --theme=compose --output=\"${outputDir}\"`, {\n          |                                      ^\n      249 |                 encoding: 'utf8',\n      250 |                 cwd: testDir,\n      251 |                 timeout: 60000\n\n      at Object.execSync (tests/integration/cli-workflow.test.js:248:38)\n\n  ● CLI Workflow Integration › Performance workflow testing › should handle concurrent CLI operations\n\n    Command failed: node scripts/validate.js --template minimal\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n    ❌ Failed to load schema 'component': schema with key or id \"https://schemas.hugo-templates.org/component.json\" already exists\n\n      262 |             const operations = [\n      263 |                 () => execSync(`node scripts/list.js templates`, { encoding: 'utf8', cwd: testDir, timeout: 10000 }),\n    > 264 |                 () => execSync(`node scripts/validate.js --template minimal`, { encoding: 'utf8', cwd: testDir, timeout: 10000 }),\n          |                       ^\n      265 |                 () => execSync(`node scripts/diagnostic.js`, { encoding: 'utf8', cwd: testDir, timeout: 15000 })\n      266 |             ];\n      267 |\n\n      at execSync (tests/integration/cli-workflow.test.js:264:23)\n      at op (tests/integration/cli-workflow.test.js:271:33)\n      at tests/integration/cli-workflow.test.js:269:17\n          at Array.map (<anonymous>)\n      at Object.map (tests/integration/cli-workflow.test.js:268:58)\n\n  ● CLI Workflow Integration › Help and documentation workflow › should provide consistent help across all CLI tools\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Options:\"\n    Received string:    \"Usage: scripts/build.sh [OPTIONS]·\n    Hugo Template Factory Framework - Build Script·\n    OPTIONS:\n        -t, --template <name>       Template to use (default: default)\n        --theme <name>              Hugo theme to apply (default: compose)\n        -c, --components <list>     Comma-separated list of components to include\n        -o, --output <path>         Output directory (default: ./site)\n        --content <path>            Path to content directory\n        --config <path>             Path to custom configuration file\n        --minify                    Enable Hugo minification\n        --draft                     Include draft content\n        --future                    Include future content\n        --base-url <url>            Base URL for the site\n        -e, --environment <env>     Hugo environment (default: development)\n        -v, --verbose               Enable verbose output\n        -q, --quiet                 Suppress non-error output\n        --log-level <level>         Log level (debug|info|warn|error)\n        --validate-only             Only validate configuration, don't build\n        -h, --help                  Show this help message·\n    EXAMPLES:\n        # Basic build with default template\n        scripts/build.sh·\n        # Build with minimal template\n        scripts/build.sh --template=minimal --theme=compose·\n        # Build with specific components\n        scripts/build.sh --template=default --components=quiz-engine,analytics·\n        # Build with custom content directory\n        scripts/build.sh --content=/path/to/content --output=/path/to/output·\n        # Production build with minification\n        scripts/build.sh --environment=production --minify --base-url=https://example.com·\n        # Validate configuration only\n        scripts/build.sh --validate-only --verbose·\n    AVAILABLE TEMPLATES:\n        - academic\n        - default\n        - enterprise\n        - minimal\n        - test-template-1758368978446\n        - test-template-1758397753336·\n    \"\n\n      311 |                 }\n      312 |\n    > 313 |                 expect(helpOutput).toContain('Usage:') || expect(helpOutput).toContain('help') || expect(helpOutput).toContain('Options:');\n          |                                                                                                                      ^\n      314 |             }\n      315 |         });\n      316 |\n\n      at Object.toContain (tests/integration/cli-workflow.test.js:313:118)\n\n  ● CLI Workflow Integration › Help and documentation workflow › should provide version information consistently\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"version\"\n    Received string:    \"Hugo Template Factory Framework v0.1.0-alpha.1\n    Node.js wrapper for bash build script\n    \"\n\n      327 |                 });\n      328 |\n    > 329 |                 expect(versionOutput).toMatch(/\\d+\\.\\d+\\.\\d+/) || expect(versionOutput).toContain('version');\n          |                                                                                         ^\n      330 |             }\n      331 |         });\n      332 |     });\n\n      at Object.toContain (tests/integration/cli-workflow.test.js:329:89)\n"
    }
  ],
  "wasInterrupted": false,
  "coverageMap": {
    "/root/info-tech-io/hugo-templates/scripts/diagnostic.js": {
      "path": "/root/info-tech-io/hugo-templates/scripts/diagnostic.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 8,
            "column": 11
          },
          "end": {
            "line": 8,
            "column": 30
          }
        },
        "1": {
          "start": {
            "line": 9,
            "column": 13
          },
          "end": {
            "line": 9,
            "column": 28
          }
        },
        "2": {
          "start": {
            "line": 10,
            "column": 11
          },
          "end": {
            "line": 10,
            "column": 24
          }
        },
        "3": {
          "start": {
            "line": 11,
            "column": 21
          },
          "end": {
            "line": 11,
            "column": 45
          }
        },
        "4": {
          "start": {
            "line": 12,
            "column": 14
          },
          "end": {
            "line": 12,
            "column": 30
          }
        },
        "5": {
          "start": {
            "line": 13,
            "column": 51
          },
          "end": {
            "line": 13,
            "column": 70
          }
        },
        "6": {
          "start": {
            "line": 20,
            "column": 8
          },
          "end": {
            "line": 20,
            "column": 72
          }
        },
        "7": {
          "start": {
            "line": 21,
            "column": 8
          },
          "end": {
            "line": 21,
            "column": 77
          }
        },
        "8": {
          "start": {
            "line": 22,
            "column": 8
          },
          "end": {
            "line": 22,
            "column": 65
          }
        },
        "9": {
          "start": {
            "line": 29,
            "column": 8
          },
          "end": {
            "line": 29,
            "column": 86
          }
        },
        "10": {
          "start": {
            "line": 30,
            "column": 8
          },
          "end": {
            "line": 30,
            "column": 54
          }
        },
        "11": {
          "start": {
            "line": 31,
            "column": 8
          },
          "end": {
            "line": 31,
            "column": 30
          }
        },
        "12": {
          "start": {
            "line": 33,
            "column": 8
          },
          "end": {
            "line": 33,
            "column": 50
          }
        },
        "13": {
          "start": {
            "line": 35,
            "column": 24
          },
          "end": {
            "line": 42,
            "column": 9
          }
        },
        "14": {
          "start": {
            "line": 44,
            "column": 8
          },
          "end": {
            "line": 44,
            "column": 48
          }
        },
        "15": {
          "start": {
            "line": 46,
            "column": 8
          },
          "end": {
            "line": 46,
            "column": 35
          }
        },
        "16": {
          "start": {
            "line": 47,
            "column": 8
          },
          "end": {
            "line": 47,
            "column": 23
          }
        },
        "17": {
          "start": {
            "line": 54,
            "column": 8
          },
          "end": {
            "line": 54,
            "column": 59
          }
        },
        "18": {
          "start": {
            "line": 56,
            "column": 23
          },
          "end": {
            "line": 70,
            "column": 9
          }
        },
        "19": {
          "start": {
            "line": 72,
            "column": 8
          },
          "end": {
            "line": 72,
            "column": 93
          }
        },
        "20": {
          "start": {
            "line": 73,
            "column": 8
          },
          "end": {
            "line": 73,
            "column": 169
          }
        },
        "21": {
          "start": {
            "line": 74,
            "column": 8
          },
          "end": {
            "line": 74,
            "column": 52
          }
        },
        "22": {
          "start": {
            "line": 76,
            "column": 8
          },
          "end": {
            "line": 76,
            "column": 22
          }
        },
        "23": {
          "start": {
            "line": 83,
            "column": 8
          },
          "end": {
            "line": 83,
            "column": 66
          }
        },
        "24": {
          "start": {
            "line": 85,
            "column": 20
          },
          "end": {
            "line": 95,
            "column": 9
          }
        },
        "25": {
          "start": {
            "line": 97,
            "column": 8
          },
          "end": {
            "line": 97,
            "column": 65
          }
        },
        "26": {
          "start": {
            "line": 98,
            "column": 8
          },
          "end": {
            "line": 98,
            "column": 61
          }
        },
        "27": {
          "start": {
            "line": 99,
            "column": 8
          },
          "end": {
            "line": 99,
            "column": 57
          }
        },
        "28": {
          "start": {
            "line": 101,
            "column": 8
          },
          "end": {
            "line": 101,
            "column": 19
          }
        },
        "29": {
          "start": {
            "line": 108,
            "column": 8
          },
          "end": {
            "line": 108,
            "column": 62
          }
        },
        "30": {
          "start": {
            "line": 110,
            "column": 21
          },
          "end": {
            "line": 117,
            "column": 9
          }
        },
        "31": {
          "start": {
            "line": 120,
            "column": 32
          },
          "end": {
            "line": 120,
            "column": 75
          }
        },
        "32": {
          "start": {
            "line": 121,
            "column": 8
          },
          "end": {
            "line": 136,
            "column": 9
          }
        },
        "33": {
          "start": {
            "line": 122,
            "column": 12
          },
          "end": {
            "line": 135,
            "column": 13
          }
        },
        "34": {
          "start": {
            "line": 123,
            "column": 36
          },
          "end": {
            "line": 123,
            "column": 88
          }
        },
        "35": {
          "start": {
            "line": 124,
            "column": 16
          },
          "end": {
            "line": 129,
            "column": 18
          }
        },
        "36": {
          "start": {
            "line": 131,
            "column": 16
          },
          "end": {
            "line": 131,
            "column": 101
          }
        },
        "37": {
          "start": {
            "line": 132,
            "column": 16
          },
          "end": {
            "line": 132,
            "column": 135
          }
        },
        "38": {
          "start": {
            "line": 134,
            "column": 16
          },
          "end": {
            "line": 134,
            "column": 83
          }
        },
        "39": {
          "start": {
            "line": 138,
            "column": 8
          },
          "end": {
            "line": 138,
            "column": 20
          }
        },
        "40": {
          "start": {
            "line": 145,
            "column": 8
          },
          "end": {
            "line": 145,
            "column": 58
          }
        },
        "41": {
          "start": {
            "line": 147,
            "column": 24
          },
          "end": {
            "line": 152,
            "column": 9
          }
        },
        "42": {
          "start": {
            "line": 154,
            "column": 8
          },
          "end": {
            "line": 157,
            "column": 9
          }
        },
        "43": {
          "start": {
            "line": 155,
            "column": 12
          },
          "end": {
            "line": 155,
            "column": 77
          }
        },
        "44": {
          "start": {
            "line": 156,
            "column": 12
          },
          "end": {
            "line": 156,
            "column": 27
          }
        },
        "45": {
          "start": {
            "line": 160,
            "column": 29
          },
          "end": {
            "line": 160,
            "column": 96
          }
        },
        "46": {
          "start": {
            "line": 161,
            "column": 8
          },
          "end": {
            "line": 179,
            "column": 9
          }
        },
        "47": {
          "start": {
            "line": 162,
            "column": 28
          },
          "end": {
            "line": 162,
            "column": 60
          }
        },
        "48": {
          "start": {
            "line": 163,
            "column": 12
          },
          "end": {
            "line": 167,
            "column": 14
          }
        },
        "49": {
          "start": {
            "line": 169,
            "column": 12
          },
          "end": {
            "line": 178,
            "column": 13
          }
        },
        "50": {
          "start": {
            "line": 170,
            "column": 16
          },
          "end": {
            "line": 175,
            "column": 17
          }
        },
        "51": {
          "start": {
            "line": 171,
            "column": 20
          },
          "end": {
            "line": 171,
            "column": 86
          }
        },
        "52": {
          "start": {
            "line": 172,
            "column": 20
          },
          "end": {
            "line": 172,
            "column": 104
          }
        },
        "53": {
          "start": {
            "line": 174,
            "column": 20
          },
          "end": {
            "line": 174,
            "column": 88
          }
        },
        "54": {
          "start": {
            "line": 177,
            "column": 16
          },
          "end": {
            "line": 177,
            "column": 74
          }
        },
        "55": {
          "start": {
            "line": 182,
            "column": 30
          },
          "end": {
            "line": 182,
            "column": 92
          }
        },
        "56": {
          "start": {
            "line": 183,
            "column": 8
          },
          "end": {
            "line": 200,
            "column": 9
          }
        },
        "57": {
          "start": {
            "line": 184,
            "column": 29
          },
          "end": {
            "line": 184,
            "column": 62
          }
        },
        "58": {
          "start": {
            "line": 185,
            "column": 27
          },
          "end": {
            "line": 185,
            "column": 50
          }
        },
        "59": {
          "start": {
            "line": 186,
            "column": 12
          },
          "end": {
            "line": 186,
            "column": 49
          }
        },
        "60": {
          "start": {
            "line": 188,
            "column": 12
          },
          "end": {
            "line": 199,
            "column": 13
          }
        },
        "61": {
          "start": {
            "line": 189,
            "column": 16
          },
          "end": {
            "line": 196,
            "column": 17
          }
        },
        "62": {
          "start": {
            "line": 190,
            "column": 34
          },
          "end": {
            "line": 190,
            "column": 55
          }
        },
        "63": {
          "start": {
            "line": 191,
            "column": 20
          },
          "end": {
            "line": 191,
            "column": 62
          }
        },
        "64": {
          "start": {
            "line": 192,
            "column": 20
          },
          "end": {
            "line": 192,
            "column": 67
          }
        },
        "65": {
          "start": {
            "line": 193,
            "column": 20
          },
          "end": {
            "line": 193,
            "column": 77
          }
        },
        "66": {
          "start": {
            "line": 195,
            "column": 20
          },
          "end": {
            "line": 195,
            "column": 83
          }
        },
        "67": {
          "start": {
            "line": 198,
            "column": 16
          },
          "end": {
            "line": 198,
            "column": 58
          }
        },
        "68": {
          "start": {
            "line": 203,
            "column": 8
          },
          "end": {
            "line": 224,
            "column": 9
          }
        },
        "69": {
          "start": {
            "line": 204,
            "column": 30
          },
          "end": {
            "line": 208,
            "column": 14
          }
        },
        "70": {
          "start": {
            "line": 210,
            "column": 12
          },
          "end": {
            "line": 214,
            "column": 14
          }
        },
        "71": {
          "start": {
            "line": 213,
            "column": 67
          },
          "end": {
            "line": 213,
            "column": 78
          }
        },
        "72": {
          "start": {
            "line": 216,
            "column": 12
          },
          "end": {
            "line": 220,
            "column": 13
          }
        },
        "73": {
          "start": {
            "line": 217,
            "column": 16
          },
          "end": {
            "line": 217,
            "column": 88
          }
        },
        "74": {
          "start": {
            "line": 219,
            "column": 16
          },
          "end": {
            "line": 219,
            "column": 68
          }
        },
        "75": {
          "start": {
            "line": 222,
            "column": 12
          },
          "end": {
            "line": 222,
            "column": 45
          }
        },
        "76": {
          "start": {
            "line": 223,
            "column": 12
          },
          "end": {
            "line": 223,
            "column": 79
          }
        },
        "77": {
          "start": {
            "line": 226,
            "column": 8
          },
          "end": {
            "line": 226,
            "column": 23
          }
        },
        "78": {
          "start": {
            "line": 233,
            "column": 8
          },
          "end": {
            "line": 233,
            "column": 57
          }
        },
        "79": {
          "start": {
            "line": 235,
            "column": 28
          },
          "end": {
            "line": 238,
            "column": 9
          }
        },
        "80": {
          "start": {
            "line": 241,
            "column": 27
          },
          "end": {
            "line": 241,
            "column": 65
          }
        },
        "81": {
          "start": {
            "line": 242,
            "column": 8
          },
          "end": {
            "line": 261,
            "column": 9
          }
        },
        "82": {
          "start": {
            "line": 243,
            "column": 28
          },
          "end": {
            "line": 243,
            "column": 95
          }
        },
        "83": {
          "start": {
            "line": 245,
            "column": 12
          },
          "end": {
            "line": 260,
            "column": 13
          }
        },
        "84": {
          "start": {
            "line": 246,
            "column": 35
          },
          "end": {
            "line": 246,
            "column": 64
          }
        },
        "85": {
          "start": {
            "line": 247,
            "column": 16
          },
          "end": {
            "line": 259,
            "column": 17
          }
        },
        "86": {
          "start": {
            "line": 248,
            "column": 20
          },
          "end": {
            "line": 255,
            "column": 21
          }
        },
        "87": {
          "start": {
            "line": 249,
            "column": 24
          },
          "end": {
            "line": 249,
            "column": 69
          }
        },
        "88": {
          "start": {
            "line": 250,
            "column": 24
          },
          "end": {
            "line": 250,
            "column": 75
          }
        },
        "89": {
          "start": {
            "line": 251,
            "column": 24
          },
          "end": {
            "line": 251,
            "column": 76
          }
        },
        "90": {
          "start": {
            "line": 253,
            "column": 24
          },
          "end": {
            "line": 253,
            "column": 98
          }
        },
        "91": {
          "start": {
            "line": 254,
            "column": 24
          },
          "end": {
            "line": 254,
            "column": 77
          }
        },
        "92": {
          "start": {
            "line": 257,
            "column": 20
          },
          "end": {
            "line": 257,
            "column": 68
          }
        },
        "93": {
          "start": {
            "line": 258,
            "column": 20
          },
          "end": {
            "line": 258,
            "column": 68
          }
        },
        "94": {
          "start": {
            "line": 264,
            "column": 21
          },
          "end": {
            "line": 264,
            "column": 58
          }
        },
        "95": {
          "start": {
            "line": 265,
            "column": 8
          },
          "end": {
            "line": 277,
            "column": 9
          }
        },
        "96": {
          "start": {
            "line": 266,
            "column": 28
          },
          "end": {
            "line": 266,
            "column": 60
          }
        },
        "97": {
          "start": {
            "line": 267,
            "column": 12
          },
          "end": {
            "line": 276,
            "column": 13
          }
        },
        "98": {
          "start": {
            "line": 268,
            "column": 16
          },
          "end": {
            "line": 275,
            "column": 17
          }
        },
        "99": {
          "start": {
            "line": 269,
            "column": 20
          },
          "end": {
            "line": 269,
            "column": 82
          }
        },
        "100": {
          "start": {
            "line": 270,
            "column": 20
          },
          "end": {
            "line": 270,
            "column": 86
          }
        },
        "101": {
          "start": {
            "line": 271,
            "column": 20
          },
          "end": {
            "line": 271,
            "column": 80
          }
        },
        "102": {
          "start": {
            "line": 273,
            "column": 20
          },
          "end": {
            "line": 273,
            "column": 110
          }
        },
        "103": {
          "start": {
            "line": 274,
            "column": 20
          },
          "end": {
            "line": 274,
            "column": 73
          }
        },
        "104": {
          "start": {
            "line": 279,
            "column": 8
          },
          "end": {
            "line": 279,
            "column": 27
          }
        },
        "105": {
          "start": {
            "line": 286,
            "column": 8
          },
          "end": {
            "line": 286,
            "column": 58
          }
        },
        "106": {
          "start": {
            "line": 288,
            "column": 8
          },
          "end": {
            "line": 288,
            "column": 47
          }
        },
        "107": {
          "start": {
            "line": 290,
            "column": 28
          },
          "end": {
            "line": 294,
            "column": 9
          }
        },
        "108": {
          "start": {
            "line": 297,
            "column": 8
          },
          "end": {
            "line": 297,
            "column": 47
          }
        },
        "109": {
          "start": {
            "line": 298,
            "column": 8
          },
          "end": {
            "line": 313,
            "column": 9
          }
        },
        "110": {
          "start": {
            "line": 299,
            "column": 29
          },
          "end": {
            "line": 299,
            "column": 76
          }
        },
        "111": {
          "start": {
            "line": 300,
            "column": 29
          },
          "end": {
            "line": 300,
            "column": 51
          }
        },
        "112": {
          "start": {
            "line": 302,
            "column": 12
          },
          "end": {
            "line": 302,
            "column": 49
          }
        },
        "113": {
          "start": {
            "line": 303,
            "column": 29
          },
          "end": {
            "line": 303,
            "column": 62
          }
        },
        "114": {
          "start": {
            "line": 304,
            "column": 12
          },
          "end": {
            "line": 304,
            "column": 36
          }
        },
        "115": {
          "start": {
            "line": 306,
            "column": 12
          },
          "end": {
            "line": 306,
            "column": 83
          }
        },
        "116": {
          "start": {
            "line": 307,
            "column": 12
          },
          "end": {
            "line": 307,
            "column": 73
          }
        },
        "117": {
          "start": {
            "line": 309,
            "column": 12
          },
          "end": {
            "line": 309,
            "column": 110
          }
        },
        "118": {
          "start": {
            "line": 311,
            "column": 12
          },
          "end": {
            "line": 311,
            "column": 49
          }
        },
        "119": {
          "start": {
            "line": 312,
            "column": 12
          },
          "end": {
            "line": 312,
            "column": 78
          }
        },
        "120": {
          "start": {
            "line": 316,
            "column": 8
          },
          "end": {
            "line": 316,
            "column": 51
          }
        },
        "121": {
          "start": {
            "line": 317,
            "column": 8
          },
          "end": {
            "line": 330,
            "column": 9
          }
        },
        "122": {
          "start": {
            "line": 318,
            "column": 31
          },
          "end": {
            "line": 318,
            "column": 80
          }
        },
        "123": {
          "start": {
            "line": 319,
            "column": 12
          },
          "end": {
            "line": 326,
            "column": 13
          }
        },
        "124": {
          "start": {
            "line": 320,
            "column": 16
          },
          "end": {
            "line": 323,
            "column": 19
          }
        },
        "125": {
          "start": {
            "line": 324,
            "column": 16
          },
          "end": {
            "line": 324,
            "column": 90
          }
        },
        "126": {
          "start": {
            "line": 325,
            "column": 16
          },
          "end": {
            "line": 325,
            "column": 104
          }
        },
        "127": {
          "start": {
            "line": 328,
            "column": 12
          },
          "end": {
            "line": 328,
            "column": 60
          }
        },
        "128": {
          "start": {
            "line": 329,
            "column": 12
          },
          "end": {
            "line": 329,
            "column": 79
          }
        },
        "129": {
          "start": {
            "line": 332,
            "column": 8
          },
          "end": {
            "line": 332,
            "column": 45
          }
        },
        "130": {
          "start": {
            "line": 334,
            "column": 8
          },
          "end": {
            "line": 334,
            "column": 27
          }
        },
        "131": {
          "start": {
            "line": 343,
            "column": 8
          },
          "end": {
            "line": 367,
            "column": 9
          }
        },
        "132": {
          "start": {
            "line": 344,
            "column": 27
          },
          "end": {
            "line": 348,
            "column": 14
          }
        },
        "133": {
          "start": {
            "line": 350,
            "column": 28
          },
          "end": {
            "line": 350,
            "column": 56
          }
        },
        "134": {
          "start": {
            "line": 352,
            "column": 12
          },
          "end": {
            "line": 356,
            "column": 13
          }
        },
        "135": {
          "start": {
            "line": 353,
            "column": 16
          },
          "end": {
            "line": 353,
            "column": 78
          }
        },
        "136": {
          "start": {
            "line": 355,
            "column": 16
          },
          "end": {
            "line": 355,
            "column": 75
          }
        },
        "137": {
          "start": {
            "line": 358,
            "column": 12
          },
          "end": {
            "line": 358,
            "column": 56
          }
        },
        "138": {
          "start": {
            "line": 360,
            "column": 12
          },
          "end": {
            "line": 364,
            "column": 13
          }
        },
        "139": {
          "start": {
            "line": 361,
            "column": 16
          },
          "end": {
            "line": 361,
            "column": 79
          }
        },
        "140": {
          "start": {
            "line": 363,
            "column": 16
          },
          "end": {
            "line": 363,
            "column": 89
          }
        },
        "141": {
          "start": {
            "line": 366,
            "column": 12
          },
          "end": {
            "line": 366,
            "column": 62
          }
        },
        "142": {
          "start": {
            "line": 375,
            "column": 8
          },
          "end": {
            "line": 375,
            "column": 30
          }
        },
        "143": {
          "start": {
            "line": 376,
            "column": 8
          },
          "end": {
            "line": 376,
            "column": 63
          }
        },
        "144": {
          "start": {
            "line": 377,
            "column": 8
          },
          "end": {
            "line": 377,
            "column": 54
          }
        },
        "145": {
          "start": {
            "line": 379,
            "column": 21
          },
          "end": {
            "line": 379,
            "column": 22
          }
        },
        "146": {
          "start": {
            "line": 380,
            "column": 23
          },
          "end": {
            "line": 380,
            "column": 24
          }
        },
        "147": {
          "start": {
            "line": 383,
            "column": 8
          },
          "end": {
            "line": 386,
            "column": 9
          }
        },
        "148": {
          "start": {
            "line": 384,
            "column": 12
          },
          "end": {
            "line": 384,
            "column": 61
          }
        },
        "149": {
          "start": {
            "line": 385,
            "column": 12
          },
          "end": {
            "line": 385,
            "column": 21
          }
        },
        "150": {
          "start": {
            "line": 388,
            "column": 8
          },
          "end": {
            "line": 391,
            "column": 9
          }
        },
        "151": {
          "start": {
            "line": 389,
            "column": 12
          },
          "end": {
            "line": 389,
            "column": 58
          }
        },
        "152": {
          "start": {
            "line": 390,
            "column": 12
          },
          "end": {
            "line": 390,
            "column": 21
          }
        },
        "153": {
          "start": {
            "line": 393,
            "column": 8
          },
          "end": {
            "line": 396,
            "column": 9
          }
        },
        "154": {
          "start": {
            "line": 394,
            "column": 12
          },
          "end": {
            "line": 394,
            "column": 71
          }
        },
        "155": {
          "start": {
            "line": 395,
            "column": 12
          },
          "end": {
            "line": 395,
            "column": 21
          }
        },
        "156": {
          "start": {
            "line": 399,
            "column": 8
          },
          "end": {
            "line": 402,
            "column": 9
          }
        },
        "157": {
          "start": {
            "line": 400,
            "column": 12
          },
          "end": {
            "line": 400,
            "column": 59
          }
        },
        "158": {
          "start": {
            "line": 401,
            "column": 12
          },
          "end": {
            "line": 401,
            "column": 23
          }
        },
        "159": {
          "start": {
            "line": 404,
            "column": 8
          },
          "end": {
            "line": 407,
            "column": 9
          }
        },
        "160": {
          "start": {
            "line": 405,
            "column": 12
          },
          "end": {
            "line": 405,
            "column": 79
          }
        },
        "161": {
          "start": {
            "line": 406,
            "column": 12
          },
          "end": {
            "line": 406,
            "column": 23
          }
        },
        "162": {
          "start": {
            "line": 410,
            "column": 8
          },
          "end": {
            "line": 413,
            "column": 9
          }
        },
        "163": {
          "start": {
            "line": 411,
            "column": 12
          },
          "end": {
            "line": 411,
            "column": 59
          }
        },
        "164": {
          "start": {
            "line": 412,
            "column": 12
          },
          "end": {
            "line": 412,
            "column": 23
          }
        },
        "165": {
          "start": {
            "line": 416,
            "column": 8
          },
          "end": {
            "line": 416,
            "column": 30
          }
        },
        "166": {
          "start": {
            "line": 417,
            "column": 8
          },
          "end": {
            "line": 423,
            "column": 9
          }
        },
        "167": {
          "start": {
            "line": 418,
            "column": 12
          },
          "end": {
            "line": 418,
            "column": 75
          }
        },
        "168": {
          "start": {
            "line": 419,
            "column": 15
          },
          "end": {
            "line": 423,
            "column": 9
          }
        },
        "169": {
          "start": {
            "line": 420,
            "column": 12
          },
          "end": {
            "line": 420,
            "column": 88
          }
        },
        "170": {
          "start": {
            "line": 422,
            "column": 12
          },
          "end": {
            "line": 422,
            "column": 93
          }
        },
        "171": {
          "start": {
            "line": 426,
            "column": 8
          },
          "end": {
            "line": 426,
            "column": 39
          }
        },
        "172": {
          "start": {
            "line": 431,
            "column": 0
          },
          "end": {
            "line": 487,
            "column": 1
          }
        },
        "173": {
          "start": {
            "line": 432,
            "column": 17
          },
          "end": {
            "line": 432,
            "column": 38
          }
        },
        "174": {
          "start": {
            "line": 434,
            "column": 20
          },
          "end": {
            "line": 437,
            "column": 5
          }
        },
        "175": {
          "start": {
            "line": 440,
            "column": 25
          },
          "end": {
            "line": 440,
            "column": 68
          }
        },
        "176": {
          "start": {
            "line": 440,
            "column": 47
          },
          "end": {
            "line": 440,
            "column": 67
          }
        },
        "177": {
          "start": {
            "line": 441,
            "column": 4
          },
          "end": {
            "line": 443,
            "column": 5
          }
        },
        "178": {
          "start": {
            "line": 442,
            "column": 8
          },
          "end": {
            "line": 442,
            "column": 49
          }
        },
        "179": {
          "start": {
            "line": 445,
            "column": 4
          },
          "end": {
            "line": 460,
            "column": 5
          }
        },
        "180": {
          "start": {
            "line": 446,
            "column": 8
          },
          "end": {
            "line": 458,
            "column": 3
          }
        },
        "181": {
          "start": {
            "line": 459,
            "column": 8
          },
          "end": {
            "line": 459,
            "column": 24
          }
        },
        "182": {
          "start": {
            "line": 463,
            "column": 23
          },
          "end": {
            "line": 467,
            "column": 10
          }
        },
        "183": {
          "start": {
            "line": 469,
            "column": 27
          },
          "end": {
            "line": 469,
            "column": 59
          }
        },
        "184": {
          "start": {
            "line": 471,
            "column": 8
          },
          "end": {
            "line": 483,
            "column": 9
          }
        },
        "185": {
          "start": {
            "line": 472,
            "column": 28
          },
          "end": {
            "line": 472,
            "column": 58
          }
        },
        "186": {
          "start": {
            "line": 475,
            "column": 30
          },
          "end": {
            "line": 477,
            "column": 52
          }
        },
        "187": {
          "start": {
            "line": 479,
            "column": 12
          },
          "end": {
            "line": 479,
            "column": 44
          }
        },
        "188": {
          "start": {
            "line": 481,
            "column": 12
          },
          "end": {
            "line": 481,
            "column": 62
          }
        },
        "189": {
          "start": {
            "line": 482,
            "column": 12
          },
          "end": {
            "line": 482,
            "column": 28
          }
        },
        "190": {
          "start": {
            "line": 486,
            "column": 4
          },
          "end": {
            "line": 486,
            "column": 20
          }
        },
        "191": {
          "start": {
            "line": 489,
            "column": 0
          },
          "end": {
            "line": 489,
            "column": 38
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 19,
              "column": 4
            },
            "end": {
              "line": 19,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 19,
              "column": 30
            },
            "end": {
              "line": 23,
              "column": 5
            }
          },
          "line": 19
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 28,
              "column": 4
            },
            "end": {
              "line": 28,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 28,
              "column": 24
            },
            "end": {
              "line": 48,
              "column": 5
            }
          },
          "line": 28
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 53,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 53,
              "column": 24
            },
            "end": {
              "line": 77,
              "column": 5
            }
          },
          "line": 53
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 82,
              "column": 29
            },
            "end": {
              "line": 102,
              "column": 5
            }
          },
          "line": 82
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": {
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 107,
              "column": 30
            },
            "end": {
              "line": 139,
              "column": 5
            }
          },
          "line": 107
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": {
            "start": {
              "line": 144,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 144,
              "column": 25
            },
            "end": {
              "line": 227,
              "column": 5
            }
          },
          "line": 144
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": {
            "start": {
              "line": 213,
              "column": 59
            },
            "end": {
              "line": 213,
              "column": 60
            }
          },
          "loc": {
            "start": {
              "line": 213,
              "column": 67
            },
            "end": {
              "line": 213,
              "column": 78
            }
          },
          "line": 213
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": {
            "start": {
              "line": 232,
              "column": 4
            },
            "end": {
              "line": 232,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 232,
              "column": 29
            },
            "end": {
              "line": 280,
              "column": 5
            }
          },
          "line": 232
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": {
            "start": {
              "line": 285,
              "column": 4
            },
            "end": {
              "line": 285,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 285,
              "column": 29
            },
            "end": {
              "line": 335,
              "column": 5
            }
          },
          "line": 285
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": {
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 342,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 342,
              "column": 49
            },
            "end": {
              "line": 368,
              "column": 5
            }
          },
          "line": 342
        },
        "10": {
          "name": "(anonymous_10)",
          "decl": {
            "start": {
              "line": 374,
              "column": 4
            },
            "end": {
              "line": 374,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 374,
              "column": 26
            },
            "end": {
              "line": 427,
              "column": 5
            }
          },
          "line": 374
        },
        "11": {
          "name": "(anonymous_11)",
          "decl": {
            "start": {
              "line": 440,
              "column": 40
            },
            "end": {
              "line": 440,
              "column": 41
            }
          },
          "loc": {
            "start": {
              "line": 440,
              "column": 47
            },
            "end": {
              "line": 440,
              "column": 67
            }
          },
          "line": 440
        },
        "12": {
          "name": "runDiagnostic",
          "decl": {
            "start": {
              "line": 462,
              "column": 19
            },
            "end": {
              "line": 462,
              "column": 32
            }
          },
          "loc": {
            "start": {
              "line": 462,
              "column": 35
            },
            "end": {
              "line": 484,
              "column": 5
            }
          },
          "line": 462
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 19,
              "column": 16
            },
            "end": {
              "line": 19,
              "column": 28
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 19,
                "column": 26
              },
              "end": {
                "line": 19,
                "column": 28
              }
            }
          ],
          "line": 19
        },
        "1": {
          "loc": {
            "start": {
              "line": 20,
              "column": 22
            },
            "end": {
              "line": 20,
              "column": 71
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 20,
                "column": 22
              },
              "end": {
                "line": 20,
                "column": 36
              }
            },
            {
              "start": {
                "line": 20,
                "column": 40
              },
              "end": {
                "line": 20,
                "column": 71
              }
            }
          ],
          "line": 20
        },
        "2": {
          "loc": {
            "start": {
              "line": 21,
              "column": 27
            },
            "end": {
              "line": 21,
              "column": 76
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 21,
                "column": 27
              },
              "end": {
                "line": 21,
                "column": 46
              }
            },
            {
              "start": {
                "line": 21,
                "column": 50
              },
              "end": {
                "line": 21,
                "column": 76
              }
            }
          ],
          "line": 21
        },
        "3": {
          "loc": {
            "start": {
              "line": 86,
              "column": 22
            },
            "end": {
              "line": 86,
              "column": 59
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 86,
                "column": 22
              },
              "end": {
                "line": 86,
                "column": 42
              }
            },
            {
              "start": {
                "line": 86,
                "column": 46
              },
              "end": {
                "line": 86,
                "column": 59
              }
            }
          ],
          "line": 86
        },
        "4": {
          "loc": {
            "start": {
              "line": 87,
              "column": 28
            },
            "end": {
              "line": 87,
              "column": 67
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 87,
                "column": 28
              },
              "end": {
                "line": 87,
                "column": 54
              }
            },
            {
              "start": {
                "line": 87,
                "column": 58
              },
              "end": {
                "line": 87,
                "column": 67
              }
            }
          ],
          "line": 87
        },
        "5": {
          "loc": {
            "start": {
              "line": 88,
              "column": 27
            },
            "end": {
              "line": 88,
              "column": 65
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 88,
                "column": 27
              },
              "end": {
                "line": 88,
                "column": 52
              }
            },
            {
              "start": {
                "line": 88,
                "column": 56
              },
              "end": {
                "line": 88,
                "column": 65
              }
            }
          ],
          "line": 88
        },
        "6": {
          "loc": {
            "start": {
              "line": 89,
              "column": 18
            },
            "end": {
              "line": 89,
              "column": 75
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 89,
                "column": 37
              },
              "end": {
                "line": 89,
                "column": 71
              }
            },
            {
              "start": {
                "line": 89,
                "column": 74
              },
              "end": {
                "line": 89,
                "column": 75
              }
            }
          ],
          "line": 89
        },
        "7": {
          "loc": {
            "start": {
              "line": 90,
              "column": 19
            },
            "end": {
              "line": 90,
              "column": 49
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 90,
                "column": 19
              },
              "end": {
                "line": 90,
                "column": 36
              }
            },
            {
              "start": {
                "line": 90,
                "column": 40
              },
              "end": {
                "line": 90,
                "column": 49
              }
            }
          ],
          "line": 90
        },
        "8": {
          "loc": {
            "start": {
              "line": 91,
              "column": 20
            },
            "end": {
              "line": 91,
              "column": 51
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 91,
                "column": 20
              },
              "end": {
                "line": 91,
                "column": 38
              }
            },
            {
              "start": {
                "line": 91,
                "column": 42
              },
              "end": {
                "line": 91,
                "column": 51
              }
            }
          ],
          "line": 91
        },
        "9": {
          "loc": {
            "start": {
              "line": 92,
              "column": 18
            },
            "end": {
              "line": 92,
              "column": 47
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 92,
                "column": 18
              },
              "end": {
                "line": 92,
                "column": 34
              }
            },
            {
              "start": {
                "line": 92,
                "column": 38
              },
              "end": {
                "line": 92,
                "column": 47
              }
            }
          ],
          "line": 92
        },
        "10": {
          "loc": {
            "start": {
              "line": 121,
              "column": 8
            },
            "end": {
              "line": 136,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 121,
                "column": 8
              },
              "end": {
                "line": 136,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 121
        },
        "11": {
          "loc": {
            "start": {
              "line": 127,
              "column": 46
            },
            "end": {
              "line": 127,
              "column": 76
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 127,
                "column": 46
              },
              "end": {
                "line": 127,
                "column": 70
              }
            },
            {
              "start": {
                "line": 127,
                "column": 74
              },
              "end": {
                "line": 127,
                "column": 76
              }
            }
          ],
          "line": 127
        },
        "12": {
          "loc": {
            "start": {
              "line": 128,
              "column": 49
            },
            "end": {
              "line": 128,
              "column": 82
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 128,
                "column": 49
              },
              "end": {
                "line": 128,
                "column": 76
              }
            },
            {
              "start": {
                "line": 128,
                "column": 80
              },
              "end": {
                "line": 128,
                "column": 82
              }
            }
          ],
          "line": 128
        },
        "13": {
          "loc": {
            "start": {
              "line": 154,
              "column": 8
            },
            "end": {
              "line": 157,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 154,
                "column": 8
              },
              "end": {
                "line": 157,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 154
        },
        "14": {
          "loc": {
            "start": {
              "line": 165,
              "column": 29
            },
            "end": {
              "line": 165,
              "column": 90
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 165,
                "column": 29
              },
              "end": {
                "line": 165,
                "column": 51
              }
            },
            {
              "start": {
                "line": 165,
                "column": 55
              },
              "end": {
                "line": 165,
                "column": 90
              }
            }
          ],
          "line": 165
        },
        "15": {
          "loc": {
            "start": {
              "line": 169,
              "column": 12
            },
            "end": {
              "line": 178,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 169,
                "column": 12
              },
              "end": {
                "line": 178,
                "column": 13
              }
            },
            {
              "start": {
                "line": 176,
                "column": 19
              },
              "end": {
                "line": 178,
                "column": 13
              }
            }
          ],
          "line": 169
        },
        "16": {
          "loc": {
            "start": {
              "line": 169,
              "column": 16
            },
            "end": {
              "line": 169,
              "column": 83
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 169,
                "column": 16
              },
              "end": {
                "line": 169,
                "column": 45
              }
            },
            {
              "start": {
                "line": 169,
                "column": 49
              },
              "end": {
                "line": 169,
                "column": 83
              }
            }
          ],
          "line": 169
        },
        "17": {
          "loc": {
            "start": {
              "line": 188,
              "column": 12
            },
            "end": {
              "line": 199,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 188,
                "column": 12
              },
              "end": {
                "line": 199,
                "column": 13
              }
            },
            {
              "start": {
                "line": 197,
                "column": 19
              },
              "end": {
                "line": 199,
                "column": 13
              }
            }
          ],
          "line": 188
        },
        "18": {
          "loc": {
            "start": {
              "line": 216,
              "column": 12
            },
            "end": {
              "line": 220,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 216,
                "column": 12
              },
              "end": {
                "line": 220,
                "column": 13
              }
            },
            {
              "start": {
                "line": 218,
                "column": 19
              },
              "end": {
                "line": 220,
                "column": 13
              }
            }
          ],
          "line": 216
        },
        "19": {
          "loc": {
            "start": {
              "line": 242,
              "column": 8
            },
            "end": {
              "line": 261,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 242,
                "column": 8
              },
              "end": {
                "line": 261,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 242
        },
        "20": {
          "loc": {
            "start": {
              "line": 247,
              "column": 16
            },
            "end": {
              "line": 259,
              "column": 17
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 247,
                "column": 16
              },
              "end": {
                "line": 259,
                "column": 17
              }
            },
            {
              "start": {
                "line": 256,
                "column": 23
              },
              "end": {
                "line": 259,
                "column": 17
              }
            }
          ],
          "line": 247
        },
        "21": {
          "loc": {
            "start": {
              "line": 267,
              "column": 12
            },
            "end": {
              "line": 276,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 267,
                "column": 12
              },
              "end": {
                "line": 276,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 267
        },
        "22": {
          "loc": {
            "start": {
              "line": 319,
              "column": 12
            },
            "end": {
              "line": 326,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 319,
                "column": 12
              },
              "end": {
                "line": 326,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 319
        },
        "23": {
          "loc": {
            "start": {
              "line": 342,
              "column": 32
            },
            "end": {
              "line": 342,
              "column": 47
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 342,
                "column": 43
              },
              "end": {
                "line": 342,
                "column": 47
              }
            }
          ],
          "line": 342
        },
        "24": {
          "loc": {
            "start": {
              "line": 352,
              "column": 12
            },
            "end": {
              "line": 356,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 352,
                "column": 12
              },
              "end": {
                "line": 356,
                "column": 13
              }
            },
            {
              "start": {
                "line": 354,
                "column": 19
              },
              "end": {
                "line": 356,
                "column": 13
              }
            }
          ],
          "line": 352
        },
        "25": {
          "loc": {
            "start": {
              "line": 360,
              "column": 12
            },
            "end": {
              "line": 364,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 360,
                "column": 12
              },
              "end": {
                "line": 364,
                "column": 13
              }
            },
            {
              "start": {
                "line": 362,
                "column": 19
              },
              "end": {
                "line": 364,
                "column": 13
              }
            }
          ],
          "line": 360
        },
        "26": {
          "loc": {
            "start": {
              "line": 383,
              "column": 8
            },
            "end": {
              "line": 386,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 383,
                "column": 8
              },
              "end": {
                "line": 386,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 383
        },
        "27": {
          "loc": {
            "start": {
              "line": 388,
              "column": 8
            },
            "end": {
              "line": 391,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 388,
                "column": 8
              },
              "end": {
                "line": 391,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 388
        },
        "28": {
          "loc": {
            "start": {
              "line": 393,
              "column": 8
            },
            "end": {
              "line": 396,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 393,
                "column": 8
              },
              "end": {
                "line": 396,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 393
        },
        "29": {
          "loc": {
            "start": {
              "line": 399,
              "column": 8
            },
            "end": {
              "line": 402,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 399,
                "column": 8
              },
              "end": {
                "line": 402,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 399
        },
        "30": {
          "loc": {
            "start": {
              "line": 404,
              "column": 8
            },
            "end": {
              "line": 407,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 404,
                "column": 8
              },
              "end": {
                "line": 407,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 404
        },
        "31": {
          "loc": {
            "start": {
              "line": 410,
              "column": 8
            },
            "end": {
              "line": 413,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 410,
                "column": 8
              },
              "end": {
                "line": 413,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 410
        },
        "32": {
          "loc": {
            "start": {
              "line": 417,
              "column": 8
            },
            "end": {
              "line": 423,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 417,
                "column": 8
              },
              "end": {
                "line": 423,
                "column": 9
              }
            },
            {
              "start": {
                "line": 419,
                "column": 15
              },
              "end": {
                "line": 423,
                "column": 9
              }
            }
          ],
          "line": 417
        },
        "33": {
          "loc": {
            "start": {
              "line": 417,
              "column": 12
            },
            "end": {
              "line": 417,
              "column": 42
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 417,
                "column": 12
              },
              "end": {
                "line": 417,
                "column": 24
              }
            },
            {
              "start": {
                "line": 417,
                "column": 28
              },
              "end": {
                "line": 417,
                "column": 42
              }
            }
          ],
          "line": 417
        },
        "34": {
          "loc": {
            "start": {
              "line": 419,
              "column": 15
            },
            "end": {
              "line": 423,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 419,
                "column": 15
              },
              "end": {
                "line": 423,
                "column": 9
              }
            },
            {
              "start": {
                "line": 421,
                "column": 15
              },
              "end": {
                "line": 423,
                "column": 9
              }
            }
          ],
          "line": 419
        },
        "35": {
          "loc": {
            "start": {
              "line": 431,
              "column": 0
            },
            "end": {
              "line": 487,
              "column": 1
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 431,
                "column": 0
              },
              "end": {
                "line": 487,
                "column": 1
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 431
        },
        "36": {
          "loc": {
            "start": {
              "line": 435,
              "column": 17
            },
            "end": {
              "line": 435,
              "column": 66
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 435,
                "column": 17
              },
              "end": {
                "line": 435,
                "column": 43
              }
            },
            {
              "start": {
                "line": 435,
                "column": 47
              },
              "end": {
                "line": 435,
                "column": 66
              }
            }
          ],
          "line": 435
        },
        "37": {
          "loc": {
            "start": {
              "line": 441,
              "column": 4
            },
            "end": {
              "line": 443,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 441,
                "column": 4
              },
              "end": {
                "line": 443,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 441
        },
        "38": {
          "loc": {
            "start": {
              "line": 441,
              "column": 8
            },
            "end": {
              "line": 441,
              "column": 61
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 441,
                "column": 8
              },
              "end": {
                "line": 441,
                "column": 27
              }
            },
            {
              "start": {
                "line": 441,
                "column": 31
              },
              "end": {
                "line": 441,
                "column": 61
              }
            }
          ],
          "line": 441
        },
        "39": {
          "loc": {
            "start": {
              "line": 445,
              "column": 4
            },
            "end": {
              "line": 460,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 445,
                "column": 4
              },
              "end": {
                "line": 460,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 445
        },
        "40": {
          "loc": {
            "start": {
              "line": 464,
              "column": 19
            },
            "end": {
              "line": 464,
              "column": 53
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 464,
                "column": 37
              },
              "end": {
                "line": 464,
                "column": 44
              }
            },
            {
              "start": {
                "line": 464,
                "column": 47
              },
              "end": {
                "line": 464,
                "column": 53
              }
            }
          ],
          "line": 464
        },
        "41": {
          "loc": {
            "start": {
              "line": 475,
              "column": 30
            },
            "end": {
              "line": 477,
              "column": 52
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 475,
                "column": 30
              },
              "end": {
                "line": 475,
                "column": 67
              }
            },
            {
              "start": {
                "line": 476,
                "column": 29
              },
              "end": {
                "line": 476,
                "column": 66
              }
            },
            {
              "start": {
                "line": 477,
                "column": 29
              },
              "end": {
                "line": 477,
                "column": 52
              }
            }
          ],
          "line": 475
        },
        "42": {
          "loc": {
            "start": {
              "line": 479,
              "column": 25
            },
            "end": {
              "line": 479,
              "column": 42
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 479,
                "column": 37
              },
              "end": {
                "line": 479,
                "column": 38
              }
            },
            {
              "start": {
                "line": 479,
                "column": 41
              },
              "end": {
                "line": 479,
                "column": 42
              }
            }
          ],
          "line": 479
        }
      },
      "s": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 0,
        "104": 0,
        "105": 0,
        "106": 0,
        "107": 0,
        "108": 0,
        "109": 0,
        "110": 0,
        "111": 0,
        "112": 0,
        "113": 0,
        "114": 0,
        "115": 0,
        "116": 0,
        "117": 0,
        "118": 0,
        "119": 0,
        "120": 0,
        "121": 0,
        "122": 0,
        "123": 0,
        "124": 0,
        "125": 0,
        "126": 0,
        "127": 0,
        "128": 0,
        "129": 0,
        "130": 0,
        "131": 0,
        "132": 0,
        "133": 0,
        "134": 0,
        "135": 0,
        "136": 0,
        "137": 0,
        "138": 0,
        "139": 0,
        "140": 0,
        "141": 0,
        "142": 0,
        "143": 0,
        "144": 0,
        "145": 0,
        "146": 0,
        "147": 0,
        "148": 0,
        "149": 0,
        "150": 0,
        "151": 0,
        "152": 0,
        "153": 0,
        "154": 0,
        "155": 0,
        "156": 0,
        "157": 0,
        "158": 0,
        "159": 0,
        "160": 0,
        "161": 0,
        "162": 0,
        "163": 0,
        "164": 0,
        "165": 0,
        "166": 0,
        "167": 0,
        "168": 0,
        "169": 0,
        "170": 0,
        "171": 0,
        "172": 0,
        "173": 0,
        "174": 0,
        "175": 0,
        "176": 0,
        "177": 0,
        "178": 0,
        "179": 0,
        "180": 0,
        "181": 0,
        "182": 0,
        "183": 0,
        "184": 0,
        "185": 0,
        "186": 0,
        "187": 0,
        "188": 0,
        "189": 0,
        "190": 0,
        "191": 0
      },
      "f": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0
      },
      "b": {
        "0": [
          0
        ],
        "1": [
          0,
          0
        ],
        "2": [
          0,
          0
        ],
        "3": [
          0,
          0
        ],
        "4": [
          0,
          0
        ],
        "5": [
          0,
          0
        ],
        "6": [
          0,
          0
        ],
        "7": [
          0,
          0
        ],
        "8": [
          0,
          0
        ],
        "9": [
          0,
          0
        ],
        "10": [
          0,
          0
        ],
        "11": [
          0,
          0
        ],
        "12": [
          0,
          0
        ],
        "13": [
          0,
          0
        ],
        "14": [
          0,
          0
        ],
        "15": [
          0,
          0
        ],
        "16": [
          0,
          0
        ],
        "17": [
          0,
          0
        ],
        "18": [
          0,
          0
        ],
        "19": [
          0,
          0
        ],
        "20": [
          0,
          0
        ],
        "21": [
          0,
          0
        ],
        "22": [
          0,
          0
        ],
        "23": [
          0
        ],
        "24": [
          0,
          0
        ],
        "25": [
          0,
          0
        ],
        "26": [
          0,
          0
        ],
        "27": [
          0,
          0
        ],
        "28": [
          0,
          0
        ],
        "29": [
          0,
          0
        ],
        "30": [
          0,
          0
        ],
        "31": [
          0,
          0
        ],
        "32": [
          0,
          0
        ],
        "33": [
          0,
          0
        ],
        "34": [
          0,
          0
        ],
        "35": [
          0,
          0
        ],
        "36": [
          0,
          0
        ],
        "37": [
          0,
          0
        ],
        "38": [
          0,
          0
        ],
        "39": [
          0,
          0
        ],
        "40": [
          0,
          0
        ],
        "41": [
          0,
          0,
          0
        ],
        "42": [
          0,
          0
        ]
      }
    },
    "/root/info-tech-io/hugo-templates/scripts/factory.js": {
      "path": "/root/info-tech-io/hugo-templates/scripts/factory.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 10,
            "column": 28
          },
          "end": {
            "line": 10,
            "column": 52
          }
        },
        "1": {
          "start": {
            "line": 11,
            "column": 13
          },
          "end": {
            "line": 11,
            "column": 28
          }
        },
        "2": {
          "start": {
            "line": 12,
            "column": 11
          },
          "end": {
            "line": 12,
            "column": 24
          }
        },
        "3": {
          "start": {
            "line": 13,
            "column": 11
          },
          "end": {
            "line": 13,
            "column": 24
          }
        },
        "4": {
          "start": {
            "line": 16,
            "column": 19
          },
          "end": {
            "line": 16,
            "column": 28
          }
        },
        "5": {
          "start": {
            "line": 17,
            "column": 21
          },
          "end": {
            "line": 17,
            "column": 54
          }
        },
        "6": {
          "start": {
            "line": 23,
            "column": 4
          },
          "end": {
            "line": 26,
            "column": 5
          }
        },
        "7": {
          "start": {
            "line": 24,
            "column": 8
          },
          "end": {
            "line": 24,
            "column": 65
          }
        },
        "8": {
          "start": {
            "line": 25,
            "column": 8
          },
          "end": {
            "line": 25,
            "column": 24
          }
        },
        "9": {
          "start": {
            "line": 28,
            "column": 4
          },
          "end": {
            "line": 34,
            "column": 5
          }
        },
        "10": {
          "start": {
            "line": 29,
            "column": 8
          },
          "end": {
            "line": 29,
            "column": 55
          }
        },
        "11": {
          "start": {
            "line": 31,
            "column": 8
          },
          "end": {
            "line": 31,
            "column": 73
          }
        },
        "12": {
          "start": {
            "line": 32,
            "column": 8
          },
          "end": {
            "line": 32,
            "column": 56
          }
        },
        "13": {
          "start": {
            "line": 33,
            "column": 8
          },
          "end": {
            "line": 33,
            "column": 24
          }
        },
        "14": {
          "start": {
            "line": 41,
            "column": 21
          },
          "end": {
            "line": 41,
            "column": 34
          }
        },
        "15": {
          "start": {
            "line": 43,
            "column": 4
          },
          "end": {
            "line": 47,
            "column": 5
          }
        },
        "16": {
          "start": {
            "line": 44,
            "column": 8
          },
          "end": {
            "line": 44,
            "column": 88
          }
        },
        "17": {
          "start": {
            "line": 45,
            "column": 8
          },
          "end": {
            "line": 45,
            "column": 90
          }
        },
        "18": {
          "start": {
            "line": 46,
            "column": 8
          },
          "end": {
            "line": 46,
            "column": 24
          }
        },
        "19": {
          "start": {
            "line": 50,
            "column": 4
          },
          "end": {
            "line": 56,
            "column": 5
          }
        },
        "20": {
          "start": {
            "line": 51,
            "column": 8
          },
          "end": {
            "line": 51,
            "column": 52
          }
        },
        "21": {
          "start": {
            "line": 53,
            "column": 8
          },
          "end": {
            "line": 53,
            "column": 48
          }
        },
        "22": {
          "start": {
            "line": 54,
            "column": 8
          },
          "end": {
            "line": 54,
            "column": 80
          }
        },
        "23": {
          "start": {
            "line": 55,
            "column": 8
          },
          "end": {
            "line": 55,
            "column": 24
          }
        },
        "24": {
          "start": {
            "line": 64,
            "column": 4
          },
          "end": {
            "line": 91,
            "column": 7
          }
        },
        "25": {
          "start": {
            "line": 66,
            "column": 22
          },
          "end": {
            "line": 69,
            "column": 10
          }
        },
        "26": {
          "start": {
            "line": 71,
            "column": 8
          },
          "end": {
            "line": 77,
            "column": 11
          }
        },
        "27": {
          "start": {
            "line": 72,
            "column": 12
          },
          "end": {
            "line": 76,
            "column": 13
          }
        },
        "28": {
          "start": {
            "line": 73,
            "column": 16
          },
          "end": {
            "line": 73,
            "column": 30
          }
        },
        "29": {
          "start": {
            "line": 75,
            "column": 16
          },
          "end": {
            "line": 75,
            "column": 75
          }
        },
        "30": {
          "start": {
            "line": 79,
            "column": 8
          },
          "end": {
            "line": 81,
            "column": 11
          }
        },
        "31": {
          "start": {
            "line": 80,
            "column": 12
          },
          "end": {
            "line": 80,
            "column": 80
          }
        },
        "32": {
          "start": {
            "line": 84,
            "column": 8
          },
          "end": {
            "line": 86,
            "column": 11
          }
        },
        "33": {
          "start": {
            "line": 85,
            "column": 12
          },
          "end": {
            "line": 85,
            "column": 33
          }
        },
        "34": {
          "start": {
            "line": 88,
            "column": 8
          },
          "end": {
            "line": 90,
            "column": 11
          }
        },
        "35": {
          "start": {
            "line": 89,
            "column": 12
          },
          "end": {
            "line": 89,
            "column": 34
          }
        },
        "36": {
          "start": {
            "line": 98,
            "column": 4
          },
          "end": {
            "line": 124,
            "column": 3
          }
        },
        "37": {
          "start": {
            "line": 133,
            "column": 4
          },
          "end": {
            "line": 136,
            "column": 5
          }
        },
        "38": {
          "start": {
            "line": 135,
            "column": 8
          },
          "end": {
            "line": 135,
            "column": 20
          }
        },
        "39": {
          "start": {
            "line": 138,
            "column": 4
          },
          "end": {
            "line": 141,
            "column": 5
          }
        },
        "40": {
          "start": {
            "line": 140,
            "column": 8
          },
          "end": {
            "line": 140,
            "column": 20
          }
        },
        "41": {
          "start": {
            "line": 143,
            "column": 4
          },
          "end": {
            "line": 154,
            "column": 5
          }
        },
        "42": {
          "start": {
            "line": 145,
            "column": 8
          },
          "end": {
            "line": 153,
            "column": 9
          }
        },
        "43": {
          "start": {
            "line": 146,
            "column": 32
          },
          "end": {
            "line": 146,
            "column": 58
          }
        },
        "44": {
          "start": {
            "line": 147,
            "column": 12
          },
          "end": {
            "line": 147,
            "column": 83
          }
        },
        "45": {
          "start": {
            "line": 148,
            "column": 12
          },
          "end": {
            "line": 148,
            "column": 65
          }
        },
        "46": {
          "start": {
            "line": 149,
            "column": 12
          },
          "end": {
            "line": 149,
            "column": 28
          }
        },
        "47": {
          "start": {
            "line": 151,
            "column": 12
          },
          "end": {
            "line": 151,
            "column": 62
          }
        },
        "48": {
          "start": {
            "line": 152,
            "column": 12
          },
          "end": {
            "line": 152,
            "column": 28
          }
        },
        "49": {
          "start": {
            "line": 156,
            "column": 4
          },
          "end": {
            "line": 159,
            "column": 5
          }
        },
        "50": {
          "start": {
            "line": 157,
            "column": 8
          },
          "end": {
            "line": 157,
            "column": 20
          }
        },
        "51": {
          "start": {
            "line": 158,
            "column": 8
          },
          "end": {
            "line": 158,
            "column": 24
          }
        },
        "52": {
          "start": {
            "line": 162,
            "column": 4
          },
          "end": {
            "line": 162,
            "column": 16
          }
        },
        "53": {
          "start": {
            "line": 169,
            "column": 4
          },
          "end": {
            "line": 189,
            "column": 5
          }
        },
        "54": {
          "start": {
            "line": 171,
            "column": 21
          },
          "end": {
            "line": 171,
            "column": 42
          }
        },
        "55": {
          "start": {
            "line": 174,
            "column": 30
          },
          "end": {
            "line": 174,
            "column": 52
          }
        },
        "56": {
          "start": {
            "line": 177,
            "column": 8
          },
          "end": {
            "line": 177,
            "column": 27
          }
        },
        "57": {
          "start": {
            "line": 178,
            "column": 8
          },
          "end": {
            "line": 178,
            "column": 29
          }
        },
        "58": {
          "start": {
            "line": 181,
            "column": 8
          },
          "end": {
            "line": 181,
            "column": 47
          }
        },
        "59": {
          "start": {
            "line": 184,
            "column": 8
          },
          "end": {
            "line": 184,
            "column": 24
          }
        },
        "60": {
          "start": {
            "line": 187,
            "column": 8
          },
          "end": {
            "line": 187,
            "column": 68
          }
        },
        "61": {
          "start": {
            "line": 188,
            "column": 8
          },
          "end": {
            "line": 188,
            "column": 24
          }
        },
        "62": {
          "start": {
            "line": 193,
            "column": 0
          },
          "end": {
            "line": 198,
            "column": 2
          }
        },
        "63": {
          "start": {
            "line": 201,
            "column": 0
          },
          "end": {
            "line": 206,
            "column": 1
          }
        },
        "64": {
          "start": {
            "line": 202,
            "column": 4
          },
          "end": {
            "line": 205,
            "column": 7
          }
        },
        "65": {
          "start": {
            "line": 203,
            "column": 8
          },
          "end": {
            "line": 203,
            "column": 52
          }
        },
        "66": {
          "start": {
            "line": 204,
            "column": 8
          },
          "end": {
            "line": 204,
            "column": 24
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "validateBashScript",
          "decl": {
            "start": {
              "line": 22,
              "column": 9
            },
            "end": {
              "line": 22,
              "column": 27
            }
          },
          "loc": {
            "start": {
              "line": 22,
              "column": 30
            },
            "end": {
              "line": 35,
              "column": 1
            }
          },
          "line": 22
        },
        "1": {
          "name": "validatePlatform",
          "decl": {
            "start": {
              "line": 40,
              "column": 9
            },
            "end": {
              "line": 40,
              "column": 25
            }
          },
          "loc": {
            "start": {
              "line": 40,
              "column": 28
            },
            "end": {
              "line": 57,
              "column": 1
            }
          },
          "line": 40
        },
        "2": {
          "name": "executeBashScript",
          "decl": {
            "start": {
              "line": 63,
              "column": 9
            },
            "end": {
              "line": 63,
              "column": 26
            }
          },
          "loc": {
            "start": {
              "line": 63,
              "column": 33
            },
            "end": {
              "line": 92,
              "column": 1
            }
          },
          "line": 63
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": {
            "start": {
              "line": 64,
              "column": 23
            },
            "end": {
              "line": 64,
              "column": 24
            }
          },
          "loc": {
            "start": {
              "line": 64,
              "column": 44
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "line": 64
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": {
            "start": {
              "line": 71,
              "column": 26
            },
            "end": {
              "line": 71,
              "column": 27
            }
          },
          "loc": {
            "start": {
              "line": 71,
              "column": 36
            },
            "end": {
              "line": 77,
              "column": 9
            }
          },
          "line": 71
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": {
            "start": {
              "line": 79,
              "column": 26
            },
            "end": {
              "line": 79,
              "column": 27
            }
          },
          "loc": {
            "start": {
              "line": 79,
              "column": 37
            },
            "end": {
              "line": 81,
              "column": 9
            }
          },
          "line": 79
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": {
            "start": {
              "line": 84,
              "column": 29
            },
            "end": {
              "line": 84,
              "column": 30
            }
          },
          "loc": {
            "start": {
              "line": 84,
              "column": 35
            },
            "end": {
              "line": 86,
              "column": 9
            }
          },
          "line": 84
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": {
            "start": {
              "line": 88,
              "column": 30
            },
            "end": {
              "line": 88,
              "column": 31
            }
          },
          "loc": {
            "start": {
              "line": 88,
              "column": 36
            },
            "end": {
              "line": 90,
              "column": 9
            }
          },
          "line": 88
        },
        "8": {
          "name": "showUsage",
          "decl": {
            "start": {
              "line": 97,
              "column": 9
            },
            "end": {
              "line": 97,
              "column": 18
            }
          },
          "loc": {
            "start": {
              "line": 97,
              "column": 21
            },
            "end": {
              "line": 125,
              "column": 1
            }
          },
          "line": 97
        },
        "9": {
          "name": "processArguments",
          "decl": {
            "start": {
              "line": 131,
              "column": 9
            },
            "end": {
              "line": 131,
              "column": 25
            }
          },
          "loc": {
            "start": {
              "line": 131,
              "column": 32
            },
            "end": {
              "line": 163,
              "column": 1
            }
          },
          "line": 131
        },
        "10": {
          "name": "main",
          "decl": {
            "start": {
              "line": 168,
              "column": 15
            },
            "end": {
              "line": 168,
              "column": 19
            }
          },
          "loc": {
            "start": {
              "line": 168,
              "column": 22
            },
            "end": {
              "line": 190,
              "column": 1
            }
          },
          "line": 168
        },
        "11": {
          "name": "(anonymous_11)",
          "decl": {
            "start": {
              "line": 202,
              "column": 17
            },
            "end": {
              "line": 202,
              "column": 18
            }
          },
          "loc": {
            "start": {
              "line": 202,
              "column": 28
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "line": 202
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 23,
              "column": 4
            },
            "end": {
              "line": 26,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 23,
                "column": 4
              },
              "end": {
                "line": 26,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 23
        },
        "1": {
          "loc": {
            "start": {
              "line": 43,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 43,
                "column": 4
              },
              "end": {
                "line": 47,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 43
        },
        "2": {
          "loc": {
            "start": {
              "line": 72,
              "column": 12
            },
            "end": {
              "line": 76,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 72,
                "column": 12
              },
              "end": {
                "line": 76,
                "column": 13
              }
            },
            {
              "start": {
                "line": 74,
                "column": 19
              },
              "end": {
                "line": 76,
                "column": 13
              }
            }
          ],
          "line": 72
        },
        "3": {
          "loc": {
            "start": {
              "line": 133,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 133,
                "column": 4
              },
              "end": {
                "line": 136,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 133
        },
        "4": {
          "loc": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 138,
                "column": 4
              },
              "end": {
                "line": 141,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 138
        },
        "5": {
          "loc": {
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 138,
              "column": 54
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 138,
                "column": 8
              },
              "end": {
                "line": 138,
                "column": 31
              }
            },
            {
              "start": {
                "line": 138,
                "column": 35
              },
              "end": {
                "line": 138,
                "column": 54
              }
            }
          ],
          "line": 138
        },
        "6": {
          "loc": {
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 154,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 143,
                "column": 4
              },
              "end": {
                "line": 154,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 143
        },
        "7": {
          "loc": {
            "start": {
              "line": 143,
              "column": 8
            },
            "end": {
              "line": 143,
              "column": 57
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 143,
                "column": 8
              },
              "end": {
                "line": 143,
                "column": 34
              }
            },
            {
              "start": {
                "line": 143,
                "column": 38
              },
              "end": {
                "line": 143,
                "column": 57
              }
            }
          ],
          "line": 143
        },
        "8": {
          "loc": {
            "start": {
              "line": 156,
              "column": 4
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 156,
                "column": 4
              },
              "end": {
                "line": 159,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 156
        },
        "9": {
          "loc": {
            "start": {
              "line": 201,
              "column": 0
            },
            "end": {
              "line": 206,
              "column": 1
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 201,
                "column": 0
              },
              "end": {
                "line": 206,
                "column": 1
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 201
        }
      },
      "s": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0
      },
      "f": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0
      },
      "b": {
        "0": [
          0,
          0
        ],
        "1": [
          0,
          0
        ],
        "2": [
          0,
          0
        ],
        "3": [
          0,
          0
        ],
        "4": [
          0,
          0
        ],
        "5": [
          0,
          0
        ],
        "6": [
          0,
          0
        ],
        "7": [
          0,
          0
        ],
        "8": [
          0,
          0
        ],
        "9": [
          0,
          0
        ]
      }
    },
    "/root/info-tech-io/hugo-templates/scripts/generate.js": {
      "path": "/root/info-tech-io/hugo-templates/scripts/generate.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 8,
            "column": 11
          },
          "end": {
            "line": 8,
            "column": 30
          }
        },
        "1": {
          "start": {
            "line": 9,
            "column": 13
          },
          "end": {
            "line": 9,
            "column": 28
          }
        },
        "2": {
          "start": {
            "line": 10,
            "column": 13
          },
          "end": {
            "line": 10,
            "column": 28
          }
        },
        "3": {
          "start": {
            "line": 11,
            "column": 14
          },
          "end": {
            "line": 11,
            "column": 30
          }
        },
        "4": {
          "start": {
            "line": 12,
            "column": 17
          },
          "end": {
            "line": 12,
            "column": 36
          }
        },
        "5": {
          "start": {
            "line": 20,
            "column": 24
          },
          "end": {
            "line": 20,
            "column": 73
          }
        },
        "6": {
          "start": {
            "line": 21,
            "column": 25
          },
          "end": {
            "line": 21,
            "column": 60
          }
        },
        "7": {
          "start": {
            "line": 22,
            "column": 25
          },
          "end": {
            "line": 22,
            "column": 62
          }
        },
        "8": {
          "start": {
            "line": 24,
            "column": 4
          },
          "end": {
            "line": 24,
            "column": 73
          }
        },
        "9": {
          "start": {
            "line": 25,
            "column": 4
          },
          "end": {
            "line": 25,
            "column": 44
          }
        },
        "10": {
          "start": {
            "line": 28,
            "column": 4
          },
          "end": {
            "line": 36,
            "column": 5
          }
        },
        "11": {
          "start": {
            "line": 29,
            "column": 8
          },
          "end": {
            "line": 35,
            "column": 9
          }
        },
        "12": {
          "start": {
            "line": 30,
            "column": 12
          },
          "end": {
            "line": 30,
            "column": 82
          }
        },
        "13": {
          "start": {
            "line": 31,
            "column": 12
          },
          "end": {
            "line": 31,
            "column": 67
          }
        },
        "14": {
          "start": {
            "line": 32,
            "column": 12
          },
          "end": {
            "line": 32,
            "column": 25
          }
        },
        "15": {
          "start": {
            "line": 34,
            "column": 12
          },
          "end": {
            "line": 34,
            "column": 92
          }
        },
        "16": {
          "start": {
            "line": 39,
            "column": 4
          },
          "end": {
            "line": 39,
            "column": 37
          }
        },
        "17": {
          "start": {
            "line": 42,
            "column": 27
          },
          "end": {
            "line": 42,
            "column": 78
          }
        },
        "18": {
          "start": {
            "line": 45,
            "column": 30
          },
          "end": {
            "line": 45,
            "column": 71
          }
        },
        "19": {
          "start": {
            "line": 46,
            "column": 4
          },
          "end": {
            "line": 46,
            "column": 83
          }
        },
        "20": {
          "start": {
            "line": 47,
            "column": 4
          },
          "end": {
            "line": 47,
            "column": 58
          }
        },
        "21": {
          "start": {
            "line": 50,
            "column": 23
          },
          "end": {
            "line": 50,
            "column": 64
          }
        },
        "22": {
          "start": {
            "line": 51,
            "column": 27
          },
          "end": {
            "line": 51,
            "column": 63
          }
        },
        "23": {
          "start": {
            "line": 52,
            "column": 4
          },
          "end": {
            "line": 52,
            "column": 51
          }
        },
        "24": {
          "start": {
            "line": 53,
            "column": 4
          },
          "end": {
            "line": 53,
            "column": 53
          }
        },
        "25": {
          "start": {
            "line": 56,
            "column": 29
          },
          "end": {
            "line": 56,
            "column": 76
          }
        },
        "26": {
          "start": {
            "line": 57,
            "column": 29
          },
          "end": {
            "line": 57,
            "column": 69
          }
        },
        "27": {
          "start": {
            "line": 58,
            "column": 4
          },
          "end": {
            "line": 58,
            "column": 84
          }
        },
        "28": {
          "start": {
            "line": 59,
            "column": 4
          },
          "end": {
            "line": 59,
            "column": 57
          }
        },
        "29": {
          "start": {
            "line": 62,
            "column": 24
          },
          "end": {
            "line": 62,
            "column": 59
          }
        },
        "30": {
          "start": {
            "line": 63,
            "column": 4
          },
          "end": {
            "line": 75,
            "column": 5
          }
        },
        "31": {
          "start": {
            "line": 64,
            "column": 24
          },
          "end": {
            "line": 64,
            "column": 52
          }
        },
        "32": {
          "start": {
            "line": 65,
            "column": 8
          },
          "end": {
            "line": 65,
            "column": 36
          }
        },
        "33": {
          "start": {
            "line": 68,
            "column": 8
          },
          "end": {
            "line": 72,
            "column": 9
          }
        },
        "34": {
          "start": {
            "line": 69,
            "column": 12
          },
          "end": {
            "line": 69,
            "column": 61
          }
        },
        "35": {
          "start": {
            "line": 70,
            "column": 15
          },
          "end": {
            "line": 72,
            "column": 9
          }
        },
        "36": {
          "start": {
            "line": 71,
            "column": 12
          },
          "end": {
            "line": 71,
            "column": 55
          }
        },
        "37": {
          "start": {
            "line": 74,
            "column": 8
          },
          "end": {
            "line": 74,
            "column": 65
          }
        },
        "38": {
          "start": {
            "line": 78,
            "column": 4
          },
          "end": {
            "line": 80,
            "column": 5
          }
        },
        "39": {
          "start": {
            "line": 79,
            "column": 8
          },
          "end": {
            "line": 79,
            "column": 79
          }
        },
        "40": {
          "start": {
            "line": 82,
            "column": 4
          },
          "end": {
            "line": 82,
            "column": 20
          }
        },
        "41": {
          "start": {
            "line": 83,
            "column": 4
          },
          "end": {
            "line": 83,
            "column": 86
          }
        },
        "42": {
          "start": {
            "line": 84,
            "column": 4
          },
          "end": {
            "line": 84,
            "column": 60
          }
        },
        "43": {
          "start": {
            "line": 85,
            "column": 4
          },
          "end": {
            "line": 85,
            "column": 46
          }
        },
        "44": {
          "start": {
            "line": 86,
            "column": 4
          },
          "end": {
            "line": 86,
            "column": 81
          }
        },
        "45": {
          "start": {
            "line": 87,
            "column": 4
          },
          "end": {
            "line": 87,
            "column": 71
          }
        },
        "46": {
          "start": {
            "line": 88,
            "column": 4
          },
          "end": {
            "line": 88,
            "column": 71
          }
        },
        "47": {
          "start": {
            "line": 90,
            "column": 4
          },
          "end": {
            "line": 90,
            "column": 16
          }
        },
        "48": {
          "start": {
            "line": 99,
            "column": 4
          },
          "end": {
            "line": 99,
            "column": 73
          }
        },
        "49": {
          "start": {
            "line": 100,
            "column": 4
          },
          "end": {
            "line": 100,
            "column": 44
          }
        },
        "50": {
          "start": {
            "line": 102,
            "column": 22
          },
          "end": {
            "line": 111,
            "column": 5
          }
        },
        "51": {
          "start": {
            "line": 114,
            "column": 4
          },
          "end": {
            "line": 118,
            "column": 7
          }
        },
        "52": {
          "start": {
            "line": 115,
            "column": 8
          },
          "end": {
            "line": 117,
            "column": 9
          }
        },
        "53": {
          "start": {
            "line": 116,
            "column": 12
          },
          "end": {
            "line": 116,
            "column": 34
          }
        },
        "54": {
          "start": {
            "line": 120,
            "column": 4
          },
          "end": {
            "line": 124,
            "column": 5
          }
        },
        "55": {
          "start": {
            "line": 121,
            "column": 8
          },
          "end": {
            "line": 121,
            "column": 77
          }
        },
        "56": {
          "start": {
            "line": 123,
            "column": 8
          },
          "end": {
            "line": 123,
            "column": 77
          }
        },
        "57": {
          "start": {
            "line": 126,
            "column": 4
          },
          "end": {
            "line": 126,
            "column": 21
          }
        },
        "58": {
          "start": {
            "line": 135,
            "column": 19
          },
          "end": {
            "line": 153,
            "column": 5
          }
        },
        "59": {
          "start": {
            "line": 156,
            "column": 4
          },
          "end": {
            "line": 167,
            "column": 5
          }
        },
        "60": {
          "start": {
            "line": 157,
            "column": 8
          },
          "end": {
            "line": 166,
            "column": 10
          }
        },
        "61": {
          "start": {
            "line": 170,
            "column": 4
          },
          "end": {
            "line": 208,
            "column": 5
          }
        },
        "62": {
          "start": {
            "line": 172,
            "column": 12
          },
          "end": {
            "line": 179,
            "column": 14
          }
        },
        "63": {
          "start": {
            "line": 180,
            "column": 12
          },
          "end": {
            "line": 180,
            "column": 18
          }
        },
        "64": {
          "start": {
            "line": 183,
            "column": 12
          },
          "end": {
            "line": 189,
            "column": 14
          }
        },
        "65": {
          "start": {
            "line": 190,
            "column": 12
          },
          "end": {
            "line": 190,
            "column": 18
          }
        },
        "66": {
          "start": {
            "line": 193,
            "column": 12
          },
          "end": {
            "line": 199,
            "column": 14
          }
        },
        "67": {
          "start": {
            "line": 200,
            "column": 12
          },
          "end": {
            "line": 206,
            "column": 14
          }
        },
        "68": {
          "start": {
            "line": 207,
            "column": 12
          },
          "end": {
            "line": 207,
            "column": 18
          }
        },
        "69": {
          "start": {
            "line": 210,
            "column": 4
          },
          "end": {
            "line": 210,
            "column": 18
          }
        },
        "70": {
          "start": {
            "line": 219,
            "column": 20
          },
          "end": {
            "line": 219,
            "column": 62
          }
        },
        "71": {
          "start": {
            "line": 220,
            "column": 18
          },
          "end": {
            "line": 220,
            "column": 44
          }
        },
        "72": {
          "start": {
            "line": 221,
            "column": 18
          },
          "end": {
            "line": 221,
            "column": 105
          }
        },
        "73": {
          "start": {
            "line": 223,
            "column": 4
          },
          "end": {
            "line": 283,
            "column": 2
          }
        },
        "74": {
          "start": {
            "line": 292,
            "column": 4
          },
          "end": {
            "line": 317,
            "column": 6
          }
        },
        "75": {
          "start": {
            "line": 327,
            "column": 25
          },
          "end": {
            "line": 352,
            "column": 1
          }
        },
        "76": {
          "start": {
            "line": 354,
            "column": 4
          },
          "end": {
            "line": 354,
            "column": 74
          }
        },
        "77": {
          "start": {
            "line": 357,
            "column": 25
          },
          "end": {
            "line": 369,
            "column": 1
          }
        },
        "78": {
          "start": {
            "line": 371,
            "column": 4
          },
          "end": {
            "line": 371,
            "column": 73
          }
        },
        "79": {
          "start": {
            "line": 374,
            "column": 4
          },
          "end": {
            "line": 415,
            "column": 5
          }
        },
        "80": {
          "start": {
            "line": 375,
            "column": 25
          },
          "end": {
            "line": 375,
            "column": 56
          }
        },
        "81": {
          "start": {
            "line": 376,
            "column": 8
          },
          "end": {
            "line": 376,
            "column": 37
          }
        },
        "82": {
          "start": {
            "line": 378,
            "column": 26
          },
          "end": {
            "line": 412,
            "column": 1
          }
        },
        "83": {
          "start": {
            "line": 414,
            "column": 8
          },
          "end": {
            "line": 414,
            "column": 76
          }
        },
        "84": {
          "start": {
            "line": 425,
            "column": 29
          },
          "end": {
            "line": 434,
            "column": 1
          }
        },
        "85": {
          "start": {
            "line": 436,
            "column": 4
          },
          "end": {
            "line": 436,
            "column": 82
          }
        },
        "86": {
          "start": {
            "line": 439,
            "column": 4
          },
          "end": {
            "line": 453,
            "column": 5
          }
        },
        "87": {
          "start": {
            "line": 440,
            "column": 30
          },
          "end": {
            "line": 450,
            "column": 1
          }
        },
        "88": {
          "start": {
            "line": 452,
            "column": 8
          },
          "end": {
            "line": 452,
            "column": 81
          }
        },
        "89": {
          "start": {
            "line": 463,
            "column": 21
          },
          "end": {
            "line": 463,
            "column": 66
          }
        },
        "90": {
          "start": {
            "line": 465,
            "column": 4
          },
          "end": {
            "line": 468,
            "column": 5
          }
        },
        "91": {
          "start": {
            "line": 466,
            "column": 8
          },
          "end": {
            "line": 466,
            "column": 94
          }
        },
        "92": {
          "start": {
            "line": 467,
            "column": 8
          },
          "end": {
            "line": 467,
            "column": 15
          }
        },
        "93": {
          "start": {
            "line": 470,
            "column": 4
          },
          "end": {
            "line": 470,
            "column": 80
          }
        },
        "94": {
          "start": {
            "line": 473,
            "column": 23
          },
          "end": {
            "line": 473,
            "column": 44
          }
        },
        "95": {
          "start": {
            "line": 475,
            "column": 4
          },
          "end": {
            "line": 483,
            "column": 5
          }
        },
        "96": {
          "start": {
            "line": 476,
            "column": 26
          },
          "end": {
            "line": 476,
            "column": 50
          }
        },
        "97": {
          "start": {
            "line": 477,
            "column": 26
          },
          "end": {
            "line": 477,
            "column": 52
          }
        },
        "98": {
          "start": {
            "line": 479,
            "column": 8
          },
          "end": {
            "line": 482,
            "column": 9
          }
        },
        "99": {
          "start": {
            "line": 480,
            "column": 12
          },
          "end": {
            "line": 480,
            "column": 70
          }
        },
        "100": {
          "start": {
            "line": 481,
            "column": 12
          },
          "end": {
            "line": 481,
            "column": 75
          }
        },
        "101": {
          "start": {
            "line": 490,
            "column": 4
          },
          "end": {
            "line": 490,
            "column": 65
          }
        },
        "102": {
          "start": {
            "line": 491,
            "column": 4
          },
          "end": {
            "line": 491,
            "column": 44
          }
        },
        "103": {
          "start": {
            "line": 493,
            "column": 20
          },
          "end": {
            "line": 544,
            "column": 6
          }
        },
        "104": {
          "start": {
            "line": 499,
            "column": 16
          },
          "end": {
            "line": 499,
            "column": 63
          }
        },
        "105": {
          "start": {
            "line": 499,
            "column": 28
          },
          "end": {
            "line": 499,
            "column": 63
          }
        },
        "106": {
          "start": {
            "line": 500,
            "column": 16
          },
          "end": {
            "line": 500,
            "column": 125
          }
        },
        "107": {
          "start": {
            "line": 500,
            "column": 49
          },
          "end": {
            "line": 500,
            "column": 125
          }
        },
        "108": {
          "start": {
            "line": 501,
            "column": 16
          },
          "end": {
            "line": 501,
            "column": 28
          }
        },
        "109": {
          "start": {
            "line": 508,
            "column": 34
          },
          "end": {
            "line": 508,
            "column": 94
          }
        },
        "110": {
          "start": {
            "line": 546,
            "column": 4
          },
          "end": {
            "line": 546,
            "column": 59
          }
        },
        "111": {
          "start": {
            "line": 550,
            "column": 0
          },
          "end": {
            "line": 637,
            "column": 1
          }
        },
        "112": {
          "start": {
            "line": 551,
            "column": 17
          },
          "end": {
            "line": 551,
            "column": 38
          }
        },
        "113": {
          "start": {
            "line": 553,
            "column": 4
          },
          "end": {
            "line": 581,
            "column": 5
          }
        },
        "114": {
          "start": {
            "line": 554,
            "column": 8
          },
          "end": {
            "line": 579,
            "column": 3
          }
        },
        "115": {
          "start": {
            "line": 580,
            "column": 8
          },
          "end": {
            "line": 580,
            "column": 24
          }
        },
        "116": {
          "start": {
            "line": 583,
            "column": 20
          },
          "end": {
            "line": 583,
            "column": 27
          }
        },
        "117": {
          "start": {
            "line": 584,
            "column": 17
          },
          "end": {
            "line": 584,
            "column": 24
          }
        },
        "118": {
          "start": {
            "line": 586,
            "column": 20
          },
          "end": {
            "line": 586,
            "column": 22
          }
        },
        "119": {
          "start": {
            "line": 589,
            "column": 4
          },
          "end": {
            "line": 601,
            "column": 5
          }
        },
        "120": {
          "start": {
            "line": 589,
            "column": 17
          },
          "end": {
            "line": 589,
            "column": 18
          }
        },
        "121": {
          "start": {
            "line": 590,
            "column": 20
          },
          "end": {
            "line": 590,
            "column": 27
          }
        },
        "122": {
          "start": {
            "line": 591,
            "column": 22
          },
          "end": {
            "line": 591,
            "column": 33
          }
        },
        "123": {
          "start": {
            "line": 593,
            "column": 8
          },
          "end": {
            "line": 600,
            "column": 60
          }
        },
        "124": {
          "start": {
            "line": 593,
            "column": 37
          },
          "end": {
            "line": 593,
            "column": 65
          }
        },
        "125": {
          "start": {
            "line": 594,
            "column": 13
          },
          "end": {
            "line": 600,
            "column": 60
          }
        },
        "126": {
          "start": {
            "line": 594,
            "column": 35
          },
          "end": {
            "line": 594,
            "column": 56
          }
        },
        "127": {
          "start": {
            "line": 595,
            "column": 13
          },
          "end": {
            "line": 600,
            "column": 60
          }
        },
        "128": {
          "start": {
            "line": 595,
            "column": 37
          },
          "end": {
            "line": 595,
            "column": 60
          }
        },
        "129": {
          "start": {
            "line": 596,
            "column": 13
          },
          "end": {
            "line": 600,
            "column": 60
          }
        },
        "130": {
          "start": {
            "line": 596,
            "column": 39
          },
          "end": {
            "line": 596,
            "column": 63
          }
        },
        "131": {
          "start": {
            "line": 597,
            "column": 13
          },
          "end": {
            "line": 600,
            "column": 60
          }
        },
        "132": {
          "start": {
            "line": 597,
            "column": 38
          },
          "end": {
            "line": 597,
            "column": 59
          }
        },
        "133": {
          "start": {
            "line": 597,
            "column": 60
          },
          "end": {
            "line": 597,
            "column": 64
          }
        },
        "134": {
          "start": {
            "line": 598,
            "column": 13
          },
          "end": {
            "line": 600,
            "column": 60
          }
        },
        "135": {
          "start": {
            "line": 598,
            "column": 38
          },
          "end": {
            "line": 598,
            "column": 62
          }
        },
        "136": {
          "start": {
            "line": 599,
            "column": 13
          },
          "end": {
            "line": 600,
            "column": 60
          }
        },
        "137": {
          "start": {
            "line": 599,
            "column": 37
          },
          "end": {
            "line": 599,
            "column": 60
          }
        },
        "138": {
          "start": {
            "line": 600,
            "column": 13
          },
          "end": {
            "line": 600,
            "column": 60
          }
        },
        "139": {
          "start": {
            "line": 600,
            "column": 37
          },
          "end": {
            "line": 600,
            "column": 60
          }
        },
        "140": {
          "start": {
            "line": 604,
            "column": 8
          },
          "end": {
            "line": 633,
            "column": 9
          }
        },
        "141": {
          "start": {
            "line": 605,
            "column": 12
          },
          "end": {
            "line": 629,
            "column": 13
          }
        },
        "142": {
          "start": {
            "line": 607,
            "column": 20
          },
          "end": {
            "line": 610,
            "column": 21
          }
        },
        "143": {
          "start": {
            "line": 608,
            "column": 24
          },
          "end": {
            "line": 608,
            "column": 78
          }
        },
        "144": {
          "start": {
            "line": 609,
            "column": 24
          },
          "end": {
            "line": 609,
            "column": 40
          }
        },
        "145": {
          "start": {
            "line": 611,
            "column": 20
          },
          "end": {
            "line": 611,
            "column": 58
          }
        },
        "146": {
          "start": {
            "line": 612,
            "column": 20
          },
          "end": {
            "line": 612,
            "column": 26
          }
        },
        "147": {
          "start": {
            "line": 615,
            "column": 20
          },
          "end": {
            "line": 618,
            "column": 21
          }
        },
        "148": {
          "start": {
            "line": 616,
            "column": 24
          },
          "end": {
            "line": 616,
            "column": 79
          }
        },
        "149": {
          "start": {
            "line": 617,
            "column": 24
          },
          "end": {
            "line": 617,
            "column": 40
          }
        },
        "150": {
          "start": {
            "line": 619,
            "column": 20
          },
          "end": {
            "line": 619,
            "column": 59
          }
        },
        "151": {
          "start": {
            "line": 620,
            "column": 20
          },
          "end": {
            "line": 620,
            "column": 26
          }
        },
        "152": {
          "start": {
            "line": 623,
            "column": 20
          },
          "end": {
            "line": 623,
            "column": 48
          }
        },
        "153": {
          "start": {
            "line": 624,
            "column": 20
          },
          "end": {
            "line": 624,
            "column": 26
          }
        },
        "154": {
          "start": {
            "line": 627,
            "column": 20
          },
          "end": {
            "line": 627,
            "column": 76
          }
        },
        "155": {
          "start": {
            "line": 628,
            "column": 20
          },
          "end": {
            "line": 628,
            "column": 36
          }
        },
        "156": {
          "start": {
            "line": 631,
            "column": 12
          },
          "end": {
            "line": 631,
            "column": 82
          }
        },
        "157": {
          "start": {
            "line": 632,
            "column": 12
          },
          "end": {
            "line": 632,
            "column": 28
          }
        },
        "158": {
          "start": {
            "line": 636,
            "column": 4
          },
          "end": {
            "line": 636,
            "column": 17
          }
        },
        "159": {
          "start": {
            "line": 639,
            "column": 0
          },
          "end": {
            "line": 643,
            "column": 2
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "generateTemplate",
          "decl": {
            "start": {
              "line": 19,
              "column": 15
            },
            "end": {
              "line": 19,
              "column": 31
            }
          },
          "loc": {
            "start": {
              "line": 19,
              "column": 60
            },
            "end": {
              "line": 91,
              "column": 1
            }
          },
          "line": 19
        },
        "1": {
          "name": "generateComponent",
          "decl": {
            "start": {
              "line": 98,
              "column": 15
            },
            "end": {
              "line": 98,
              "column": 32
            }
          },
          "loc": {
            "start": {
              "line": 98,
              "column": 62
            },
            "end": {
              "line": 127,
              "column": 1
            }
          },
          "line": 98
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 114,
              "column": 35
            },
            "end": {
              "line": 114,
              "column": 36
            }
          },
          "loc": {
            "start": {
              "line": 114,
              "column": 42
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "line": 114
        },
        "3": {
          "name": "generateTemplateConfig",
          "decl": {
            "start": {
              "line": 134,
              "column": 15
            },
            "end": {
              "line": 134,
              "column": 37
            }
          },
          "loc": {
            "start": {
              "line": 134,
              "column": 61
            },
            "end": {
              "line": 211,
              "column": 1
            }
          },
          "line": 134
        },
        "4": {
          "name": "generateHugoConfig",
          "decl": {
            "start": {
              "line": 218,
              "column": 9
            },
            "end": {
              "line": 218,
              "column": 27
            }
          },
          "loc": {
            "start": {
              "line": 218,
              "column": 51
            },
            "end": {
              "line": 284,
              "column": 1
            }
          },
          "line": 218
        },
        "5": {
          "name": "generateTemplateMetadata",
          "decl": {
            "start": {
              "line": 291,
              "column": 9
            },
            "end": {
              "line": 291,
              "column": 33
            }
          },
          "loc": {
            "start": {
              "line": 291,
              "column": 57
            },
            "end": {
              "line": 318,
              "column": 1
            }
          },
          "line": 291
        },
        "6": {
          "name": "generateContentStructure",
          "decl": {
            "start": {
              "line": 325,
              "column": 15
            },
            "end": {
              "line": 325,
              "column": 39
            }
          },
          "loc": {
            "start": {
              "line": 325,
              "column": 62
            },
            "end": {
              "line": 416,
              "column": 1
            }
          },
          "line": 325
        },
        "7": {
          "name": "generateArchetypes",
          "decl": {
            "start": {
              "line": 423,
              "column": 15
            },
            "end": {
              "line": 423,
              "column": 33
            }
          },
          "loc": {
            "start": {
              "line": 423,
              "column": 59
            },
            "end": {
              "line": 454,
              "column": 1
            }
          },
          "line": 423
        },
        "8": {
          "name": "copyFromBaseTemplate",
          "decl": {
            "start": {
              "line": 462,
              "column": 15
            },
            "end": {
              "line": 462,
              "column": 35
            }
          },
          "loc": {
            "start": {
              "line": 462,
              "column": 71
            },
            "end": {
              "line": 484,
              "column": 1
            }
          },
          "line": 462
        },
        "9": {
          "name": "interactiveGenerate",
          "decl": {
            "start": {
              "line": 489,
              "column": 15
            },
            "end": {
              "line": 489,
              "column": 34
            }
          },
          "loc": {
            "start": {
              "line": 489,
              "column": 37
            },
            "end": {
              "line": 547,
              "column": 1
            }
          },
          "line": 489
        },
        "10": {
          "name": "(anonymous_10)",
          "decl": {
            "start": {
              "line": 498,
              "column": 22
            },
            "end": {
              "line": 498,
              "column": 23
            }
          },
          "loc": {
            "start": {
              "line": 498,
              "column": 33
            },
            "end": {
              "line": 502,
              "column": 13
            }
          },
          "line": 498
        },
        "11": {
          "name": "(anonymous_11)",
          "decl": {
            "start": {
              "line": 508,
              "column": 21
            },
            "end": {
              "line": 508,
              "column": 22
            }
          },
          "loc": {
            "start": {
              "line": 508,
              "column": 34
            },
            "end": {
              "line": 508,
              "column": 94
            }
          },
          "line": 508
        },
        "12": {
          "name": "runCommand",
          "decl": {
            "start": {
              "line": 603,
              "column": 19
            },
            "end": {
              "line": 603,
              "column": 29
            }
          },
          "loc": {
            "start": {
              "line": 603,
              "column": 32
            },
            "end": {
              "line": 634,
              "column": 5
            }
          },
          "line": 603
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 19,
              "column": 46
            },
            "end": {
              "line": 19,
              "column": 58
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 19,
                "column": 56
              },
              "end": {
                "line": 19,
                "column": 58
              }
            }
          ],
          "line": 19
        },
        "1": {
          "loc": {
            "start": {
              "line": 20,
              "column": 24
            },
            "end": {
              "line": 20,
              "column": 73
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 20,
                "column": 24
              },
              "end": {
                "line": 20,
                "column": 43
              }
            },
            {
              "start": {
                "line": 20,
                "column": 47
              },
              "end": {
                "line": 20,
                "column": 73
              }
            }
          ],
          "line": 20
        },
        "2": {
          "loc": {
            "start": {
              "line": 28,
              "column": 4
            },
            "end": {
              "line": 36,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 28,
                "column": 4
              },
              "end": {
                "line": 36,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 28
        },
        "3": {
          "loc": {
            "start": {
              "line": 29,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 29,
                "column": 8
              },
              "end": {
                "line": 35,
                "column": 9
              }
            },
            {
              "start": {
                "line": 33,
                "column": 15
              },
              "end": {
                "line": 35,
                "column": 9
              }
            }
          ],
          "line": 29
        },
        "4": {
          "loc": {
            "start": {
              "line": 68,
              "column": 8
            },
            "end": {
              "line": 72,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 68,
                "column": 8
              },
              "end": {
                "line": 72,
                "column": 9
              }
            },
            {
              "start": {
                "line": 70,
                "column": 15
              },
              "end": {
                "line": 72,
                "column": 9
              }
            }
          ],
          "line": 68
        },
        "5": {
          "loc": {
            "start": {
              "line": 70,
              "column": 15
            },
            "end": {
              "line": 72,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 70,
                "column": 15
              },
              "end": {
                "line": 72,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 70
        },
        "6": {
          "loc": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 78,
                "column": 4
              },
              "end": {
                "line": 80,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 78
        },
        "7": {
          "loc": {
            "start": {
              "line": 98,
              "column": 48
            },
            "end": {
              "line": 98,
              "column": 60
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 98,
                "column": 58
              },
              "end": {
                "line": 98,
                "column": 60
              }
            }
          ],
          "line": 98
        },
        "8": {
          "loc": {
            "start": {
              "line": 103,
              "column": 17
            },
            "end": {
              "line": 103,
              "column": 44
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 103,
                "column": 17
              },
              "end": {
                "line": 103,
                "column": 32
              }
            },
            {
              "start": {
                "line": 103,
                "column": 36
              },
              "end": {
                "line": 103,
                "column": 44
              }
            }
          ],
          "line": 103
        },
        "9": {
          "loc": {
            "start": {
              "line": 104,
              "column": 16
            },
            "end": {
              "line": 104,
              "column": 48
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 104,
                "column": 16
              },
              "end": {
                "line": 104,
                "column": 30
              }
            },
            {
              "start": {
                "line": 104,
                "column": 34
              },
              "end": {
                "line": 104,
                "column": 48
              }
            }
          ],
          "line": 104
        },
        "10": {
          "loc": {
            "start": {
              "line": 105,
              "column": 21
            },
            "end": {
              "line": 105,
              "column": 72
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 105,
                "column": 21
              },
              "end": {
                "line": 105,
                "column": 40
              }
            },
            {
              "start": {
                "line": 105,
                "column": 44
              },
              "end": {
                "line": 105,
                "column": 72
              }
            }
          ],
          "line": 105
        },
        "11": {
          "loc": {
            "start": {
              "line": 106,
              "column": 20
            },
            "end": {
              "line": 106,
              "column": 46
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 106,
                "column": 20
              },
              "end": {
                "line": 106,
                "column": 38
              }
            },
            {
              "start": {
                "line": 106,
                "column": 42
              },
              "end": {
                "line": 106,
                "column": 46
              }
            }
          ],
          "line": 106
        },
        "12": {
          "loc": {
            "start": {
              "line": 107,
              "column": 24
            },
            "end": {
              "line": 107,
              "column": 80
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 107,
                "column": 44
              },
              "end": {
                "line": 107,
                "column": 73
              }
            },
            {
              "start": {
                "line": 107,
                "column": 76
              },
              "end": {
                "line": 107,
                "column": 80
              }
            }
          ],
          "line": 107
        },
        "13": {
          "loc": {
            "start": {
              "line": 108,
              "column": 22
            },
            "end": {
              "line": 108,
              "column": 47
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 108,
                "column": 22
              },
              "end": {
                "line": 108,
                "column": 41
              }
            },
            {
              "start": {
                "line": 108,
                "column": 45
              },
              "end": {
                "line": 108,
                "column": 47
              }
            }
          ],
          "line": 108
        },
        "14": {
          "loc": {
            "start": {
              "line": 109,
              "column": 17
            },
            "end": {
              "line": 109,
              "column": 38
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 109,
                "column": 17
              },
              "end": {
                "line": 109,
                "column": 32
              }
            },
            {
              "start": {
                "line": 109,
                "column": 36
              },
              "end": {
                "line": 109,
                "column": 38
              }
            }
          ],
          "line": 109
        },
        "15": {
          "loc": {
            "start": {
              "line": 110,
              "column": 23
            },
            "end": {
              "line": 110,
              "column": 50
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 110,
                "column": 23
              },
              "end": {
                "line": 110,
                "column": 44
              }
            },
            {
              "start": {
                "line": 110,
                "column": 48
              },
              "end": {
                "line": 110,
                "column": 50
              }
            }
          ],
          "line": 110
        },
        "16": {
          "loc": {
            "start": {
              "line": 115,
              "column": 8
            },
            "end": {
              "line": 117,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 115,
                "column": 8
              },
              "end": {
                "line": 117,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 115
        },
        "17": {
          "loc": {
            "start": {
              "line": 115,
              "column": 12
            },
            "end": {
              "line": 115,
              "column": 101
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 115,
                "column": 12
              },
              "end": {
                "line": 115,
                "column": 35
              }
            },
            {
              "start": {
                "line": 115,
                "column": 40
              },
              "end": {
                "line": 115,
                "column": 69
              }
            },
            {
              "start": {
                "line": 115,
                "column": 73
              },
              "end": {
                "line": 115,
                "column": 100
              }
            }
          ],
          "line": 115
        },
        "18": {
          "loc": {
            "start": {
              "line": 120,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 120,
                "column": 4
              },
              "end": {
                "line": 124,
                "column": 5
              }
            },
            {
              "start": {
                "line": 122,
                "column": 11
              },
              "end": {
                "line": 124,
                "column": 5
              }
            }
          ],
          "line": 120
        },
        "19": {
          "loc": {
            "start": {
              "line": 139,
              "column": 25
            },
            "end": {
              "line": 139,
              "column": 100
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 139,
                "column": 25
              },
              "end": {
                "line": 139,
                "column": 44
              }
            },
            {
              "start": {
                "line": 139,
                "column": 48
              },
              "end": {
                "line": 139,
                "column": 100
              }
            }
          ],
          "line": 139
        },
        "20": {
          "loc": {
            "start": {
              "line": 140,
              "column": 20
            },
            "end": {
              "line": 140,
              "column": 52
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 140,
                "column": 20
              },
              "end": {
                "line": 140,
                "column": 34
              }
            },
            {
              "start": {
                "line": 140,
                "column": 38
              },
              "end": {
                "line": 140,
                "column": 52
              }
            }
          ],
          "line": 140
        },
        "21": {
          "loc": {
            "start": {
              "line": 156,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 156,
                "column": 4
              },
              "end": {
                "line": 167,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 156
        },
        "22": {
          "loc": {
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 208,
              "column": 5
            }
          },
          "type": "switch",
          "locations": [
            {
              "start": {
                "line": 171,
                "column": 8
              },
              "end": {
                "line": 180,
                "column": 18
              }
            },
            {
              "start": {
                "line": 182,
                "column": 8
              },
              "end": {
                "line": 190,
                "column": 18
              }
            },
            {
              "start": {
                "line": 192,
                "column": 8
              },
              "end": {
                "line": 207,
                "column": 18
              }
            }
          ],
          "line": 170
        },
        "23": {
          "loc": {
            "start": {
              "line": 219,
              "column": 20
            },
            "end": {
              "line": 219,
              "column": 62
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 219,
                "column": 20
              },
              "end": {
                "line": 219,
                "column": 35
              }
            },
            {
              "start": {
                "line": 219,
                "column": 39
              },
              "end": {
                "line": 219,
                "column": 62
              }
            }
          ],
          "line": 219
        },
        "24": {
          "loc": {
            "start": {
              "line": 220,
              "column": 18
            },
            "end": {
              "line": 220,
              "column": 44
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 220,
                "column": 18
              },
              "end": {
                "line": 220,
                "column": 31
              }
            },
            {
              "start": {
                "line": 220,
                "column": 35
              },
              "end": {
                "line": 220,
                "column": 44
              }
            }
          ],
          "line": 220
        },
        "25": {
          "loc": {
            "start": {
              "line": 221,
              "column": 18
            },
            "end": {
              "line": 221,
              "column": 105
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 221,
                "column": 18
              },
              "end": {
                "line": 221,
                "column": 31
              }
            },
            {
              "start": {
                "line": 221,
                "column": 35
              },
              "end": {
                "line": 221,
                "column": 105
              }
            }
          ],
          "line": 221
        },
        "26": {
          "loc": {
            "start": {
              "line": 249,
              "column": 14
            },
            "end": {
              "line": 249,
              "column": 45
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 249,
                "column": 14
              },
              "end": {
                "line": 249,
                "column": 28
              }
            },
            {
              "start": {
                "line": 249,
                "column": 32
              },
              "end": {
                "line": 249,
                "column": 45
              }
            }
          ],
          "line": 249
        },
        "27": {
          "loc": {
            "start": {
              "line": 257,
              "column": 16
            },
            "end": {
              "line": 257,
              "column": 36
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 257,
                "column": 16
              },
              "end": {
                "line": 257,
                "column": 30
              }
            },
            {
              "start": {
                "line": 257,
                "column": 34
              },
              "end": {
                "line": 257,
                "column": 36
              }
            }
          ],
          "line": 257
        },
        "28": {
          "loc": {
            "start": {
              "line": 258,
              "column": 17
            },
            "end": {
              "line": 258,
              "column": 38
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 258,
                "column": 17
              },
              "end": {
                "line": 258,
                "column": 32
              }
            },
            {
              "start": {
                "line": 258,
                "column": 36
              },
              "end": {
                "line": 258,
                "column": 38
              }
            }
          ],
          "line": 258
        },
        "29": {
          "loc": {
            "start": {
              "line": 296,
              "column": 23
            },
            "end": {
              "line": 296,
              "column": 98
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 296,
                "column": 23
              },
              "end": {
                "line": 296,
                "column": 42
              }
            },
            {
              "start": {
                "line": 296,
                "column": 46
              },
              "end": {
                "line": 296,
                "column": 98
              }
            }
          ],
          "line": 296
        },
        "30": {
          "loc": {
            "start": {
              "line": 297,
              "column": 18
            },
            "end": {
              "line": 297,
              "column": 50
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 297,
                "column": 18
              },
              "end": {
                "line": 297,
                "column": 32
              }
            },
            {
              "start": {
                "line": 297,
                "column": 36
              },
              "end": {
                "line": 297,
                "column": 50
              }
            }
          ],
          "line": 297
        },
        "31": {
          "loc": {
            "start": {
              "line": 299,
              "column": 20
            },
            "end": {
              "line": 299,
              "column": 42
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 299,
                "column": 20
              },
              "end": {
                "line": 299,
                "column": 36
              }
            },
            {
              "start": {
                "line": 299,
                "column": 40
              },
              "end": {
                "line": 299,
                "column": 42
              }
            }
          ],
          "line": 299
        },
        "32": {
          "loc": {
            "start": {
              "line": 300,
              "column": 22
            },
            "end": {
              "line": 300,
              "column": 46
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 300,
                "column": 22
              },
              "end": {
                "line": 300,
                "column": 40
              }
            },
            {
              "start": {
                "line": 300,
                "column": 44
              },
              "end": {
                "line": 300,
                "column": 46
              }
            }
          ],
          "line": 300
        },
        "33": {
          "loc": {
            "start": {
              "line": 301,
              "column": 16
            },
            "end": {
              "line": 301,
              "column": 46
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 301,
                "column": 16
              },
              "end": {
                "line": 301,
                "column": 28
              }
            },
            {
              "start": {
                "line": 301,
                "column": 32
              },
              "end": {
                "line": 301,
                "column": 46
              }
            }
          ],
          "line": 301
        },
        "34": {
          "loc": {
            "start": {
              "line": 302,
              "column": 22
            },
            "end": {
              "line": 302,
              "column": 55
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 302,
                "column": 22
              },
              "end": {
                "line": 302,
                "column": 40
              }
            },
            {
              "start": {
                "line": 302,
                "column": 44
              },
              "end": {
                "line": 302,
                "column": 55
              }
            }
          ],
          "line": 302
        },
        "35": {
          "loc": {
            "start": {
              "line": 307,
              "column": 20
            },
            "end": {
              "line": 312,
              "column": 9
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 307,
                "column": 20
              },
              "end": {
                "line": 307,
                "column": 36
              }
            },
            {
              "start": {
                "line": 307,
                "column": 40
              },
              "end": {
                "line": 312,
                "column": 9
              }
            }
          ],
          "line": 307
        },
        "36": {
          "loc": {
            "start": {
              "line": 313,
              "column": 16
            },
            "end": {
              "line": 313,
              "column": 34
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 313,
                "column": 16
              },
              "end": {
                "line": 313,
                "column": 28
              }
            },
            {
              "start": {
                "line": 313,
                "column": 32
              },
              "end": {
                "line": 313,
                "column": 34
              }
            }
          ],
          "line": 313
        },
        "37": {
          "loc": {
            "start": {
              "line": 314,
              "column": 23
            },
            "end": {
              "line": 314,
              "column": 48
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 314,
                "column": 23
              },
              "end": {
                "line": 314,
                "column": 42
              }
            },
            {
              "start": {
                "line": 314,
                "column": 46
              },
              "end": {
                "line": 314,
                "column": 48
              }
            }
          ],
          "line": 314
        },
        "38": {
          "loc": {
            "start": {
              "line": 374,
              "column": 4
            },
            "end": {
              "line": 415,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 374,
                "column": 4
              },
              "end": {
                "line": 415,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 374
        },
        "39": {
          "loc": {
            "start": {
              "line": 439,
              "column": 4
            },
            "end": {
              "line": 453,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 439,
                "column": 4
              },
              "end": {
                "line": 453,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 439
        },
        "40": {
          "loc": {
            "start": {
              "line": 465,
              "column": 4
            },
            "end": {
              "line": 468,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 465,
                "column": 4
              },
              "end": {
                "line": 468,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 465
        },
        "41": {
          "loc": {
            "start": {
              "line": 479,
              "column": 8
            },
            "end": {
              "line": 482,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 479,
                "column": 8
              },
              "end": {
                "line": 482,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 479
        },
        "42": {
          "loc": {
            "start": {
              "line": 499,
              "column": 16
            },
            "end": {
              "line": 499,
              "column": 63
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 499,
                "column": 16
              },
              "end": {
                "line": 499,
                "column": 63
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 499
        },
        "43": {
          "loc": {
            "start": {
              "line": 500,
              "column": 16
            },
            "end": {
              "line": 500,
              "column": 125
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 500,
                "column": 16
              },
              "end": {
                "line": 500,
                "column": 125
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 500
        },
        "44": {
          "loc": {
            "start": {
              "line": 550,
              "column": 0
            },
            "end": {
              "line": 637,
              "column": 1
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 550,
                "column": 0
              },
              "end": {
                "line": 637,
                "column": 1
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 550
        },
        "45": {
          "loc": {
            "start": {
              "line": 553,
              "column": 4
            },
            "end": {
              "line": 581,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 553,
                "column": 4
              },
              "end": {
                "line": 581,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 553
        },
        "46": {
          "loc": {
            "start": {
              "line": 553,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 49
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 553,
                "column": 8
              },
              "end": {
                "line": 553,
                "column": 25
              }
            },
            {
              "start": {
                "line": 553,
                "column": 29
              },
              "end": {
                "line": 553,
                "column": 49
              }
            }
          ],
          "line": 553
        },
        "47": {
          "loc": {
            "start": {
              "line": 593,
              "column": 8
            },
            "end": {
              "line": 600,
              "column": 60
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 593,
                "column": 8
              },
              "end": {
                "line": 600,
                "column": 60
              }
            },
            {
              "start": {
                "line": 594,
                "column": 13
              },
              "end": {
                "line": 600,
                "column": 60
              }
            }
          ],
          "line": 593
        },
        "48": {
          "loc": {
            "start": {
              "line": 594,
              "column": 13
            },
            "end": {
              "line": 600,
              "column": 60
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 594,
                "column": 13
              },
              "end": {
                "line": 600,
                "column": 60
              }
            },
            {
              "start": {
                "line": 595,
                "column": 13
              },
              "end": {
                "line": 600,
                "column": 60
              }
            }
          ],
          "line": 594
        },
        "49": {
          "loc": {
            "start": {
              "line": 595,
              "column": 13
            },
            "end": {
              "line": 600,
              "column": 60
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 595,
                "column": 13
              },
              "end": {
                "line": 600,
                "column": 60
              }
            },
            {
              "start": {
                "line": 596,
                "column": 13
              },
              "end": {
                "line": 600,
                "column": 60
              }
            }
          ],
          "line": 595
        },
        "50": {
          "loc": {
            "start": {
              "line": 596,
              "column": 13
            },
            "end": {
              "line": 600,
              "column": 60
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 596,
                "column": 13
              },
              "end": {
                "line": 600,
                "column": 60
              }
            },
            {
              "start": {
                "line": 597,
                "column": 13
              },
              "end": {
                "line": 600,
                "column": 60
              }
            }
          ],
          "line": 596
        },
        "51": {
          "loc": {
            "start": {
              "line": 597,
              "column": 13
            },
            "end": {
              "line": 600,
              "column": 60
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 597,
                "column": 13
              },
              "end": {
                "line": 600,
                "column": 60
              }
            },
            {
              "start": {
                "line": 598,
                "column": 13
              },
              "end": {
                "line": 600,
                "column": 60
              }
            }
          ],
          "line": 597
        },
        "52": {
          "loc": {
            "start": {
              "line": 598,
              "column": 13
            },
            "end": {
              "line": 600,
              "column": 60
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 598,
                "column": 13
              },
              "end": {
                "line": 600,
                "column": 60
              }
            },
            {
              "start": {
                "line": 599,
                "column": 13
              },
              "end": {
                "line": 600,
                "column": 60
              }
            }
          ],
          "line": 598
        },
        "53": {
          "loc": {
            "start": {
              "line": 599,
              "column": 13
            },
            "end": {
              "line": 600,
              "column": 60
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 599,
                "column": 13
              },
              "end": {
                "line": 600,
                "column": 60
              }
            },
            {
              "start": {
                "line": 600,
                "column": 13
              },
              "end": {
                "line": 600,
                "column": 60
              }
            }
          ],
          "line": 599
        },
        "54": {
          "loc": {
            "start": {
              "line": 600,
              "column": 13
            },
            "end": {
              "line": 600,
              "column": 60
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 600,
                "column": 13
              },
              "end": {
                "line": 600,
                "column": 60
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 600
        },
        "55": {
          "loc": {
            "start": {
              "line": 605,
              "column": 12
            },
            "end": {
              "line": 629,
              "column": 13
            }
          },
          "type": "switch",
          "locations": [
            {
              "start": {
                "line": 606,
                "column": 16
              },
              "end": {
                "line": 612,
                "column": 26
              }
            },
            {
              "start": {
                "line": 614,
                "column": 16
              },
              "end": {
                "line": 620,
                "column": 26
              }
            },
            {
              "start": {
                "line": 622,
                "column": 16
              },
              "end": {
                "line": 624,
                "column": 26
              }
            },
            {
              "start": {
                "line": 626,
                "column": 16
              },
              "end": {
                "line": 628,
                "column": 36
              }
            }
          ],
          "line": 605
        },
        "56": {
          "loc": {
            "start": {
              "line": 607,
              "column": 20
            },
            "end": {
              "line": 610,
              "column": 21
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 607,
                "column": 20
              },
              "end": {
                "line": 610,
                "column": 21
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 607
        },
        "57": {
          "loc": {
            "start": {
              "line": 615,
              "column": 20
            },
            "end": {
              "line": 618,
              "column": 21
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 615,
                "column": 20
              },
              "end": {
                "line": 618,
                "column": 21
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 615
        }
      },
      "s": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 0,
        "104": 0,
        "105": 0,
        "106": 0,
        "107": 0,
        "108": 0,
        "109": 0,
        "110": 0,
        "111": 0,
        "112": 0,
        "113": 0,
        "114": 0,
        "115": 0,
        "116": 0,
        "117": 0,
        "118": 0,
        "119": 0,
        "120": 0,
        "121": 0,
        "122": 0,
        "123": 0,
        "124": 0,
        "125": 0,
        "126": 0,
        "127": 0,
        "128": 0,
        "129": 0,
        "130": 0,
        "131": 0,
        "132": 0,
        "133": 0,
        "134": 0,
        "135": 0,
        "136": 0,
        "137": 0,
        "138": 0,
        "139": 0,
        "140": 0,
        "141": 0,
        "142": 0,
        "143": 0,
        "144": 0,
        "145": 0,
        "146": 0,
        "147": 0,
        "148": 0,
        "149": 0,
        "150": 0,
        "151": 0,
        "152": 0,
        "153": 0,
        "154": 0,
        "155": 0,
        "156": 0,
        "157": 0,
        "158": 0,
        "159": 0
      },
      "f": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0
      },
      "b": {
        "0": [
          0
        ],
        "1": [
          0,
          0
        ],
        "2": [
          0,
          0
        ],
        "3": [
          0,
          0
        ],
        "4": [
          0,
          0
        ],
        "5": [
          0,
          0
        ],
        "6": [
          0,
          0
        ],
        "7": [
          0
        ],
        "8": [
          0,
          0
        ],
        "9": [
          0,
          0
        ],
        "10": [
          0,
          0
        ],
        "11": [
          0,
          0
        ],
        "12": [
          0,
          0
        ],
        "13": [
          0,
          0
        ],
        "14": [
          0,
          0
        ],
        "15": [
          0,
          0
        ],
        "16": [
          0,
          0
        ],
        "17": [
          0,
          0,
          0
        ],
        "18": [
          0,
          0
        ],
        "19": [
          0,
          0
        ],
        "20": [
          0,
          0
        ],
        "21": [
          0,
          0
        ],
        "22": [
          0,
          0,
          0
        ],
        "23": [
          0,
          0
        ],
        "24": [
          0,
          0
        ],
        "25": [
          0,
          0
        ],
        "26": [
          0,
          0
        ],
        "27": [
          0,
          0
        ],
        "28": [
          0,
          0
        ],
        "29": [
          0,
          0
        ],
        "30": [
          0,
          0
        ],
        "31": [
          0,
          0
        ],
        "32": [
          0,
          0
        ],
        "33": [
          0,
          0
        ],
        "34": [
          0,
          0
        ],
        "35": [
          0,
          0
        ],
        "36": [
          0,
          0
        ],
        "37": [
          0,
          0
        ],
        "38": [
          0,
          0
        ],
        "39": [
          0,
          0
        ],
        "40": [
          0,
          0
        ],
        "41": [
          0,
          0
        ],
        "42": [
          0,
          0
        ],
        "43": [
          0,
          0
        ],
        "44": [
          0,
          0
        ],
        "45": [
          0,
          0
        ],
        "46": [
          0,
          0
        ],
        "47": [
          0,
          0
        ],
        "48": [
          0,
          0
        ],
        "49": [
          0,
          0
        ],
        "50": [
          0,
          0
        ],
        "51": [
          0,
          0
        ],
        "52": [
          0,
          0
        ],
        "53": [
          0,
          0
        ],
        "54": [
          0,
          0
        ],
        "55": [
          0,
          0,
          0,
          0
        ],
        "56": [
          0,
          0
        ],
        "57": [
          0,
          0
        ]
      }
    },
    "/root/info-tech-io/hugo-templates/scripts/list.js": {
      "path": "/root/info-tech-io/hugo-templates/scripts/list.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 8,
            "column": 11
          },
          "end": {
            "line": 8,
            "column": 30
          }
        },
        "1": {
          "start": {
            "line": 9,
            "column": 13
          },
          "end": {
            "line": 9,
            "column": 28
          }
        },
        "2": {
          "start": {
            "line": 10,
            "column": 13
          },
          "end": {
            "line": 10,
            "column": 28
          }
        },
        "3": {
          "start": {
            "line": 11,
            "column": 14
          },
          "end": {
            "line": 11,
            "column": 30
          }
        },
        "4": {
          "start": {
            "line": 18,
            "column": 24
          },
          "end": {
            "line": 18,
            "column": 73
          }
        },
        "5": {
          "start": {
            "line": 19,
            "column": 25
          },
          "end": {
            "line": 19,
            "column": 60
          }
        },
        "6": {
          "start": {
            "line": 21,
            "column": 4
          },
          "end": {
            "line": 24,
            "column": 5
          }
        },
        "7": {
          "start": {
            "line": 22,
            "column": 8
          },
          "end": {
            "line": 22,
            "column": 66
          }
        },
        "8": {
          "start": {
            "line": 23,
            "column": 8
          },
          "end": {
            "line": 23,
            "column": 18
          }
        },
        "9": {
          "start": {
            "line": 26,
            "column": 22
          },
          "end": {
            "line": 28,
            "column": 15
          }
        },
        "10": {
          "start": {
            "line": 27,
            "column": 24
          },
          "end": {
            "line": 27,
            "column": 81
          }
        },
        "11": {
          "start": {
            "line": 30,
            "column": 4
          },
          "end": {
            "line": 39,
            "column": 5
          }
        },
        "12": {
          "start": {
            "line": 31,
            "column": 29
          },
          "end": {
            "line": 31,
            "column": 31
          }
        },
        "13": {
          "start": {
            "line": 32,
            "column": 8
          },
          "end": {
            "line": 36,
            "column": 9
          }
        },
        "14": {
          "start": {
            "line": 33,
            "column": 33
          },
          "end": {
            "line": 33,
            "column": 66
          }
        },
        "15": {
          "start": {
            "line": 34,
            "column": 25
          },
          "end": {
            "line": 34,
            "column": 60
          }
        },
        "16": {
          "start": {
            "line": 35,
            "column": 12
          },
          "end": {
            "line": 35,
            "column": 36
          }
        },
        "17": {
          "start": {
            "line": 37,
            "column": 8
          },
          "end": {
            "line": 37,
            "column": 59
          }
        },
        "18": {
          "start": {
            "line": 38,
            "column": 8
          },
          "end": {
            "line": 38,
            "column": 28
          }
        },
        "19": {
          "start": {
            "line": 41,
            "column": 4
          },
          "end": {
            "line": 41,
            "column": 55
          }
        },
        "20": {
          "start": {
            "line": 42,
            "column": 4
          },
          "end": {
            "line": 42,
            "column": 44
          }
        },
        "21": {
          "start": {
            "line": 44,
            "column": 4
          },
          "end": {
            "line": 47,
            "column": 5
          }
        },
        "22": {
          "start": {
            "line": 45,
            "column": 8
          },
          "end": {
            "line": 45,
            "column": 59
          }
        },
        "23": {
          "start": {
            "line": 46,
            "column": 8
          },
          "end": {
            "line": 46,
            "column": 18
          }
        },
        "24": {
          "start": {
            "line": 49,
            "column": 4
          },
          "end": {
            "line": 89,
            "column": 5
          }
        },
        "25": {
          "start": {
            "line": 50,
            "column": 29
          },
          "end": {
            "line": 50,
            "column": 62
          }
        },
        "26": {
          "start": {
            "line": 51,
            "column": 21
          },
          "end": {
            "line": 51,
            "column": 56
          }
        },
        "27": {
          "start": {
            "line": 54,
            "column": 27
          },
          "end": {
            "line": 54,
            "column": 53
          }
        },
        "28": {
          "start": {
            "line": 55,
            "column": 8
          },
          "end": {
            "line": 55,
            "column": 76
          }
        },
        "29": {
          "start": {
            "line": 58,
            "column": 8
          },
          "end": {
            "line": 60,
            "column": 9
          }
        },
        "30": {
          "start": {
            "line": 59,
            "column": 12
          },
          "end": {
            "line": 59,
            "column": 62
          }
        },
        "31": {
          "start": {
            "line": 63,
            "column": 25
          },
          "end": {
            "line": 63,
            "column": 27
          }
        },
        "32": {
          "start": {
            "line": 64,
            "column": 8
          },
          "end": {
            "line": 64,
            "column": 60
          }
        },
        "33": {
          "start": {
            "line": 64,
            "column": 26
          },
          "end": {
            "line": 64,
            "column": 60
          }
        },
        "34": {
          "start": {
            "line": 65,
            "column": 8
          },
          "end": {
            "line": 65,
            "column": 60
          }
        },
        "35": {
          "start": {
            "line": 65,
            "column": 25
          },
          "end": {
            "line": 65,
            "column": 60
          }
        },
        "36": {
          "start": {
            "line": 66,
            "column": 8
          },
          "end": {
            "line": 68,
            "column": 9
          }
        },
        "37": {
          "start": {
            "line": 67,
            "column": 12
          },
          "end": {
            "line": 67,
            "column": 66
          }
        },
        "38": {
          "start": {
            "line": 71,
            "column": 8
          },
          "end": {
            "line": 73,
            "column": 9
          }
        },
        "39": {
          "start": {
            "line": 72,
            "column": 12
          },
          "end": {
            "line": 72,
            "column": 80
          }
        },
        "40": {
          "start": {
            "line": 76,
            "column": 8
          },
          "end": {
            "line": 81,
            "column": 9
          }
        },
        "41": {
          "start": {
            "line": 77,
            "column": 12
          },
          "end": {
            "line": 77,
            "column": 95
          }
        },
        "42": {
          "start": {
            "line": 78,
            "column": 12
          },
          "end": {
            "line": 80,
            "column": 13
          }
        },
        "43": {
          "start": {
            "line": 79,
            "column": 16
          },
          "end": {
            "line": 79,
            "column": 88
          }
        },
        "44": {
          "start": {
            "line": 84,
            "column": 8
          },
          "end": {
            "line": 88,
            "column": 9
          }
        },
        "45": {
          "start": {
            "line": 85,
            "column": 12
          },
          "end": {
            "line": 85,
            "column": 85
          }
        },
        "46": {
          "start": {
            "line": 86,
            "column": 15
          },
          "end": {
            "line": 88,
            "column": 9
          }
        },
        "47": {
          "start": {
            "line": 87,
            "column": 12
          },
          "end": {
            "line": 87,
            "column": 96
          }
        },
        "48": {
          "start": {
            "line": 91,
            "column": 4
          },
          "end": {
            "line": 91,
            "column": 84
          }
        },
        "49": {
          "start": {
            "line": 92,
            "column": 4
          },
          "end": {
            "line": 92,
            "column": 21
          }
        },
        "50": {
          "start": {
            "line": 100,
            "column": 24
          },
          "end": {
            "line": 100,
            "column": 73
          }
        },
        "51": {
          "start": {
            "line": 101,
            "column": 22
          },
          "end": {
            "line": 101,
            "column": 54
          }
        },
        "52": {
          "start": {
            "line": 103,
            "column": 4
          },
          "end": {
            "line": 106,
            "column": 5
          }
        },
        "53": {
          "start": {
            "line": 104,
            "column": 8
          },
          "end": {
            "line": 104,
            "column": 63
          }
        },
        "54": {
          "start": {
            "line": 105,
            "column": 8
          },
          "end": {
            "line": 105,
            "column": 18
          }
        },
        "55": {
          "start": {
            "line": 108,
            "column": 19
          },
          "end": {
            "line": 110,
            "column": 15
          }
        },
        "56": {
          "start": {
            "line": 109,
            "column": 24
          },
          "end": {
            "line": 109,
            "column": 78
          }
        },
        "57": {
          "start": {
            "line": 112,
            "column": 4
          },
          "end": {
            "line": 121,
            "column": 5
          }
        },
        "58": {
          "start": {
            "line": 113,
            "column": 26
          },
          "end": {
            "line": 113,
            "column": 28
          }
        },
        "59": {
          "start": {
            "line": 114,
            "column": 8
          },
          "end": {
            "line": 118,
            "column": 9
          }
        },
        "60": {
          "start": {
            "line": 115,
            "column": 30
          },
          "end": {
            "line": 115,
            "column": 57
          }
        },
        "61": {
          "start": {
            "line": 116,
            "column": 25
          },
          "end": {
            "line": 116,
            "column": 54
          }
        },
        "62": {
          "start": {
            "line": 117,
            "column": 12
          },
          "end": {
            "line": 117,
            "column": 33
          }
        },
        "63": {
          "start": {
            "line": 119,
            "column": 8
          },
          "end": {
            "line": 119,
            "column": 56
          }
        },
        "64": {
          "start": {
            "line": 120,
            "column": 8
          },
          "end": {
            "line": 120,
            "column": 25
          }
        },
        "65": {
          "start": {
            "line": 123,
            "column": 4
          },
          "end": {
            "line": 123,
            "column": 52
          }
        },
        "66": {
          "start": {
            "line": 124,
            "column": 4
          },
          "end": {
            "line": 124,
            "column": 44
          }
        },
        "67": {
          "start": {
            "line": 126,
            "column": 4
          },
          "end": {
            "line": 129,
            "column": 5
          }
        },
        "68": {
          "start": {
            "line": 127,
            "column": 8
          },
          "end": {
            "line": 127,
            "column": 56
          }
        },
        "69": {
          "start": {
            "line": 128,
            "column": 8
          },
          "end": {
            "line": 128,
            "column": 18
          }
        },
        "70": {
          "start": {
            "line": 131,
            "column": 4
          },
          "end": {
            "line": 156,
            "column": 5
          }
        },
        "71": {
          "start": {
            "line": 132,
            "column": 26
          },
          "end": {
            "line": 132,
            "column": 53
          }
        },
        "72": {
          "start": {
            "line": 133,
            "column": 21
          },
          "end": {
            "line": 133,
            "column": 50
          }
        },
        "73": {
          "start": {
            "line": 135,
            "column": 8
          },
          "end": {
            "line": 135,
            "column": 62
          }
        },
        "74": {
          "start": {
            "line": 137,
            "column": 8
          },
          "end": {
            "line": 139,
            "column": 9
          }
        },
        "75": {
          "start": {
            "line": 138,
            "column": 12
          },
          "end": {
            "line": 138,
            "column": 62
          }
        },
        "76": {
          "start": {
            "line": 141,
            "column": 8
          },
          "end": {
            "line": 143,
            "column": 9
          }
        },
        "77": {
          "start": {
            "line": 142,
            "column": 12
          },
          "end": {
            "line": 142,
            "column": 67
          }
        },
        "78": {
          "start": {
            "line": 145,
            "column": 8
          },
          "end": {
            "line": 147,
            "column": 9
          }
        },
        "79": {
          "start": {
            "line": 146,
            "column": 12
          },
          "end": {
            "line": 146,
            "column": 62
          }
        },
        "80": {
          "start": {
            "line": 149,
            "column": 8
          },
          "end": {
            "line": 151,
            "column": 9
          }
        },
        "81": {
          "start": {
            "line": 150,
            "column": 12
          },
          "end": {
            "line": 150,
            "column": 73
          }
        },
        "82": {
          "start": {
            "line": 153,
            "column": 8
          },
          "end": {
            "line": 155,
            "column": 9
          }
        },
        "83": {
          "start": {
            "line": 154,
            "column": 12
          },
          "end": {
            "line": 154,
            "column": 78
          }
        },
        "84": {
          "start": {
            "line": 158,
            "column": 4
          },
          "end": {
            "line": 158,
            "column": 78
          }
        },
        "85": {
          "start": {
            "line": 159,
            "column": 4
          },
          "end": {
            "line": 159,
            "column": 18
          }
        },
        "86": {
          "start": {
            "line": 167,
            "column": 24
          },
          "end": {
            "line": 167,
            "column": 73
          }
        },
        "87": {
          "start": {
            "line": 168,
            "column": 26
          },
          "end": {
            "line": 168,
            "column": 62
          }
        },
        "88": {
          "start": {
            "line": 169,
            "column": 25
          },
          "end": {
            "line": 169,
            "column": 60
          }
        },
        "89": {
          "start": {
            "line": 172,
            "column": 26
          },
          "end": {
            "line": 172,
            "column": 35
          }
        },
        "90": {
          "start": {
            "line": 175,
            "column": 4
          },
          "end": {
            "line": 187,
            "column": 5
          }
        },
        "91": {
          "start": {
            "line": 176,
            "column": 27
          },
          "end": {
            "line": 177,
            "column": 87
          }
        },
        "92": {
          "start": {
            "line": 177,
            "column": 28
          },
          "end": {
            "line": 177,
            "column": 86
          }
        },
        "93": {
          "start": {
            "line": 179,
            "column": 8
          },
          "end": {
            "line": 186,
            "column": 9
          }
        },
        "94": {
          "start": {
            "line": 180,
            "column": 12
          },
          "end": {
            "line": 185,
            "column": 15
          }
        },
        "95": {
          "start": {
            "line": 190,
            "column": 4
          },
          "end": {
            "line": 219,
            "column": 5
          }
        },
        "96": {
          "start": {
            "line": 191,
            "column": 26
          },
          "end": {
            "line": 192,
            "column": 86
          }
        },
        "97": {
          "start": {
            "line": 192,
            "column": 28
          },
          "end": {
            "line": 192,
            "column": 85
          }
        },
        "98": {
          "start": {
            "line": 194,
            "column": 8
          },
          "end": {
            "line": 218,
            "column": 9
          }
        },
        "99": {
          "start": {
            "line": 195,
            "column": 34
          },
          "end": {
            "line": 195,
            "column": 85
          }
        },
        "100": {
          "start": {
            "line": 196,
            "column": 12
          },
          "end": {
            "line": 217,
            "column": 13
          }
        },
        "101": {
          "start": {
            "line": 197,
            "column": 16
          },
          "end": {
            "line": 216,
            "column": 17
          }
        },
        "102": {
          "start": {
            "line": 198,
            "column": 36
          },
          "end": {
            "line": 198,
            "column": 74
          }
        },
        "103": {
          "start": {
            "line": 199,
            "column": 35
          },
          "end": {
            "line": 199,
            "column": 54
          }
        },
        "104": {
          "start": {
            "line": 201,
            "column": 20
          },
          "end": {
            "line": 213,
            "column": 21
          }
        },
        "105": {
          "start": {
            "line": 202,
            "column": 24
          },
          "end": {
            "line": 212,
            "column": 25
          }
        },
        "106": {
          "start": {
            "line": 203,
            "column": 28
          },
          "end": {
            "line": 210,
            "column": 29
          }
        },
        "107": {
          "start": {
            "line": 204,
            "column": 32
          },
          "end": {
            "line": 209,
            "column": 35
          }
        },
        "108": {
          "start": {
            "line": 211,
            "column": 28
          },
          "end": {
            "line": 211,
            "column": 83
          }
        },
        "109": {
          "start": {
            "line": 221,
            "column": 23
          },
          "end": {
            "line": 221,
            "column": 102
          }
        },
        "110": {
          "start": {
            "line": 221,
            "column": 73
          },
          "end": {
            "line": 221,
            "column": 101
          }
        },
        "111": {
          "start": {
            "line": 223,
            "column": 4
          },
          "end": {
            "line": 226,
            "column": 5
          }
        },
        "112": {
          "start": {
            "line": 224,
            "column": 8
          },
          "end": {
            "line": 224,
            "column": 57
          }
        },
        "113": {
          "start": {
            "line": 225,
            "column": 8
          },
          "end": {
            "line": 225,
            "column": 26
          }
        },
        "114": {
          "start": {
            "line": 228,
            "column": 4
          },
          "end": {
            "line": 228,
            "column": 56
          }
        },
        "115": {
          "start": {
            "line": 229,
            "column": 4
          },
          "end": {
            "line": 229,
            "column": 44
          }
        },
        "116": {
          "start": {
            "line": 231,
            "column": 4
          },
          "end": {
            "line": 234,
            "column": 5
          }
        },
        "117": {
          "start": {
            "line": 232,
            "column": 8
          },
          "end": {
            "line": 232,
            "column": 60
          }
        },
        "118": {
          "start": {
            "line": 233,
            "column": 8
          },
          "end": {
            "line": 233,
            "column": 18
          }
        },
        "119": {
          "start": {
            "line": 236,
            "column": 4
          },
          "end": {
            "line": 278,
            "column": 5
          }
        },
        "120": {
          "start": {
            "line": 237,
            "column": 23
          },
          "end": {
            "line": 237,
            "column": 45
          }
        },
        "121": {
          "start": {
            "line": 238,
            "column": 27
          },
          "end": {
            "line": 238,
            "column": 68
          }
        },
        "122": {
          "start": {
            "line": 240,
            "column": 8
          },
          "end": {
            "line": 240,
            "column": 82
          }
        },
        "123": {
          "start": {
            "line": 242,
            "column": 8
          },
          "end": {
            "line": 244,
            "column": 9
          }
        },
        "124": {
          "start": {
            "line": 243,
            "column": 12
          },
          "end": {
            "line": 243,
            "column": 64
          }
        },
        "125": {
          "start": {
            "line": 247,
            "column": 25
          },
          "end": {
            "line": 247,
            "column": 27
          }
        },
        "126": {
          "start": {
            "line": 248,
            "column": 8
          },
          "end": {
            "line": 248,
            "column": 64
          }
        },
        "127": {
          "start": {
            "line": 248,
            "column": 28
          },
          "end": {
            "line": 248,
            "column": 64
          }
        },
        "128": {
          "start": {
            "line": 249,
            "column": 8
          },
          "end": {
            "line": 249,
            "column": 56
          }
        },
        "129": {
          "start": {
            "line": 249,
            "column": 27
          },
          "end": {
            "line": 249,
            "column": 56
          }
        },
        "130": {
          "start": {
            "line": 250,
            "column": 8
          },
          "end": {
            "line": 252,
            "column": 9
          }
        },
        "131": {
          "start": {
            "line": 251,
            "column": 12
          },
          "end": {
            "line": 251,
            "column": 66
          }
        },
        "132": {
          "start": {
            "line": 255,
            "column": 8
          },
          "end": {
            "line": 259,
            "column": 9
          }
        },
        "133": {
          "start": {
            "line": 256,
            "column": 12
          },
          "end": {
            "line": 256,
            "column": 66
          }
        },
        "134": {
          "start": {
            "line": 258,
            "column": 12
          },
          "end": {
            "line": 258,
            "column": 72
          }
        },
        "135": {
          "start": {
            "line": 262,
            "column": 8
          },
          "end": {
            "line": 264,
            "column": 9
          }
        },
        "136": {
          "start": {
            "line": 263,
            "column": 12
          },
          "end": {
            "line": 263,
            "column": 86
          }
        },
        "137": {
          "start": {
            "line": 267,
            "column": 8
          },
          "end": {
            "line": 269,
            "column": 9
          }
        },
        "138": {
          "start": {
            "line": 268,
            "column": 12
          },
          "end": {
            "line": 268,
            "column": 66
          }
        },
        "139": {
          "start": {
            "line": 272,
            "column": 8
          },
          "end": {
            "line": 277,
            "column": 9
          }
        },
        "140": {
          "start": {
            "line": 273,
            "column": 12
          },
          "end": {
            "line": 273,
            "column": 100
          }
        },
        "141": {
          "start": {
            "line": 274,
            "column": 12
          },
          "end": {
            "line": 276,
            "column": 13
          }
        },
        "142": {
          "start": {
            "line": 275,
            "column": 16
          },
          "end": {
            "line": 275,
            "column": 95
          }
        },
        "143": {
          "start": {
            "line": 280,
            "column": 4
          },
          "end": {
            "line": 280,
            "column": 86
          }
        },
        "144": {
          "start": {
            "line": 281,
            "column": 4
          },
          "end": {
            "line": 281,
            "column": 22
          }
        },
        "145": {
          "start": {
            "line": 289,
            "column": 17
          },
          "end": {
            "line": 289,
            "column": 44
          }
        },
        "146": {
          "start": {
            "line": 290,
            "column": 17
          },
          "end": {
            "line": 298,
            "column": 5
          }
        },
        "147": {
          "start": {
            "line": 301,
            "column": 26
          },
          "end": {
            "line": 301,
            "column": 77
          }
        },
        "148": {
          "start": {
            "line": 302,
            "column": 26
          },
          "end": {
            "line": 302,
            "column": 82
          }
        },
        "149": {
          "start": {
            "line": 303,
            "column": 23
          },
          "end": {
            "line": 303,
            "column": 72
          }
        },
        "150": {
          "start": {
            "line": 306,
            "column": 4
          },
          "end": {
            "line": 312,
            "column": 5
          }
        },
        "151": {
          "start": {
            "line": 307,
            "column": 8
          },
          "end": {
            "line": 307,
            "column": 30
          }
        },
        "152": {
          "start": {
            "line": 308,
            "column": 11
          },
          "end": {
            "line": 312,
            "column": 5
          }
        },
        "153": {
          "start": {
            "line": 309,
            "column": 8
          },
          "end": {
            "line": 309,
            "column": 35
          }
        },
        "154": {
          "start": {
            "line": 311,
            "column": 8
          },
          "end": {
            "line": 311,
            "column": 30
          }
        },
        "155": {
          "start": {
            "line": 315,
            "column": 26
          },
          "end": {
            "line": 315,
            "column": 67
          }
        },
        "156": {
          "start": {
            "line": 316,
            "column": 4
          },
          "end": {
            "line": 334,
            "column": 5
          }
        },
        "157": {
          "start": {
            "line": 317,
            "column": 8
          },
          "end": {
            "line": 333,
            "column": 9
          }
        },
        "158": {
          "start": {
            "line": 318,
            "column": 28
          },
          "end": {
            "line": 318,
            "column": 66
          }
        },
        "159": {
          "start": {
            "line": 319,
            "column": 27
          },
          "end": {
            "line": 319,
            "column": 46
          }
        },
        "160": {
          "start": {
            "line": 321,
            "column": 12
          },
          "end": {
            "line": 326,
            "column": 13
          }
        },
        "161": {
          "start": {
            "line": 322,
            "column": 16
          },
          "end": {
            "line": 322,
            "column": 55
          }
        },
        "162": {
          "start": {
            "line": 323,
            "column": 16
          },
          "end": {
            "line": 323,
            "column": 63
          }
        },
        "163": {
          "start": {
            "line": 324,
            "column": 16
          },
          "end": {
            "line": 324,
            "column": 53
          }
        },
        "164": {
          "start": {
            "line": 325,
            "column": 16
          },
          "end": {
            "line": 325,
            "column": 63
          }
        },
        "165": {
          "start": {
            "line": 328,
            "column": 12
          },
          "end": {
            "line": 330,
            "column": 13
          }
        },
        "166": {
          "start": {
            "line": 329,
            "column": 16
          },
          "end": {
            "line": 329,
            "column": 77
          }
        },
        "167": {
          "start": {
            "line": 336,
            "column": 4
          },
          "end": {
            "line": 336,
            "column": 16
          }
        },
        "168": {
          "start": {
            "line": 344,
            "column": 17
          },
          "end": {
            "line": 344,
            "column": 41
          }
        },
        "169": {
          "start": {
            "line": 345,
            "column": 17
          },
          "end": {
            "line": 353,
            "column": 5
          }
        },
        "170": {
          "start": {
            "line": 356,
            "column": 4
          },
          "end": {
            "line": 359,
            "column": 5
          }
        },
        "171": {
          "start": {
            "line": 357,
            "column": 8
          },
          "end": {
            "line": 357,
            "column": 34
          }
        },
        "172": {
          "start": {
            "line": 358,
            "column": 8
          },
          "end": {
            "line": 358,
            "column": 64
          }
        },
        "173": {
          "start": {
            "line": 362,
            "column": 28
          },
          "end": {
            "line": 362,
            "column": 70
          }
        },
        "174": {
          "start": {
            "line": 363,
            "column": 4
          },
          "end": {
            "line": 381,
            "column": 5
          }
        },
        "175": {
          "start": {
            "line": 364,
            "column": 27
          },
          "end": {
            "line": 364,
            "column": 59
          }
        },
        "176": {
          "start": {
            "line": 365,
            "column": 8
          },
          "end": {
            "line": 380,
            "column": 9
          }
        },
        "177": {
          "start": {
            "line": 366,
            "column": 12
          },
          "end": {
            "line": 379,
            "column": 13
          }
        },
        "178": {
          "start": {
            "line": 367,
            "column": 32
          },
          "end": {
            "line": 367,
            "column": 67
          }
        },
        "179": {
          "start": {
            "line": 369,
            "column": 34
          },
          "end": {
            "line": 369,
            "column": 78
          }
        },
        "180": {
          "start": {
            "line": 370,
            "column": 34
          },
          "end": {
            "line": 370,
            "column": 85
          }
        },
        "181": {
          "start": {
            "line": 371,
            "column": 38
          },
          "end": {
            "line": 371,
            "column": 86
          }
        },
        "182": {
          "start": {
            "line": 373,
            "column": 16
          },
          "end": {
            "line": 373,
            "column": 56
          }
        },
        "183": {
          "start": {
            "line": 373,
            "column": 31
          },
          "end": {
            "line": 373,
            "column": 56
          }
        },
        "184": {
          "start": {
            "line": 374,
            "column": 16
          },
          "end": {
            "line": 374,
            "column": 63
          }
        },
        "185": {
          "start": {
            "line": 374,
            "column": 31
          },
          "end": {
            "line": 374,
            "column": 63
          }
        },
        "186": {
          "start": {
            "line": 375,
            "column": 16
          },
          "end": {
            "line": 375,
            "column": 68
          }
        },
        "187": {
          "start": {
            "line": 375,
            "column": 35
          },
          "end": {
            "line": 375,
            "column": 68
          }
        },
        "188": {
          "start": {
            "line": 376,
            "column": 16
          },
          "end": {
            "line": 376,
            "column": 22
          }
        },
        "189": {
          "start": {
            "line": 383,
            "column": 4
          },
          "end": {
            "line": 383,
            "column": 16
          }
        },
        "190": {
          "start": {
            "line": 391,
            "column": 18
          },
          "end": {
            "line": 400,
            "column": 5
          }
        },
        "191": {
          "start": {
            "line": 401,
            "column": 4
          },
          "end": {
            "line": 401,
            "column": 32
          }
        },
        "192": {
          "start": {
            "line": 410,
            "column": 16
          },
          "end": {
            "line": 410,
            "column": 18
          }
        },
        "193": {
          "start": {
            "line": 412,
            "column": 4
          },
          "end": {
            "line": 423,
            "column": 5
          }
        },
        "194": {
          "start": {
            "line": 414,
            "column": 12
          },
          "end": {
            "line": 414,
            "column": 73
          }
        },
        "195": {
          "start": {
            "line": 415,
            "column": 12
          },
          "end": {
            "line": 415,
            "column": 18
          }
        },
        "196": {
          "start": {
            "line": 417,
            "column": 12
          },
          "end": {
            "line": 417,
            "column": 70
          }
        },
        "197": {
          "start": {
            "line": 418,
            "column": 12
          },
          "end": {
            "line": 418,
            "column": 18
          }
        },
        "198": {
          "start": {
            "line": 420,
            "column": 31
          },
          "end": {
            "line": 420,
            "column": 84
          }
        },
        "199": {
          "start": {
            "line": 421,
            "column": 12
          },
          "end": {
            "line": 421,
            "column": 48
          }
        },
        "200": {
          "start": {
            "line": 421,
            "column": 40
          },
          "end": {
            "line": 421,
            "column": 46
          }
        },
        "201": {
          "start": {
            "line": 422,
            "column": 12
          },
          "end": {
            "line": 422,
            "column": 18
          }
        },
        "202": {
          "start": {
            "line": 425,
            "column": 4
          },
          "end": {
            "line": 431,
            "column": 5
          }
        },
        "203": {
          "start": {
            "line": 426,
            "column": 8
          },
          "end": {
            "line": 426,
            "column": 37
          }
        },
        "204": {
          "start": {
            "line": 427,
            "column": 11
          },
          "end": {
            "line": 431,
            "column": 5
          }
        },
        "205": {
          "start": {
            "line": 428,
            "column": 8
          },
          "end": {
            "line": 428,
            "column": 62
          }
        },
        "206": {
          "start": {
            "line": 428,
            "column": 30
          },
          "end": {
            "line": 428,
            "column": 60
          }
        },
        "207": {
          "start": {
            "line": 430,
            "column": 8
          },
          "end": {
            "line": 430,
            "column": 49
          }
        },
        "208": {
          "start": {
            "line": 430,
            "column": 30
          },
          "end": {
            "line": 430,
            "column": 47
          }
        },
        "209": {
          "start": {
            "line": 433,
            "column": 4
          },
          "end": {
            "line": 433,
            "column": 17
          }
        },
        "210": {
          "start": {
            "line": 437,
            "column": 0
          },
          "end": {
            "line": 511,
            "column": 1
          }
        },
        "211": {
          "start": {
            "line": 438,
            "column": 17
          },
          "end": {
            "line": 438,
            "column": 38
          }
        },
        "212": {
          "start": {
            "line": 440,
            "column": 20
          },
          "end": {
            "line": 443,
            "column": 5
          }
        },
        "213": {
          "start": {
            "line": 445,
            "column": 18
          },
          "end": {
            "line": 445,
            "column": 23
          }
        },
        "214": {
          "start": {
            "line": 448,
            "column": 4
          },
          "end": {
            "line": 481,
            "column": 5
          }
        },
        "215": {
          "start": {
            "line": 448,
            "column": 17
          },
          "end": {
            "line": 448,
            "column": 18
          }
        },
        "216": {
          "start": {
            "line": 449,
            "column": 20
          },
          "end": {
            "line": 449,
            "column": 27
          }
        },
        "217": {
          "start": {
            "line": 450,
            "column": 8
          },
          "end": {
            "line": 480,
            "column": 9
          }
        },
        "218": {
          "start": {
            "line": 451,
            "column": 12
          },
          "end": {
            "line": 451,
            "column": 41
          }
        },
        "219": {
          "start": {
            "line": 452,
            "column": 12
          },
          "end": {
            "line": 452,
            "column": 16
          }
        },
        "220": {
          "start": {
            "line": 453,
            "column": 15
          },
          "end": {
            "line": 480,
            "column": 9
          }
        },
        "221": {
          "start": {
            "line": 454,
            "column": 12
          },
          "end": {
            "line": 454,
            "column": 46
          }
        },
        "222": {
          "start": {
            "line": 455,
            "column": 12
          },
          "end": {
            "line": 455,
            "column": 16
          }
        },
        "223": {
          "start": {
            "line": 456,
            "column": 15
          },
          "end": {
            "line": 480,
            "column": 9
          }
        },
        "224": {
          "start": {
            "line": 457,
            "column": 12
          },
          "end": {
            "line": 476,
            "column": 3
          }
        },
        "225": {
          "start": {
            "line": 477,
            "column": 12
          },
          "end": {
            "line": 477,
            "column": 28
          }
        },
        "226": {
          "start": {
            "line": 478,
            "column": 15
          },
          "end": {
            "line": 480,
            "column": 9
          }
        },
        "227": {
          "start": {
            "line": 479,
            "column": 12
          },
          "end": {
            "line": 479,
            "column": 26
          }
        },
        "228": {
          "start": {
            "line": 484,
            "column": 8
          },
          "end": {
            "line": 507,
            "column": 9
          }
        },
        "229": {
          "start": {
            "line": 485,
            "column": 12
          },
          "end": {
            "line": 503,
            "column": 13
          }
        },
        "230": {
          "start": {
            "line": 487,
            "column": 20
          },
          "end": {
            "line": 487,
            "column": 49
          }
        },
        "231": {
          "start": {
            "line": 488,
            "column": 20
          },
          "end": {
            "line": 488,
            "column": 26
          }
        },
        "232": {
          "start": {
            "line": 490,
            "column": 20
          },
          "end": {
            "line": 490,
            "column": 46
          }
        },
        "233": {
          "start": {
            "line": 491,
            "column": 20
          },
          "end": {
            "line": 491,
            "column": 26
          }
        },
        "234": {
          "start": {
            "line": 493,
            "column": 20
          },
          "end": {
            "line": 493,
            "column": 50
          }
        },
        "235": {
          "start": {
            "line": 494,
            "column": 20
          },
          "end": {
            "line": 494,
            "column": 26
          }
        },
        "236": {
          "start": {
            "line": 497,
            "column": 20
          },
          "end": {
            "line": 497,
            "column": 49
          }
        },
        "237": {
          "start": {
            "line": 498,
            "column": 20
          },
          "end": {
            "line": 498,
            "column": 36
          }
        },
        "238": {
          "start": {
            "line": 499,
            "column": 20
          },
          "end": {
            "line": 499,
            "column": 46
          }
        },
        "239": {
          "start": {
            "line": 500,
            "column": 20
          },
          "end": {
            "line": 500,
            "column": 36
          }
        },
        "240": {
          "start": {
            "line": 501,
            "column": 20
          },
          "end": {
            "line": 501,
            "column": 50
          }
        },
        "241": {
          "start": {
            "line": 502,
            "column": 20
          },
          "end": {
            "line": 502,
            "column": 26
          }
        },
        "242": {
          "start": {
            "line": 505,
            "column": 12
          },
          "end": {
            "line": 505,
            "column": 78
          }
        },
        "243": {
          "start": {
            "line": 506,
            "column": 12
          },
          "end": {
            "line": 506,
            "column": 28
          }
        },
        "244": {
          "start": {
            "line": 510,
            "column": 4
          },
          "end": {
            "line": 510,
            "column": 17
          }
        },
        "245": {
          "start": {
            "line": 513,
            "column": 0
          },
          "end": {
            "line": 518,
            "column": 2
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "listTemplates",
          "decl": {
            "start": {
              "line": 17,
              "column": 15
            },
            "end": {
              "line": 17,
              "column": 28
            }
          },
          "loc": {
            "start": {
              "line": 17,
              "column": 43
            },
            "end": {
              "line": 93,
              "column": 1
            }
          },
          "line": 17
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 27,
              "column": 16
            },
            "end": {
              "line": 27,
              "column": 17
            }
          },
          "loc": {
            "start": {
              "line": 27,
              "column": 24
            },
            "end": {
              "line": 27,
              "column": 81
            }
          },
          "line": 27
        },
        "2": {
          "name": "listThemes",
          "decl": {
            "start": {
              "line": 99,
              "column": 15
            },
            "end": {
              "line": 99,
              "column": 25
            }
          },
          "loc": {
            "start": {
              "line": 99,
              "column": 40
            },
            "end": {
              "line": 160,
              "column": 1
            }
          },
          "line": 99
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": {
            "start": {
              "line": 109,
              "column": 16
            },
            "end": {
              "line": 109,
              "column": 17
            }
          },
          "loc": {
            "start": {
              "line": 109,
              "column": 24
            },
            "end": {
              "line": 109,
              "column": 78
            }
          },
          "line": 109
        },
        "4": {
          "name": "listComponents",
          "decl": {
            "start": {
              "line": 166,
              "column": 15
            },
            "end": {
              "line": 166,
              "column": 29
            }
          },
          "loc": {
            "start": {
              "line": 166,
              "column": 44
            },
            "end": {
              "line": 282,
              "column": 1
            }
          },
          "line": 166
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": {
            "start": {
              "line": 177,
              "column": 20
            },
            "end": {
              "line": 177,
              "column": 21
            }
          },
          "loc": {
            "start": {
              "line": 177,
              "column": 28
            },
            "end": {
              "line": 177,
              "column": 86
            }
          },
          "line": 177
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": {
            "start": {
              "line": 192,
              "column": 20
            },
            "end": {
              "line": 192,
              "column": 21
            }
          },
          "loc": {
            "start": {
              "line": 192,
              "column": 28
            },
            "end": {
              "line": 192,
              "column": 85
            }
          },
          "line": 192
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": {
            "start": {
              "line": 221,
              "column": 63
            },
            "end": {
              "line": 221,
              "column": 64
            }
          },
          "loc": {
            "start": {
              "line": 221,
              "column": 73
            },
            "end": {
              "line": 221,
              "column": 101
            }
          },
          "line": 221
        },
        "8": {
          "name": "getTemplateInfo",
          "decl": {
            "start": {
              "line": 288,
              "column": 15
            },
            "end": {
              "line": 288,
              "column": 30
            }
          },
          "loc": {
            "start": {
              "line": 288,
              "column": 45
            },
            "end": {
              "line": 337,
              "column": 1
            }
          },
          "line": 288
        },
        "9": {
          "name": "getThemeInfo",
          "decl": {
            "start": {
              "line": 343,
              "column": 15
            },
            "end": {
              "line": 343,
              "column": 27
            }
          },
          "loc": {
            "start": {
              "line": 343,
              "column": 39
            },
            "end": {
              "line": 384,
              "column": 1
            }
          },
          "line": 343
        },
        "10": {
          "name": "getStatusIcon",
          "decl": {
            "start": {
              "line": 390,
              "column": 9
            },
            "end": {
              "line": 390,
              "column": 22
            }
          },
          "loc": {
            "start": {
              "line": 390,
              "column": 31
            },
            "end": {
              "line": 402,
              "column": 1
            }
          },
          "line": 390
        },
        "11": {
          "name": "generateCompletions",
          "decl": {
            "start": {
              "line": 409,
              "column": 15
            },
            "end": {
              "line": 409,
              "column": 34
            }
          },
          "loc": {
            "start": {
              "line": 409,
              "column": 55
            },
            "end": {
              "line": 434,
              "column": 1
            }
          },
          "line": 409
        },
        "12": {
          "name": "(anonymous_12)",
          "decl": {
            "start": {
              "line": 421,
              "column": 35
            },
            "end": {
              "line": 421,
              "column": 36
            }
          },
          "loc": {
            "start": {
              "line": 421,
              "column": 40
            },
            "end": {
              "line": 421,
              "column": 46
            }
          },
          "line": 421
        },
        "13": {
          "name": "(anonymous_13)",
          "decl": {
            "start": {
              "line": 428,
              "column": 22
            },
            "end": {
              "line": 428,
              "column": 23
            }
          },
          "loc": {
            "start": {
              "line": 428,
              "column": 30
            },
            "end": {
              "line": 428,
              "column": 60
            }
          },
          "line": 428
        },
        "14": {
          "name": "(anonymous_14)",
          "decl": {
            "start": {
              "line": 430,
              "column": 22
            },
            "end": {
              "line": 430,
              "column": 23
            }
          },
          "loc": {
            "start": {
              "line": 430,
              "column": 30
            },
            "end": {
              "line": 430,
              "column": 47
            }
          },
          "line": 430
        },
        "15": {
          "name": "runCommand",
          "decl": {
            "start": {
              "line": 483,
              "column": 19
            },
            "end": {
              "line": 483,
              "column": 29
            }
          },
          "loc": {
            "start": {
              "line": 483,
              "column": 32
            },
            "end": {
              "line": 508,
              "column": 5
            }
          },
          "line": 483
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 17,
              "column": 29
            },
            "end": {
              "line": 17,
              "column": 41
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 17,
                "column": 39
              },
              "end": {
                "line": 17,
                "column": 41
              }
            }
          ],
          "line": 17
        },
        "1": {
          "loc": {
            "start": {
              "line": 18,
              "column": 24
            },
            "end": {
              "line": 18,
              "column": 73
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 18,
                "column": 24
              },
              "end": {
                "line": 18,
                "column": 43
              }
            },
            {
              "start": {
                "line": 18,
                "column": 47
              },
              "end": {
                "line": 18,
                "column": 73
              }
            }
          ],
          "line": 18
        },
        "2": {
          "loc": {
            "start": {
              "line": 21,
              "column": 4
            },
            "end": {
              "line": 24,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 21,
                "column": 4
              },
              "end": {
                "line": 24,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 21
        },
        "3": {
          "loc": {
            "start": {
              "line": 30,
              "column": 4
            },
            "end": {
              "line": 39,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 30,
                "column": 4
              },
              "end": {
                "line": 39,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 30
        },
        "4": {
          "loc": {
            "start": {
              "line": 44,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 44,
                "column": 4
              },
              "end": {
                "line": 47,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 44
        },
        "5": {
          "loc": {
            "start": {
              "line": 58,
              "column": 8
            },
            "end": {
              "line": 60,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 58,
                "column": 8
              },
              "end": {
                "line": 60,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 58
        },
        "6": {
          "loc": {
            "start": {
              "line": 64,
              "column": 8
            },
            "end": {
              "line": 64,
              "column": 60
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 64,
                "column": 8
              },
              "end": {
                "line": 64,
                "column": 60
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 64
        },
        "7": {
          "loc": {
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 65,
              "column": 60
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 65,
                "column": 8
              },
              "end": {
                "line": 65,
                "column": 60
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 65
        },
        "8": {
          "loc": {
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 68,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 66,
                "column": 8
              },
              "end": {
                "line": 68,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 66
        },
        "9": {
          "loc": {
            "start": {
              "line": 71,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 71,
                "column": 8
              },
              "end": {
                "line": 73,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 71
        },
        "10": {
          "loc": {
            "start": {
              "line": 76,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 76,
                "column": 8
              },
              "end": {
                "line": 81,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 76
        },
        "11": {
          "loc": {
            "start": {
              "line": 76,
              "column": 12
            },
            "end": {
              "line": 76,
              "column": 53
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 76,
                "column": 12
              },
              "end": {
                "line": 76,
                "column": 25
              }
            },
            {
              "start": {
                "line": 76,
                "column": 29
              },
              "end": {
                "line": 76,
                "column": 53
              }
            }
          ],
          "line": 76
        },
        "12": {
          "loc": {
            "start": {
              "line": 78,
              "column": 12
            },
            "end": {
              "line": 80,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 78,
                "column": 12
              },
              "end": {
                "line": 80,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 78
        },
        "13": {
          "loc": {
            "start": {
              "line": 84,
              "column": 8
            },
            "end": {
              "line": 88,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 84,
                "column": 8
              },
              "end": {
                "line": 88,
                "column": 9
              }
            },
            {
              "start": {
                "line": 86,
                "column": 15
              },
              "end": {
                "line": 88,
                "column": 9
              }
            }
          ],
          "line": 84
        },
        "14": {
          "loc": {
            "start": {
              "line": 86,
              "column": 15
            },
            "end": {
              "line": 88,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 86,
                "column": 15
              },
              "end": {
                "line": 88,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 86
        },
        "15": {
          "loc": {
            "start": {
              "line": 99,
              "column": 26
            },
            "end": {
              "line": 99,
              "column": 38
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 99,
                "column": 36
              },
              "end": {
                "line": 99,
                "column": 38
              }
            }
          ],
          "line": 99
        },
        "16": {
          "loc": {
            "start": {
              "line": 100,
              "column": 24
            },
            "end": {
              "line": 100,
              "column": 73
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 100,
                "column": 24
              },
              "end": {
                "line": 100,
                "column": 43
              }
            },
            {
              "start": {
                "line": 100,
                "column": 47
              },
              "end": {
                "line": 100,
                "column": 73
              }
            }
          ],
          "line": 100
        },
        "17": {
          "loc": {
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 106,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 103,
                "column": 4
              },
              "end": {
                "line": 106,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 103
        },
        "18": {
          "loc": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 121,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 112,
                "column": 4
              },
              "end": {
                "line": 121,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 112
        },
        "19": {
          "loc": {
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 129,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 126,
                "column": 4
              },
              "end": {
                "line": 129,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 126
        },
        "20": {
          "loc": {
            "start": {
              "line": 137,
              "column": 8
            },
            "end": {
              "line": 139,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 137,
                "column": 8
              },
              "end": {
                "line": 139,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 137
        },
        "21": {
          "loc": {
            "start": {
              "line": 141,
              "column": 8
            },
            "end": {
              "line": 143,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 141,
                "column": 8
              },
              "end": {
                "line": 143,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 141
        },
        "22": {
          "loc": {
            "start": {
              "line": 145,
              "column": 8
            },
            "end": {
              "line": 147,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 145,
                "column": 8
              },
              "end": {
                "line": 147,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 145
        },
        "23": {
          "loc": {
            "start": {
              "line": 149,
              "column": 8
            },
            "end": {
              "line": 151,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 149,
                "column": 8
              },
              "end": {
                "line": 151,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 149
        },
        "24": {
          "loc": {
            "start": {
              "line": 149,
              "column": 12
            },
            "end": {
              "line": 149,
              "column": 53
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 149,
                "column": 12
              },
              "end": {
                "line": 149,
                "column": 25
              }
            },
            {
              "start": {
                "line": 149,
                "column": 29
              },
              "end": {
                "line": 149,
                "column": 53
              }
            }
          ],
          "line": 149
        },
        "25": {
          "loc": {
            "start": {
              "line": 153,
              "column": 8
            },
            "end": {
              "line": 155,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 153,
                "column": 8
              },
              "end": {
                "line": 155,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 153
        },
        "26": {
          "loc": {
            "start": {
              "line": 153,
              "column": 12
            },
            "end": {
              "line": 153,
              "column": 60
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 153,
                "column": 12
              },
              "end": {
                "line": 153,
                "column": 39
              }
            },
            {
              "start": {
                "line": 153,
                "column": 43
              },
              "end": {
                "line": 153,
                "column": 60
              }
            }
          ],
          "line": 153
        },
        "27": {
          "loc": {
            "start": {
              "line": 166,
              "column": 30
            },
            "end": {
              "line": 166,
              "column": 42
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 166,
                "column": 40
              },
              "end": {
                "line": 166,
                "column": 42
              }
            }
          ],
          "line": 166
        },
        "28": {
          "loc": {
            "start": {
              "line": 167,
              "column": 24
            },
            "end": {
              "line": 167,
              "column": 73
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 167,
                "column": 24
              },
              "end": {
                "line": 167,
                "column": 43
              }
            },
            {
              "start": {
                "line": 167,
                "column": 47
              },
              "end": {
                "line": 167,
                "column": 73
              }
            }
          ],
          "line": 167
        },
        "29": {
          "loc": {
            "start": {
              "line": 175,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 175,
                "column": 4
              },
              "end": {
                "line": 187,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 175
        },
        "30": {
          "loc": {
            "start": {
              "line": 190,
              "column": 4
            },
            "end": {
              "line": 219,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 190,
                "column": 4
              },
              "end": {
                "line": 219,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 190
        },
        "31": {
          "loc": {
            "start": {
              "line": 196,
              "column": 12
            },
            "end": {
              "line": 217,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 196,
                "column": 12
              },
              "end": {
                "line": 217,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 196
        },
        "32": {
          "loc": {
            "start": {
              "line": 201,
              "column": 20
            },
            "end": {
              "line": 213,
              "column": 21
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 201,
                "column": 20
              },
              "end": {
                "line": 213,
                "column": 21
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 201
        },
        "33": {
          "loc": {
            "start": {
              "line": 203,
              "column": 28
            },
            "end": {
              "line": 210,
              "column": 29
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 203,
                "column": 28
              },
              "end": {
                "line": 210,
                "column": 29
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 203
        },
        "34": {
          "loc": {
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 226,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 223,
                "column": 4
              },
              "end": {
                "line": 226,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 223
        },
        "35": {
          "loc": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 234,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 231,
                "column": 4
              },
              "end": {
                "line": 234,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 231
        },
        "36": {
          "loc": {
            "start": {
              "line": 237,
              "column": 23
            },
            "end": {
              "line": 237,
              "column": 45
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 237,
                "column": 23
              },
              "end": {
                "line": 237,
                "column": 39
              }
            },
            {
              "start": {
                "line": 237,
                "column": 43
              },
              "end": {
                "line": 237,
                "column": 45
              }
            }
          ],
          "line": 237
        },
        "37": {
          "loc": {
            "start": {
              "line": 238,
              "column": 41
            },
            "end": {
              "line": 238,
              "column": 67
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 238,
                "column": 41
              },
              "end": {
                "line": 238,
                "column": 54
              }
            },
            {
              "start": {
                "line": 238,
                "column": 58
              },
              "end": {
                "line": 238,
                "column": 67
              }
            }
          ],
          "line": 238
        },
        "38": {
          "loc": {
            "start": {
              "line": 242,
              "column": 8
            },
            "end": {
              "line": 244,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 242,
                "column": 8
              },
              "end": {
                "line": 244,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 242
        },
        "39": {
          "loc": {
            "start": {
              "line": 248,
              "column": 8
            },
            "end": {
              "line": 248,
              "column": 64
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 248,
                "column": 8
              },
              "end": {
                "line": 248,
                "column": 64
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 248
        },
        "40": {
          "loc": {
            "start": {
              "line": 249,
              "column": 8
            },
            "end": {
              "line": 249,
              "column": 56
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 249,
                "column": 8
              },
              "end": {
                "line": 249,
                "column": 56
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 249
        },
        "41": {
          "loc": {
            "start": {
              "line": 250,
              "column": 8
            },
            "end": {
              "line": 252,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 250,
                "column": 8
              },
              "end": {
                "line": 252,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 250
        },
        "42": {
          "loc": {
            "start": {
              "line": 255,
              "column": 8
            },
            "end": {
              "line": 259,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 255,
                "column": 8
              },
              "end": {
                "line": 259,
                "column": 9
              }
            },
            {
              "start": {
                "line": 257,
                "column": 15
              },
              "end": {
                "line": 259,
                "column": 9
              }
            }
          ],
          "line": 255
        },
        "43": {
          "loc": {
            "start": {
              "line": 262,
              "column": 8
            },
            "end": {
              "line": 264,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 262,
                "column": 8
              },
              "end": {
                "line": 264,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 262
        },
        "44": {
          "loc": {
            "start": {
              "line": 267,
              "column": 8
            },
            "end": {
              "line": 269,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 267,
                "column": 8
              },
              "end": {
                "line": 269,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 267
        },
        "45": {
          "loc": {
            "start": {
              "line": 272,
              "column": 8
            },
            "end": {
              "line": 277,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 272,
                "column": 8
              },
              "end": {
                "line": 277,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 272
        },
        "46": {
          "loc": {
            "start": {
              "line": 272,
              "column": 12
            },
            "end": {
              "line": 272,
              "column": 65
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 272,
                "column": 12
              },
              "end": {
                "line": 272,
                "column": 31
              }
            },
            {
              "start": {
                "line": 272,
                "column": 35
              },
              "end": {
                "line": 272,
                "column": 65
              }
            }
          ],
          "line": 272
        },
        "47": {
          "loc": {
            "start": {
              "line": 274,
              "column": 12
            },
            "end": {
              "line": 276,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 274,
                "column": 12
              },
              "end": {
                "line": 276,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 274
        },
        "48": {
          "loc": {
            "start": {
              "line": 306,
              "column": 4
            },
            "end": {
              "line": 312,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 306,
                "column": 4
              },
              "end": {
                "line": 312,
                "column": 5
              }
            },
            {
              "start": {
                "line": 308,
                "column": 11
              },
              "end": {
                "line": 312,
                "column": 5
              }
            }
          ],
          "line": 306
        },
        "49": {
          "loc": {
            "start": {
              "line": 306,
              "column": 8
            },
            "end": {
              "line": 306,
              "column": 55
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 306,
                "column": 8
              },
              "end": {
                "line": 306,
                "column": 22
              }
            },
            {
              "start": {
                "line": 306,
                "column": 26
              },
              "end": {
                "line": 306,
                "column": 40
              }
            },
            {
              "start": {
                "line": 306,
                "column": 44
              },
              "end": {
                "line": 306,
                "column": 55
              }
            }
          ],
          "line": 306
        },
        "50": {
          "loc": {
            "start": {
              "line": 308,
              "column": 11
            },
            "end": {
              "line": 312,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 308,
                "column": 11
              },
              "end": {
                "line": 312,
                "column": 5
              }
            },
            {
              "start": {
                "line": 310,
                "column": 11
              },
              "end": {
                "line": 312,
                "column": 5
              }
            }
          ],
          "line": 308
        },
        "51": {
          "loc": {
            "start": {
              "line": 316,
              "column": 4
            },
            "end": {
              "line": 334,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 316,
                "column": 4
              },
              "end": {
                "line": 334,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 316
        },
        "52": {
          "loc": {
            "start": {
              "line": 321,
              "column": 12
            },
            "end": {
              "line": 326,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 321,
                "column": 12
              },
              "end": {
                "line": 326,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 321
        },
        "53": {
          "loc": {
            "start": {
              "line": 325,
              "column": 32
            },
            "end": {
              "line": 325,
              "column": 62
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 325,
                "column": 32
              },
              "end": {
                "line": 325,
                "column": 56
              }
            },
            {
              "start": {
                "line": 325,
                "column": 60
              },
              "end": {
                "line": 325,
                "column": 62
              }
            }
          ],
          "line": 325
        },
        "54": {
          "loc": {
            "start": {
              "line": 328,
              "column": 12
            },
            "end": {
              "line": 330,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 328,
                "column": 12
              },
              "end": {
                "line": 330,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 328
        },
        "55": {
          "loc": {
            "start": {
              "line": 356,
              "column": 4
            },
            "end": {
              "line": 359,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 356,
                "column": 4
              },
              "end": {
                "line": 359,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 356
        },
        "56": {
          "loc": {
            "start": {
              "line": 365,
              "column": 8
            },
            "end": {
              "line": 380,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 365,
                "column": 8
              },
              "end": {
                "line": 380,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 365
        },
        "57": {
          "loc": {
            "start": {
              "line": 373,
              "column": 16
            },
            "end": {
              "line": 373,
              "column": 56
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 373,
                "column": 16
              },
              "end": {
                "line": 373,
                "column": 56
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 373
        },
        "58": {
          "loc": {
            "start": {
              "line": 374,
              "column": 16
            },
            "end": {
              "line": 374,
              "column": 63
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 374,
                "column": 16
              },
              "end": {
                "line": 374,
                "column": 63
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 374
        },
        "59": {
          "loc": {
            "start": {
              "line": 375,
              "column": 16
            },
            "end": {
              "line": 375,
              "column": 68
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 375,
                "column": 16
              },
              "end": {
                "line": 375,
                "column": 68
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 375
        },
        "60": {
          "loc": {
            "start": {
              "line": 401,
              "column": 11
            },
            "end": {
              "line": 401,
              "column": 31
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 401,
                "column": 11
              },
              "end": {
                "line": 401,
                "column": 24
              }
            },
            {
              "start": {
                "line": 401,
                "column": 28
              },
              "end": {
                "line": 401,
                "column": 31
              }
            }
          ],
          "line": 401
        },
        "61": {
          "loc": {
            "start": {
              "line": 409,
              "column": 41
            },
            "end": {
              "line": 409,
              "column": 53
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 409,
                "column": 51
              },
              "end": {
                "line": 409,
                "column": 53
              }
            }
          ],
          "line": 409
        },
        "62": {
          "loc": {
            "start": {
              "line": 412,
              "column": 4
            },
            "end": {
              "line": 423,
              "column": 5
            }
          },
          "type": "switch",
          "locations": [
            {
              "start": {
                "line": 413,
                "column": 8
              },
              "end": {
                "line": 415,
                "column": 18
              }
            },
            {
              "start": {
                "line": 416,
                "column": 8
              },
              "end": {
                "line": 418,
                "column": 18
              }
            },
            {
              "start": {
                "line": 419,
                "column": 8
              },
              "end": {
                "line": 422,
                "column": 18
              }
            }
          ],
          "line": 412
        },
        "63": {
          "loc": {
            "start": {
              "line": 425,
              "column": 4
            },
            "end": {
              "line": 431,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 425,
                "column": 4
              },
              "end": {
                "line": 431,
                "column": 5
              }
            },
            {
              "start": {
                "line": 427,
                "column": 11
              },
              "end": {
                "line": 431,
                "column": 5
              }
            }
          ],
          "line": 425
        },
        "64": {
          "loc": {
            "start": {
              "line": 427,
              "column": 11
            },
            "end": {
              "line": 431,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 427,
                "column": 11
              },
              "end": {
                "line": 431,
                "column": 5
              }
            },
            {
              "start": {
                "line": 429,
                "column": 11
              },
              "end": {
                "line": 431,
                "column": 5
              }
            }
          ],
          "line": 427
        },
        "65": {
          "loc": {
            "start": {
              "line": 437,
              "column": 0
            },
            "end": {
              "line": 511,
              "column": 1
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 437,
                "column": 0
              },
              "end": {
                "line": 511,
                "column": 1
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 437
        },
        "66": {
          "loc": {
            "start": {
              "line": 450,
              "column": 8
            },
            "end": {
              "line": 480,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 450,
                "column": 8
              },
              "end": {
                "line": 480,
                "column": 9
              }
            },
            {
              "start": {
                "line": 453,
                "column": 15
              },
              "end": {
                "line": 480,
                "column": 9
              }
            }
          ],
          "line": 450
        },
        "67": {
          "loc": {
            "start": {
              "line": 450,
              "column": 12
            },
            "end": {
              "line": 450,
              "column": 53
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 450,
                "column": 12
              },
              "end": {
                "line": 450,
                "column": 30
              }
            },
            {
              "start": {
                "line": 450,
                "column": 34
              },
              "end": {
                "line": 450,
                "column": 53
              }
            }
          ],
          "line": 450
        },
        "68": {
          "loc": {
            "start": {
              "line": 453,
              "column": 15
            },
            "end": {
              "line": 480,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 453,
                "column": 15
              },
              "end": {
                "line": 480,
                "column": 9
              }
            },
            {
              "start": {
                "line": 456,
                "column": 15
              },
              "end": {
                "line": 480,
                "column": 9
              }
            }
          ],
          "line": 453
        },
        "69": {
          "loc": {
            "start": {
              "line": 453,
              "column": 19
            },
            "end": {
              "line": 453,
              "column": 66
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 453,
                "column": 19
              },
              "end": {
                "line": 453,
                "column": 43
              }
            },
            {
              "start": {
                "line": 453,
                "column": 47
              },
              "end": {
                "line": 453,
                "column": 66
              }
            }
          ],
          "line": 453
        },
        "70": {
          "loc": {
            "start": {
              "line": 456,
              "column": 15
            },
            "end": {
              "line": 480,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 456,
                "column": 15
              },
              "end": {
                "line": 480,
                "column": 9
              }
            },
            {
              "start": {
                "line": 478,
                "column": 15
              },
              "end": {
                "line": 480,
                "column": 9
              }
            }
          ],
          "line": 456
        },
        "71": {
          "loc": {
            "start": {
              "line": 478,
              "column": 15
            },
            "end": {
              "line": 480,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 478,
                "column": 15
              },
              "end": {
                "line": 480,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 478
        },
        "72": {
          "loc": {
            "start": {
              "line": 485,
              "column": 12
            },
            "end": {
              "line": 503,
              "column": 13
            }
          },
          "type": "switch",
          "locations": [
            {
              "start": {
                "line": 486,
                "column": 16
              },
              "end": {
                "line": 488,
                "column": 26
              }
            },
            {
              "start": {
                "line": 489,
                "column": 16
              },
              "end": {
                "line": 491,
                "column": 26
              }
            },
            {
              "start": {
                "line": 492,
                "column": 16
              },
              "end": {
                "line": 494,
                "column": 26
              }
            },
            {
              "start": {
                "line": 495,
                "column": 16
              },
              "end": {
                "line": 495,
                "column": 27
              }
            },
            {
              "start": {
                "line": 496,
                "column": 16
              },
              "end": {
                "line": 502,
                "column": 26
              }
            }
          ],
          "line": 485
        }
      },
      "s": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 0,
        "104": 0,
        "105": 0,
        "106": 0,
        "107": 0,
        "108": 0,
        "109": 0,
        "110": 0,
        "111": 0,
        "112": 0,
        "113": 0,
        "114": 0,
        "115": 0,
        "116": 0,
        "117": 0,
        "118": 0,
        "119": 0,
        "120": 0,
        "121": 0,
        "122": 0,
        "123": 0,
        "124": 0,
        "125": 0,
        "126": 0,
        "127": 0,
        "128": 0,
        "129": 0,
        "130": 0,
        "131": 0,
        "132": 0,
        "133": 0,
        "134": 0,
        "135": 0,
        "136": 0,
        "137": 0,
        "138": 0,
        "139": 0,
        "140": 0,
        "141": 0,
        "142": 0,
        "143": 0,
        "144": 0,
        "145": 0,
        "146": 0,
        "147": 0,
        "148": 0,
        "149": 0,
        "150": 0,
        "151": 0,
        "152": 0,
        "153": 0,
        "154": 0,
        "155": 0,
        "156": 0,
        "157": 0,
        "158": 0,
        "159": 0,
        "160": 0,
        "161": 0,
        "162": 0,
        "163": 0,
        "164": 0,
        "165": 0,
        "166": 0,
        "167": 0,
        "168": 0,
        "169": 0,
        "170": 0,
        "171": 0,
        "172": 0,
        "173": 0,
        "174": 0,
        "175": 0,
        "176": 0,
        "177": 0,
        "178": 0,
        "179": 0,
        "180": 0,
        "181": 0,
        "182": 0,
        "183": 0,
        "184": 0,
        "185": 0,
        "186": 0,
        "187": 0,
        "188": 0,
        "189": 0,
        "190": 0,
        "191": 0,
        "192": 0,
        "193": 0,
        "194": 0,
        "195": 0,
        "196": 0,
        "197": 0,
        "198": 0,
        "199": 0,
        "200": 0,
        "201": 0,
        "202": 0,
        "203": 0,
        "204": 0,
        "205": 0,
        "206": 0,
        "207": 0,
        "208": 0,
        "209": 0,
        "210": 0,
        "211": 0,
        "212": 0,
        "213": 0,
        "214": 0,
        "215": 0,
        "216": 0,
        "217": 0,
        "218": 0,
        "219": 0,
        "220": 0,
        "221": 0,
        "222": 0,
        "223": 0,
        "224": 0,
        "225": 0,
        "226": 0,
        "227": 0,
        "228": 0,
        "229": 0,
        "230": 0,
        "231": 0,
        "232": 0,
        "233": 0,
        "234": 0,
        "235": 0,
        "236": 0,
        "237": 0,
        "238": 0,
        "239": 0,
        "240": 0,
        "241": 0,
        "242": 0,
        "243": 0,
        "244": 0,
        "245": 0
      },
      "f": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0
      },
      "b": {
        "0": [
          0
        ],
        "1": [
          0,
          0
        ],
        "2": [
          0,
          0
        ],
        "3": [
          0,
          0
        ],
        "4": [
          0,
          0
        ],
        "5": [
          0,
          0
        ],
        "6": [
          0,
          0
        ],
        "7": [
          0,
          0
        ],
        "8": [
          0,
          0
        ],
        "9": [
          0,
          0
        ],
        "10": [
          0,
          0
        ],
        "11": [
          0,
          0
        ],
        "12": [
          0,
          0
        ],
        "13": [
          0,
          0
        ],
        "14": [
          0,
          0
        ],
        "15": [
          0
        ],
        "16": [
          0,
          0
        ],
        "17": [
          0,
          0
        ],
        "18": [
          0,
          0
        ],
        "19": [
          0,
          0
        ],
        "20": [
          0,
          0
        ],
        "21": [
          0,
          0
        ],
        "22": [
          0,
          0
        ],
        "23": [
          0,
          0
        ],
        "24": [
          0,
          0
        ],
        "25": [
          0,
          0
        ],
        "26": [
          0,
          0
        ],
        "27": [
          0
        ],
        "28": [
          0,
          0
        ],
        "29": [
          0,
          0
        ],
        "30": [
          0,
          0
        ],
        "31": [
          0,
          0
        ],
        "32": [
          0,
          0
        ],
        "33": [
          0,
          0
        ],
        "34": [
          0,
          0
        ],
        "35": [
          0,
          0
        ],
        "36": [
          0,
          0
        ],
        "37": [
          0,
          0
        ],
        "38": [
          0,
          0
        ],
        "39": [
          0,
          0
        ],
        "40": [
          0,
          0
        ],
        "41": [
          0,
          0
        ],
        "42": [
          0,
          0
        ],
        "43": [
          0,
          0
        ],
        "44": [
          0,
          0
        ],
        "45": [
          0,
          0
        ],
        "46": [
          0,
          0
        ],
        "47": [
          0,
          0
        ],
        "48": [
          0,
          0
        ],
        "49": [
          0,
          0,
          0
        ],
        "50": [
          0,
          0
        ],
        "51": [
          0,
          0
        ],
        "52": [
          0,
          0
        ],
        "53": [
          0,
          0
        ],
        "54": [
          0,
          0
        ],
        "55": [
          0,
          0
        ],
        "56": [
          0,
          0
        ],
        "57": [
          0,
          0
        ],
        "58": [
          0,
          0
        ],
        "59": [
          0,
          0
        ],
        "60": [
          0,
          0
        ],
        "61": [
          0
        ],
        "62": [
          0,
          0,
          0
        ],
        "63": [
          0,
          0
        ],
        "64": [
          0,
          0
        ],
        "65": [
          0,
          0
        ],
        "66": [
          0,
          0
        ],
        "67": [
          0,
          0
        ],
        "68": [
          0,
          0
        ],
        "69": [
          0,
          0
        ],
        "70": [
          0,
          0
        ],
        "71": [
          0,
          0
        ],
        "72": [
          0,
          0,
          0,
          0,
          0
        ]
      }
    },
    "/root/info-tech-io/hugo-templates/scripts/parse-components.js": {
      "path": "/root/info-tech-io/hugo-templates/scripts/parse-components.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 8,
            "column": 11
          },
          "end": {
            "line": 8,
            "column": 24
          }
        },
        "1": {
          "start": {
            "line": 9,
            "column": 13
          },
          "end": {
            "line": 9,
            "column": 28
          }
        },
        "2": {
          "start": {
            "line": 10,
            "column": 13
          },
          "end": {
            "line": 10,
            "column": 28
          }
        },
        "3": {
          "start": {
            "line": 17,
            "column": 4
          },
          "end": {
            "line": 82,
            "column": 5
          }
        },
        "4": {
          "start": {
            "line": 18,
            "column": 8
          },
          "end": {
            "line": 21,
            "column": 9
          }
        },
        "5": {
          "start": {
            "line": 19,
            "column": 12
          },
          "end": {
            "line": 19,
            "column": 66
          }
        },
        "6": {
          "start": {
            "line": 20,
            "column": 12
          },
          "end": {
            "line": 20,
            "column": 19
          }
        },
        "7": {
          "start": {
            "line": 23,
            "column": 24
          },
          "end": {
            "line": 23,
            "column": 57
          }
        },
        "8": {
          "start": {
            "line": 24,
            "column": 23
          },
          "end": {
            "line": 24,
            "column": 42
          }
        },
        "9": {
          "start": {
            "line": 26,
            "column": 8
          },
          "end": {
            "line": 29,
            "column": 9
          }
        },
        "10": {
          "start": {
            "line": 27,
            "column": 12
          },
          "end": {
            "line": 27,
            "column": 64
          }
        },
        "11": {
          "start": {
            "line": 28,
            "column": 12
          },
          "end": {
            "line": 28,
            "column": 19
          }
        },
        "12": {
          "start": {
            "line": 31,
            "column": 8
          },
          "end": {
            "line": 31,
            "column": 114
          }
        },
        "13": {
          "start": {
            "line": 32,
            "column": 8
          },
          "end": {
            "line": 32,
            "column": 88
          }
        },
        "14": {
          "start": {
            "line": 33,
            "column": 8
          },
          "end": {
            "line": 33,
            "column": 24
          }
        },
        "15": {
          "start": {
            "line": 34,
            "column": 8
          },
          "end": {
            "line": 34,
            "column": 35
          }
        },
        "16": {
          "start": {
            "line": 36,
            "column": 8
          },
          "end": {
            "line": 60,
            "column": 11
          }
        },
        "17": {
          "start": {
            "line": 37,
            "column": 27
          },
          "end": {
            "line": 37,
            "column": 56
          }
        },
        "18": {
          "start": {
            "line": 38,
            "column": 28
          },
          "end": {
            "line": 38,
            "column": 58
          }
        },
        "19": {
          "start": {
            "line": 39,
            "column": 32
          },
          "end": {
            "line": 39,
            "column": 73
          }
        },
        "20": {
          "start": {
            "line": 41,
            "column": 31
          },
          "end": {
            "line": 46,
            "column": 28
          }
        },
        "21": {
          "start": {
            "line": 48,
            "column": 12
          },
          "end": {
            "line": 48,
            "column": 76
          }
        },
        "22": {
          "start": {
            "line": 49,
            "column": 12
          },
          "end": {
            "line": 49,
            "column": 47
          }
        },
        "23": {
          "start": {
            "line": 51,
            "column": 12
          },
          "end": {
            "line": 53,
            "column": 13
          }
        },
        "24": {
          "start": {
            "line": 52,
            "column": 16
          },
          "end": {
            "line": 52,
            "column": 75
          }
        },
        "25": {
          "start": {
            "line": 55,
            "column": 12
          },
          "end": {
            "line": 57,
            "column": 13
          }
        },
        "26": {
          "start": {
            "line": 56,
            "column": 16
          },
          "end": {
            "line": 56,
            "column": 87
          }
        },
        "27": {
          "start": {
            "line": 59,
            "column": 12
          },
          "end": {
            "line": 59,
            "column": 28
          }
        },
        "28": {
          "start": {
            "line": 63,
            "column": 8
          },
          "end": {
            "line": 68,
            "column": 9
          }
        },
        "29": {
          "start": {
            "line": 64,
            "column": 12
          },
          "end": {
            "line": 64,
            "column": 47
          }
        },
        "30": {
          "start": {
            "line": 65,
            "column": 12
          },
          "end": {
            "line": 65,
            "column": 87
          }
        },
        "31": {
          "start": {
            "line": 66,
            "column": 12
          },
          "end": {
            "line": 66,
            "column": 72
          }
        },
        "32": {
          "start": {
            "line": 67,
            "column": 12
          },
          "end": {
            "line": 67,
            "column": 28
          }
        },
        "33": {
          "start": {
            "line": 71,
            "column": 8
          },
          "end": {
            "line": 77,
            "column": 9
          }
        },
        "34": {
          "start": {
            "line": 72,
            "column": 12
          },
          "end": {
            "line": 72,
            "column": 48
          }
        },
        "35": {
          "start": {
            "line": 73,
            "column": 12
          },
          "end": {
            "line": 75,
            "column": 15
          }
        },
        "36": {
          "start": {
            "line": 74,
            "column": 16
          },
          "end": {
            "line": 74,
            "column": 50
          }
        },
        "37": {
          "start": {
            "line": 76,
            "column": 12
          },
          "end": {
            "line": 76,
            "column": 28
          }
        },
        "38": {
          "start": {
            "line": 80,
            "column": 8
          },
          "end": {
            "line": 80,
            "column": 73
          }
        },
        "39": {
          "start": {
            "line": 81,
            "column": 8
          },
          "end": {
            "line": 81,
            "column": 24
          }
        },
        "40": {
          "start": {
            "line": 86,
            "column": 0
          },
          "end": {
            "line": 95,
            "column": 1
          }
        },
        "41": {
          "start": {
            "line": 87,
            "column": 21
          },
          "end": {
            "line": 87,
            "column": 36
          }
        },
        "42": {
          "start": {
            "line": 89,
            "column": 4
          },
          "end": {
            "line": 92,
            "column": 5
          }
        },
        "43": {
          "start": {
            "line": 90,
            "column": 8
          },
          "end": {
            "line": 90,
            "column": 82
          }
        },
        "44": {
          "start": {
            "line": 91,
            "column": 8
          },
          "end": {
            "line": 91,
            "column": 24
          }
        },
        "45": {
          "start": {
            "line": 94,
            "column": 4
          },
          "end": {
            "line": 94,
            "column": 30
          }
        },
        "46": {
          "start": {
            "line": 97,
            "column": 0
          },
          "end": {
            "line": 97,
            "column": 37
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "parseComponents",
          "decl": {
            "start": {
              "line": 16,
              "column": 9
            },
            "end": {
              "line": 16,
              "column": 24
            }
          },
          "loc": {
            "start": {
              "line": 16,
              "column": 35
            },
            "end": {
              "line": 83,
              "column": 1
            }
          },
          "line": 16
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 36,
              "column": 50
            },
            "end": {
              "line": 36,
              "column": 51
            }
          },
          "loc": {
            "start": {
              "line": 36,
              "column": 73
            },
            "end": {
              "line": 60,
              "column": 9
            }
          },
          "line": 36
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 73,
              "column": 49
            },
            "end": {
              "line": 73,
              "column": 50
            }
          },
          "loc": {
            "start": {
              "line": 73,
              "column": 67
            },
            "end": {
              "line": 75,
              "column": 13
            }
          },
          "line": 73
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 18,
              "column": 8
            },
            "end": {
              "line": 21,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 18,
                "column": 8
              },
              "end": {
                "line": 21,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 18
        },
        "1": {
          "loc": {
            "start": {
              "line": 26,
              "column": 8
            },
            "end": {
              "line": 29,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 26,
                "column": 8
              },
              "end": {
                "line": 29,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 26
        },
        "2": {
          "loc": {
            "start": {
              "line": 26,
              "column": 12
            },
            "end": {
              "line": 26,
              "column": 41
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 26,
                "column": 12
              },
              "end": {
                "line": 26,
                "column": 19
              }
            },
            {
              "start": {
                "line": 26,
                "column": 23
              },
              "end": {
                "line": 26,
                "column": 41
              }
            }
          ],
          "line": 26
        },
        "3": {
          "loc": {
            "start": {
              "line": 31,
              "column": 33
            },
            "end": {
              "line": 31,
              "column": 67
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 31,
                "column": 33
              },
              "end": {
                "line": 31,
                "column": 54
              }
            },
            {
              "start": {
                "line": 31,
                "column": 58
              },
              "end": {
                "line": 31,
                "column": 67
              }
            }
          ],
          "line": 31
        },
        "4": {
          "loc": {
            "start": {
              "line": 31,
              "column": 72
            },
            "end": {
              "line": 31,
              "column": 109
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 31,
                "column": 72
              },
              "end": {
                "line": 31,
                "column": 96
              }
            },
            {
              "start": {
                "line": 31,
                "column": 100
              },
              "end": {
                "line": 31,
                "column": 109
              }
            }
          ],
          "line": 31
        },
        "5": {
          "loc": {
            "start": {
              "line": 32,
              "column": 36
            },
            "end": {
              "line": 32,
              "column": 84
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 32,
                "column": 36
              },
              "end": {
                "line": 32,
                "column": 64
              }
            },
            {
              "start": {
                "line": 32,
                "column": 68
              },
              "end": {
                "line": 32,
                "column": 84
              }
            }
          ],
          "line": 32
        },
        "6": {
          "loc": {
            "start": {
              "line": 37,
              "column": 27
            },
            "end": {
              "line": 37,
              "column": 56
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 37,
                "column": 27
              },
              "end": {
                "line": 37,
                "column": 43
              }
            },
            {
              "start": {
                "line": 37,
                "column": 47
              },
              "end": {
                "line": 37,
                "column": 56
              }
            }
          ],
          "line": 37
        },
        "7": {
          "loc": {
            "start": {
              "line": 38,
              "column": 28
            },
            "end": {
              "line": 38,
              "column": 58
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 38,
                "column": 28
              },
              "end": {
                "line": 38,
                "column": 45
              }
            },
            {
              "start": {
                "line": 38,
                "column": 49
              },
              "end": {
                "line": 38,
                "column": 58
              }
            }
          ],
          "line": 38
        },
        "8": {
          "loc": {
            "start": {
              "line": 39,
              "column": 32
            },
            "end": {
              "line": 39,
              "column": 73
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 39,
                "column": 32
              },
              "end": {
                "line": 39,
                "column": 53
              }
            },
            {
              "start": {
                "line": 39,
                "column": 57
              },
              "end": {
                "line": 39,
                "column": 73
              }
            }
          ],
          "line": 39
        },
        "9": {
          "loc": {
            "start": {
              "line": 41,
              "column": 31
            },
            "end": {
              "line": 46,
              "column": 28
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 41,
                "column": 31
              },
              "end": {
                "line": 46,
                "column": 21
              }
            },
            {
              "start": {
                "line": 46,
                "column": 25
              },
              "end": {
                "line": 46,
                "column": 28
              }
            }
          ],
          "line": 41
        },
        "10": {
          "loc": {
            "start": {
              "line": 51,
              "column": 12
            },
            "end": {
              "line": 53,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 51,
                "column": 12
              },
              "end": {
                "line": 53,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 51
        },
        "11": {
          "loc": {
            "start": {
              "line": 55,
              "column": 12
            },
            "end": {
              "line": 57,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 55,
                "column": 12
              },
              "end": {
                "line": 57,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 55
        },
        "12": {
          "loc": {
            "start": {
              "line": 55,
              "column": 16
            },
            "end": {
              "line": 55,
              "column": 75
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 55,
                "column": 16
              },
              "end": {
                "line": 55,
                "column": 38
              }
            },
            {
              "start": {
                "line": 55,
                "column": 42
              },
              "end": {
                "line": 55,
                "column": 75
              }
            }
          ],
          "line": 55
        },
        "13": {
          "loc": {
            "start": {
              "line": 63,
              "column": 8
            },
            "end": {
              "line": 68,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 63,
                "column": 8
              },
              "end": {
                "line": 68,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 63
        },
        "14": {
          "loc": {
            "start": {
              "line": 65,
              "column": 42
            },
            "end": {
              "line": 65,
              "column": 83
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 65,
                "column": 42
              },
              "end": {
                "line": 65,
                "column": 64
              }
            },
            {
              "start": {
                "line": 65,
                "column": 68
              },
              "end": {
                "line": 65,
                "column": 83
              }
            }
          ],
          "line": 65
        },
        "15": {
          "loc": {
            "start": {
              "line": 66,
              "column": 39
            },
            "end": {
              "line": 66,
              "column": 68
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 66,
                "column": 39
              },
              "end": {
                "line": 66,
                "column": 59
              }
            },
            {
              "start": {
                "line": 66,
                "column": 63
              },
              "end": {
                "line": 66,
                "column": 68
              }
            }
          ],
          "line": 66
        },
        "16": {
          "loc": {
            "start": {
              "line": 71,
              "column": 8
            },
            "end": {
              "line": 77,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 71,
                "column": 8
              },
              "end": {
                "line": 77,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 71
        },
        "17": {
          "loc": {
            "start": {
              "line": 86,
              "column": 0
            },
            "end": {
              "line": 95,
              "column": 1
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 86,
                "column": 0
              },
              "end": {
                "line": 95,
                "column": 1
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 86
        },
        "18": {
          "loc": {
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 89,
                "column": 4
              },
              "end": {
                "line": 92,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 89
        }
      },
      "s": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0
      },
      "f": {
        "0": 0,
        "1": 0,
        "2": 0
      },
      "b": {
        "0": [
          0,
          0
        ],
        "1": [
          0,
          0
        ],
        "2": [
          0,
          0
        ],
        "3": [
          0,
          0
        ],
        "4": [
          0,
          0
        ],
        "5": [
          0,
          0
        ],
        "6": [
          0,
          0
        ],
        "7": [
          0,
          0
        ],
        "8": [
          0,
          0
        ],
        "9": [
          0,
          0
        ],
        "10": [
          0,
          0
        ],
        "11": [
          0,
          0
        ],
        "12": [
          0,
          0
        ],
        "13": [
          0,
          0
        ],
        "14": [
          0,
          0
        ],
        "15": [
          0,
          0
        ],
        "16": [
          0,
          0
        ],
        "17": [
          0,
          0
        ],
        "18": [
          0,
          0
        ]
      }
    },
    "/root/info-tech-io/hugo-templates/scripts/validate.js": {
      "path": "/root/info-tech-io/hugo-templates/scripts/validate.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 8,
            "column": 11
          },
          "end": {
            "line": 8,
            "column": 30
          }
        },
        "1": {
          "start": {
            "line": 9,
            "column": 13
          },
          "end": {
            "line": 9,
            "column": 28
          }
        },
        "2": {
          "start": {
            "line": 10,
            "column": 12
          },
          "end": {
            "line": 10,
            "column": 26
          }
        },
        "3": {
          "start": {
            "line": 11,
            "column": 13
          },
          "end": {
            "line": 11,
            "column": 28
          }
        },
        "4": {
          "start": {
            "line": 12,
            "column": 14
          },
          "end": {
            "line": 12,
            "column": 30
          }
        },
        "5": {
          "start": {
            "line": 15,
            "column": 12
          },
          "end": {
            "line": 20,
            "column": 2
          }
        },
        "6": {
          "start": {
            "line": 27,
            "column": 8
          },
          "end": {
            "line": 27,
            "column": 26
          }
        },
        "7": {
          "start": {
            "line": 28,
            "column": 8
          },
          "end": {
            "line": 28,
            "column": 25
          }
        },
        "8": {
          "start": {
            "line": 29,
            "column": 8
          },
          "end": {
            "line": 29,
            "column": 27
          }
        },
        "9": {
          "start": {
            "line": 30,
            "column": 8
          },
          "end": {
            "line": 30,
            "column": 23
          }
        },
        "10": {
          "start": {
            "line": 34,
            "column": 8
          },
          "end": {
            "line": 34,
            "column": 27
          }
        },
        "11": {
          "start": {
            "line": 35,
            "column": 8
          },
          "end": {
            "line": 35,
            "column": 62
          }
        },
        "12": {
          "start": {
            "line": 39,
            "column": 8
          },
          "end": {
            "line": 39,
            "column": 66
          }
        },
        "13": {
          "start": {
            "line": 43,
            "column": 8
          },
          "end": {
            "line": 43,
            "column": 59
          }
        },
        "14": {
          "start": {
            "line": 47,
            "column": 8
          },
          "end": {
            "line": 47,
            "column": 66
          }
        },
        "15": {
          "start": {
            "line": 57,
            "column": 4
          },
          "end": {
            "line": 72,
            "column": 5
          }
        },
        "16": {
          "start": {
            "line": 58,
            "column": 27
          },
          "end": {
            "line": 58,
            "column": 86
          }
        },
        "17": {
          "start": {
            "line": 60,
            "column": 8
          },
          "end": {
            "line": 63,
            "column": 9
          }
        },
        "18": {
          "start": {
            "line": 61,
            "column": 12
          },
          "end": {
            "line": 61,
            "column": 83
          }
        },
        "19": {
          "start": {
            "line": 62,
            "column": 12
          },
          "end": {
            "line": 62,
            "column": 24
          }
        },
        "20": {
          "start": {
            "line": 65,
            "column": 30
          },
          "end": {
            "line": 65,
            "column": 65
          }
        },
        "21": {
          "start": {
            "line": 66,
            "column": 23
          },
          "end": {
            "line": 66,
            "column": 48
          }
        },
        "22": {
          "start": {
            "line": 68,
            "column": 8
          },
          "end": {
            "line": 68,
            "column": 35
          }
        },
        "23": {
          "start": {
            "line": 70,
            "column": 8
          },
          "end": {
            "line": 70,
            "column": 94
          }
        },
        "24": {
          "start": {
            "line": 71,
            "column": 8
          },
          "end": {
            "line": 71,
            "column": 20
          }
        },
        "25": {
          "start": {
            "line": 81,
            "column": 4
          },
          "end": {
            "line": 145,
            "column": 5
          }
        },
        "26": {
          "start": {
            "line": 82,
            "column": 8
          },
          "end": {
            "line": 85,
            "column": 9
          }
        },
        "27": {
          "start": {
            "line": 83,
            "column": 12
          },
          "end": {
            "line": 83,
            "column": 72
          }
        },
        "28": {
          "start": {
            "line": 84,
            "column": 12
          },
          "end": {
            "line": 84,
            "column": 19
          }
        },
        "29": {
          "start": {
            "line": 87,
            "column": 24
          },
          "end": {
            "line": 87,
            "column": 57
          }
        },
        "30": {
          "start": {
            "line": 90,
            "column": 8
          },
          "end": {
            "line": 95,
            "column": 9
          }
        },
        "31": {
          "start": {
            "line": 91,
            "column": 12
          },
          "end": {
            "line": 91,
            "column": 41
          }
        },
        "32": {
          "start": {
            "line": 93,
            "column": 12
          },
          "end": {
            "line": 93,
            "column": 96
          }
        },
        "33": {
          "start": {
            "line": 94,
            "column": 12
          },
          "end": {
            "line": 94,
            "column": 19
          }
        },
        "34": {
          "start": {
            "line": 98,
            "column": 35
          },
          "end": {
            "line": 98,
            "column": 58
          }
        },
        "35": {
          "start": {
            "line": 99,
            "column": 8
          },
          "end": {
            "line": 112,
            "column": 9
          }
        },
        "36": {
          "start": {
            "line": 100,
            "column": 28
          },
          "end": {
            "line": 100,
            "column": 54
          }
        },
        "37": {
          "start": {
            "line": 101,
            "column": 12
          },
          "end": {
            "line": 111,
            "column": 13
          }
        },
        "38": {
          "start": {
            "line": 102,
            "column": 16
          },
          "end": {
            "line": 108,
            "column": 19
          }
        },
        "39": {
          "start": {
            "line": 103,
            "column": 20
          },
          "end": {
            "line": 107,
            "column": 23
          }
        },
        "40": {
          "start": {
            "line": 110,
            "column": 16
          },
          "end": {
            "line": 110,
            "column": 88
          }
        },
        "41": {
          "start": {
            "line": 115,
            "column": 8
          },
          "end": {
            "line": 127,
            "column": 9
          }
        },
        "42": {
          "start": {
            "line": 116,
            "column": 12
          },
          "end": {
            "line": 118,
            "column": 13
          }
        },
        "43": {
          "start": {
            "line": 117,
            "column": 16
          },
          "end": {
            "line": 117,
            "column": 79
          }
        },
        "44": {
          "start": {
            "line": 119,
            "column": 12
          },
          "end": {
            "line": 121,
            "column": 13
          }
        },
        "45": {
          "start": {
            "line": 120,
            "column": 16
          },
          "end": {
            "line": 120,
            "column": 87
          }
        },
        "46": {
          "start": {
            "line": 122,
            "column": 12
          },
          "end": {
            "line": 124,
            "column": 13
          }
        },
        "47": {
          "start": {
            "line": 123,
            "column": 16
          },
          "end": {
            "line": 123,
            "column": 91
          }
        },
        "48": {
          "start": {
            "line": 126,
            "column": 12
          },
          "end": {
            "line": 126,
            "column": 88
          }
        },
        "49": {
          "start": {
            "line": 130,
            "column": 8
          },
          "end": {
            "line": 136,
            "column": 9
          }
        },
        "50": {
          "start": {
            "line": 131,
            "column": 12
          },
          "end": {
            "line": 133,
            "column": 13
          }
        },
        "51": {
          "start": {
            "line": 132,
            "column": 16
          },
          "end": {
            "line": 132,
            "column": 84
          }
        },
        "52": {
          "start": {
            "line": 135,
            "column": 12
          },
          "end": {
            "line": 135,
            "column": 73
          }
        },
        "53": {
          "start": {
            "line": 139,
            "column": 8
          },
          "end": {
            "line": 141,
            "column": 9
          }
        },
        "54": {
          "start": {
            "line": 140,
            "column": 12
          },
          "end": {
            "line": 140,
            "column": 62
          }
        },
        "55": {
          "start": {
            "line": 144,
            "column": 8
          },
          "end": {
            "line": 144,
            "column": 101
          }
        },
        "56": {
          "start": {
            "line": 157,
            "column": 4
          },
          "end": {
            "line": 161,
            "column": 5
          }
        },
        "57": {
          "start": {
            "line": 158,
            "column": 8
          },
          "end": {
            "line": 158,
            "column": 79
          }
        },
        "58": {
          "start": {
            "line": 159,
            "column": 11
          },
          "end": {
            "line": 161,
            "column": 5
          }
        },
        "59": {
          "start": {
            "line": 160,
            "column": 8
          },
          "end": {
            "line": 160,
            "column": 86
          }
        },
        "60": {
          "start": {
            "line": 163,
            "column": 4
          },
          "end": {
            "line": 165,
            "column": 5
          }
        },
        "61": {
          "start": {
            "line": 164,
            "column": 8
          },
          "end": {
            "line": 164,
            "column": 77
          }
        },
        "62": {
          "start": {
            "line": 167,
            "column": 4
          },
          "end": {
            "line": 169,
            "column": 5
          }
        },
        "63": {
          "start": {
            "line": 168,
            "column": 8
          },
          "end": {
            "line": 168,
            "column": 69
          }
        },
        "64": {
          "start": {
            "line": 172,
            "column": 4
          },
          "end": {
            "line": 179,
            "column": 5
          }
        },
        "65": {
          "start": {
            "line": 173,
            "column": 30
          },
          "end": {
            "line": 173,
            "column": 100
          }
        },
        "66": {
          "start": {
            "line": 174,
            "column": 8
          },
          "end": {
            "line": 178,
            "column": 9
          }
        },
        "67": {
          "start": {
            "line": 175,
            "column": 12
          },
          "end": {
            "line": 175,
            "column": 109
          }
        },
        "68": {
          "start": {
            "line": 177,
            "column": 12
          },
          "end": {
            "line": 177,
            "column": 100
          }
        },
        "69": {
          "start": {
            "line": 182,
            "column": 4
          },
          "end": {
            "line": 195,
            "column": 5
          }
        },
        "70": {
          "start": {
            "line": 183,
            "column": 8
          },
          "end": {
            "line": 194,
            "column": 9
          }
        },
        "71": {
          "start": {
            "line": 184,
            "column": 12
          },
          "end": {
            "line": 184,
            "column": 81
          }
        },
        "72": {
          "start": {
            "line": 186,
            "column": 12
          },
          "end": {
            "line": 193,
            "column": 15
          }
        },
        "73": {
          "start": {
            "line": 187,
            "column": 16
          },
          "end": {
            "line": 192,
            "column": 17
          }
        },
        "74": {
          "start": {
            "line": 188,
            "column": 37
          },
          "end": {
            "line": 188,
            "column": 113
          }
        },
        "75": {
          "start": {
            "line": 189,
            "column": 20
          },
          "end": {
            "line": 191,
            "column": 21
          }
        },
        "76": {
          "start": {
            "line": 190,
            "column": 24
          },
          "end": {
            "line": 190,
            "column": 126
          }
        },
        "77": {
          "start": {
            "line": 198,
            "column": 4
          },
          "end": {
            "line": 206,
            "column": 5
          }
        },
        "78": {
          "start": {
            "line": 199,
            "column": 8
          },
          "end": {
            "line": 201,
            "column": 9
          }
        },
        "79": {
          "start": {
            "line": 200,
            "column": 12
          },
          "end": {
            "line": 200,
            "column": 105
          }
        },
        "80": {
          "start": {
            "line": 202,
            "column": 11
          },
          "end": {
            "line": 206,
            "column": 5
          }
        },
        "81": {
          "start": {
            "line": 203,
            "column": 8
          },
          "end": {
            "line": 205,
            "column": 9
          }
        },
        "82": {
          "start": {
            "line": 204,
            "column": 12
          },
          "end": {
            "line": 204,
            "column": 116
          }
        },
        "83": {
          "start": {
            "line": 216,
            "column": 4
          },
          "end": {
            "line": 222,
            "column": 5
          }
        },
        "84": {
          "start": {
            "line": 218,
            "column": 31
          },
          "end": {
            "line": 218,
            "column": 48
          }
        },
        "85": {
          "start": {
            "line": 219,
            "column": 8
          },
          "end": {
            "line": 221,
            "column": 9
          }
        },
        "86": {
          "start": {
            "line": 220,
            "column": 12
          },
          "end": {
            "line": 220,
            "column": 109
          }
        },
        "87": {
          "start": {
            "line": 224,
            "column": 4
          },
          "end": {
            "line": 234,
            "column": 5
          }
        },
        "88": {
          "start": {
            "line": 225,
            "column": 8
          },
          "end": {
            "line": 233,
            "column": 9
          }
        },
        "89": {
          "start": {
            "line": 226,
            "column": 12
          },
          "end": {
            "line": 226,
            "column": 75
          }
        },
        "90": {
          "start": {
            "line": 228,
            "column": 12
          },
          "end": {
            "line": 232,
            "column": 15
          }
        },
        "91": {
          "start": {
            "line": 229,
            "column": 16
          },
          "end": {
            "line": 231,
            "column": 17
          }
        },
        "92": {
          "start": {
            "line": 230,
            "column": 20
          },
          "end": {
            "line": 230,
            "column": 99
          }
        },
        "93": {
          "start": {
            "line": 243,
            "column": 25
          },
          "end": {
            "line": 243,
            "column": 52
          }
        },
        "94": {
          "start": {
            "line": 245,
            "column": 4
          },
          "end": {
            "line": 248,
            "column": 5
          }
        },
        "95": {
          "start": {
            "line": 246,
            "column": 8
          },
          "end": {
            "line": 246,
            "column": 73
          }
        },
        "96": {
          "start": {
            "line": 247,
            "column": 8
          },
          "end": {
            "line": 247,
            "column": 15
          }
        },
        "97": {
          "start": {
            "line": 250,
            "column": 26
          },
          "end": {
            "line": 250,
            "column": 57
          }
        },
        "98": {
          "start": {
            "line": 251,
            "column": 28
          },
          "end": {
            "line": 251,
            "column": 63
          }
        },
        "99": {
          "start": {
            "line": 254,
            "column": 4
          },
          "end": {
            "line": 265,
            "column": 5
          }
        },
        "100": {
          "start": {
            "line": 255,
            "column": 25
          },
          "end": {
            "line": 255,
            "column": 54
          }
        },
        "101": {
          "start": {
            "line": 256,
            "column": 8
          },
          "end": {
            "line": 264,
            "column": 9
          }
        },
        "102": {
          "start": {
            "line": 257,
            "column": 12
          },
          "end": {
            "line": 261,
            "column": 13
          }
        },
        "103": {
          "start": {
            "line": 258,
            "column": 16
          },
          "end": {
            "line": 258,
            "column": 94
          }
        },
        "104": {
          "start": {
            "line": 260,
            "column": 16
          },
          "end": {
            "line": 260,
            "column": 93
          }
        },
        "105": {
          "start": {
            "line": 263,
            "column": 12
          },
          "end": {
            "line": 263,
            "column": 84
          }
        },
        "106": {
          "start": {
            "line": 268,
            "column": 4
          },
          "end": {
            "line": 277,
            "column": 5
          }
        },
        "107": {
          "start": {
            "line": 269,
            "column": 24
          },
          "end": {
            "line": 269,
            "column": 52
          }
        },
        "108": {
          "start": {
            "line": 270,
            "column": 8
          },
          "end": {
            "line": 276,
            "column": 9
          }
        },
        "109": {
          "start": {
            "line": 271,
            "column": 12
          },
          "end": {
            "line": 271,
            "column": 98
          }
        },
        "110": {
          "start": {
            "line": 272,
            "column": 15
          },
          "end": {
            "line": 276,
            "column": 9
          }
        },
        "111": {
          "start": {
            "line": 273,
            "column": 12
          },
          "end": {
            "line": 273,
            "column": 97
          }
        },
        "112": {
          "start": {
            "line": 275,
            "column": 12
          },
          "end": {
            "line": 275,
            "column": 91
          }
        },
        "113": {
          "start": {
            "line": 280,
            "column": 27
          },
          "end": {
            "line": 280,
            "column": 63
          }
        },
        "114": {
          "start": {
            "line": 281,
            "column": 4
          },
          "end": {
            "line": 291,
            "column": 5
          }
        },
        "115": {
          "start": {
            "line": 282,
            "column": 8
          },
          "end": {
            "line": 290,
            "column": 9
          }
        },
        "116": {
          "start": {
            "line": 283,
            "column": 32
          },
          "end": {
            "line": 283,
            "column": 71
          }
        },
        "117": {
          "start": {
            "line": 285,
            "column": 12
          },
          "end": {
            "line": 287,
            "column": 13
          }
        },
        "118": {
          "start": {
            "line": 286,
            "column": 16
          },
          "end": {
            "line": 286,
            "column": 113
          }
        },
        "119": {
          "start": {
            "line": 289,
            "column": 12
          },
          "end": {
            "line": 289,
            "column": 106
          }
        },
        "120": {
          "start": {
            "line": 294,
            "column": 27
          },
          "end": {
            "line": 294,
            "column": 68
          }
        },
        "121": {
          "start": {
            "line": 295,
            "column": 4
          },
          "end": {
            "line": 297,
            "column": 5
          }
        },
        "122": {
          "start": {
            "line": 296,
            "column": 8
          },
          "end": {
            "line": 296,
            "column": 60
          }
        },
        "123": {
          "start": {
            "line": 306,
            "column": 65
          },
          "end": {
            "line": 306,
            "column": 76
          }
        },
        "124": {
          "start": {
            "line": 309,
            "column": 4
          },
          "end": {
            "line": 311,
            "column": 5
          }
        },
        "125": {
          "start": {
            "line": 310,
            "column": 8
          },
          "end": {
            "line": 310,
            "column": 58
          }
        },
        "126": {
          "start": {
            "line": 314,
            "column": 4
          },
          "end": {
            "line": 316,
            "column": 5
          }
        },
        "127": {
          "start": {
            "line": 315,
            "column": 8
          },
          "end": {
            "line": 315,
            "column": 74
          }
        },
        "128": {
          "start": {
            "line": 319,
            "column": 4
          },
          "end": {
            "line": 334,
            "column": 5
          }
        },
        "129": {
          "start": {
            "line": 320,
            "column": 8
          },
          "end": {
            "line": 322,
            "column": 9
          }
        },
        "130": {
          "start": {
            "line": 321,
            "column": 12
          },
          "end": {
            "line": 321,
            "column": 76
          }
        },
        "131": {
          "start": {
            "line": 324,
            "column": 8
          },
          "end": {
            "line": 333,
            "column": 9
          }
        },
        "132": {
          "start": {
            "line": 325,
            "column": 12
          },
          "end": {
            "line": 332,
            "column": 13
          }
        },
        "133": {
          "start": {
            "line": 326,
            "column": 30
          },
          "end": {
            "line": 326,
            "column": 50
          }
        },
        "134": {
          "start": {
            "line": 327,
            "column": 16
          },
          "end": {
            "line": 329,
            "column": 17
          }
        },
        "135": {
          "start": {
            "line": 328,
            "column": 20
          },
          "end": {
            "line": 328,
            "column": 97
          }
        },
        "136": {
          "start": {
            "line": 331,
            "column": 16
          },
          "end": {
            "line": 331,
            "column": 79
          }
        },
        "137": {
          "start": {
            "line": 337,
            "column": 4
          },
          "end": {
            "line": 339,
            "column": 5
          }
        },
        "138": {
          "start": {
            "line": 338,
            "column": 8
          },
          "end": {
            "line": 338,
            "column": 114
          }
        },
        "139": {
          "start": {
            "line": 342,
            "column": 4
          },
          "end": {
            "line": 351,
            "column": 5
          }
        },
        "140": {
          "start": {
            "line": 343,
            "column": 8
          },
          "end": {
            "line": 350,
            "column": 9
          }
        },
        "141": {
          "start": {
            "line": 344,
            "column": 34
          },
          "end": {
            "line": 344,
            "column": 74
          }
        },
        "142": {
          "start": {
            "line": 344,
            "column": 65
          },
          "end": {
            "line": 344,
            "column": 73
          }
        },
        "143": {
          "start": {
            "line": 345,
            "column": 12
          },
          "end": {
            "line": 349,
            "column": 15
          }
        },
        "144": {
          "start": {
            "line": 346,
            "column": 16
          },
          "end": {
            "line": 348,
            "column": 17
          }
        },
        "145": {
          "start": {
            "line": 347,
            "column": 20
          },
          "end": {
            "line": 347,
            "column": 81
          }
        },
        "146": {
          "start": {
            "line": 359,
            "column": 19
          },
          "end": {
            "line": 359,
            "column": 41
          }
        },
        "147": {
          "start": {
            "line": 361,
            "column": 4
          },
          "end": {
            "line": 361,
            "column": 78
          }
        },
        "148": {
          "start": {
            "line": 362,
            "column": 4
          },
          "end": {
            "line": 362,
            "column": 44
          }
        },
        "149": {
          "start": {
            "line": 363,
            "column": 4
          },
          "end": {
            "line": 363,
            "column": 20
          }
        },
        "150": {
          "start": {
            "line": 365,
            "column": 4
          },
          "end": {
            "line": 410,
            "column": 5
          }
        },
        "151": {
          "start": {
            "line": 366,
            "column": 28
          },
          "end": {
            "line": 366,
            "column": 77
          }
        },
        "152": {
          "start": {
            "line": 369,
            "column": 8
          },
          "end": {
            "line": 387,
            "column": 9
          }
        },
        "153": {
          "start": {
            "line": 370,
            "column": 12
          },
          "end": {
            "line": 370,
            "column": 76
          }
        },
        "154": {
          "start": {
            "line": 372,
            "column": 33
          },
          "end": {
            "line": 372,
            "column": 68
          }
        },
        "155": {
          "start": {
            "line": 373,
            "column": 12
          },
          "end": {
            "line": 386,
            "column": 13
          }
        },
        "156": {
          "start": {
            "line": 374,
            "column": 34
          },
          "end": {
            "line": 376,
            "column": 18
          }
        },
        "157": {
          "start": {
            "line": 375,
            "column": 20
          },
          "end": {
            "line": 375,
            "column": 85
          }
        },
        "158": {
          "start": {
            "line": 378,
            "column": 16
          },
          "end": {
            "line": 381,
            "column": 17
          }
        },
        "159": {
          "start": {
            "line": 379,
            "column": 41
          },
          "end": {
            "line": 379,
            "column": 74
          }
        },
        "160": {
          "start": {
            "line": 380,
            "column": 20
          },
          "end": {
            "line": 380,
            "column": 74
          }
        },
        "161": {
          "start": {
            "line": 383,
            "column": 16
          },
          "end": {
            "line": 383,
            "column": 95
          }
        },
        "162": {
          "start": {
            "line": 385,
            "column": 16
          },
          "end": {
            "line": 385,
            "column": 82
          }
        },
        "163": {
          "start": {
            "line": 390,
            "column": 8
          },
          "end": {
            "line": 394,
            "column": 9
          }
        },
        "164": {
          "start": {
            "line": 391,
            "column": 12
          },
          "end": {
            "line": 391,
            "column": 88
          }
        },
        "165": {
          "start": {
            "line": 392,
            "column": 33
          },
          "end": {
            "line": 392,
            "column": 86
          }
        },
        "166": {
          "start": {
            "line": 393,
            "column": 12
          },
          "end": {
            "line": 393,
            "column": 66
          }
        },
        "167": {
          "start": {
            "line": 397,
            "column": 8
          },
          "end": {
            "line": 400,
            "column": 9
          }
        },
        "168": {
          "start": {
            "line": 398,
            "column": 12
          },
          "end": {
            "line": 398,
            "column": 75
          }
        },
        "169": {
          "start": {
            "line": 399,
            "column": 12
          },
          "end": {
            "line": 399,
            "column": 65
          }
        },
        "170": {
          "start": {
            "line": 403,
            "column": 8
          },
          "end": {
            "line": 406,
            "column": 9
          }
        },
        "171": {
          "start": {
            "line": 404,
            "column": 12
          },
          "end": {
            "line": 404,
            "column": 101
          }
        },
        "172": {
          "start": {
            "line": 405,
            "column": 12
          },
          "end": {
            "line": 405,
            "column": 72
          }
        },
        "173": {
          "start": {
            "line": 409,
            "column": 8
          },
          "end": {
            "line": 409,
            "column": 79
          }
        },
        "174": {
          "start": {
            "line": 413,
            "column": 4
          },
          "end": {
            "line": 413,
            "column": 20
          }
        },
        "175": {
          "start": {
            "line": 414,
            "column": 4
          },
          "end": {
            "line": 414,
            "column": 54
          }
        },
        "176": {
          "start": {
            "line": 415,
            "column": 4
          },
          "end": {
            "line": 415,
            "column": 32
          }
        },
        "177": {
          "start": {
            "line": 418,
            "column": 4
          },
          "end": {
            "line": 423,
            "column": 5
          }
        },
        "178": {
          "start": {
            "line": 419,
            "column": 8
          },
          "end": {
            "line": 419,
            "column": 77
          }
        },
        "179": {
          "start": {
            "line": 420,
            "column": 8
          },
          "end": {
            "line": 422,
            "column": 11
          }
        },
        "180": {
          "start": {
            "line": 421,
            "column": 12
          },
          "end": {
            "line": 421,
            "column": 63
          }
        },
        "181": {
          "start": {
            "line": 426,
            "column": 4
          },
          "end": {
            "line": 434,
            "column": 5
          }
        },
        "182": {
          "start": {
            "line": 427,
            "column": 8
          },
          "end": {
            "line": 427,
            "column": 81
          }
        },
        "183": {
          "start": {
            "line": 428,
            "column": 8
          },
          "end": {
            "line": 433,
            "column": 11
          }
        },
        "184": {
          "start": {
            "line": 429,
            "column": 12
          },
          "end": {
            "line": 429,
            "column": 64
          }
        },
        "185": {
          "start": {
            "line": 430,
            "column": 12
          },
          "end": {
            "line": 432,
            "column": 13
          }
        },
        "186": {
          "start": {
            "line": 431,
            "column": 16
          },
          "end": {
            "line": 431,
            "column": 99
          }
        },
        "187": {
          "start": {
            "line": 437,
            "column": 4
          },
          "end": {
            "line": 445,
            "column": 5
          }
        },
        "188": {
          "start": {
            "line": 438,
            "column": 8
          },
          "end": {
            "line": 438,
            "column": 72
          }
        },
        "189": {
          "start": {
            "line": 439,
            "column": 8
          },
          "end": {
            "line": 444,
            "column": 11
          }
        },
        "190": {
          "start": {
            "line": 440,
            "column": 12
          },
          "end": {
            "line": 440,
            "column": 59
          }
        },
        "191": {
          "start": {
            "line": 441,
            "column": 12
          },
          "end": {
            "line": 443,
            "column": 13
          }
        },
        "192": {
          "start": {
            "line": 442,
            "column": 16
          },
          "end": {
            "line": 442,
            "column": 99
          }
        },
        "193": {
          "start": {
            "line": 448,
            "column": 4
          },
          "end": {
            "line": 448,
            "column": 20
          }
        },
        "194": {
          "start": {
            "line": 449,
            "column": 4
          },
          "end": {
            "line": 457,
            "column": 5
          }
        },
        "195": {
          "start": {
            "line": 450,
            "column": 8
          },
          "end": {
            "line": 450,
            "column": 66
          }
        },
        "196": {
          "start": {
            "line": 451,
            "column": 8
          },
          "end": {
            "line": 453,
            "column": 9
          }
        },
        "197": {
          "start": {
            "line": 452,
            "column": 12
          },
          "end": {
            "line": 452,
            "column": 106
          }
        },
        "198": {
          "start": {
            "line": 455,
            "column": 8
          },
          "end": {
            "line": 455,
            "column": 64
          }
        },
        "199": {
          "start": {
            "line": 456,
            "column": 8
          },
          "end": {
            "line": 456,
            "column": 93
          }
        },
        "200": {
          "start": {
            "line": 459,
            "column": 4
          },
          "end": {
            "line": 459,
            "column": 18
          }
        },
        "201": {
          "start": {
            "line": 463,
            "column": 0
          },
          "end": {
            "line": 510,
            "column": 1
          }
        },
        "202": {
          "start": {
            "line": 464,
            "column": 17
          },
          "end": {
            "line": 464,
            "column": 38
          }
        },
        "203": {
          "start": {
            "line": 466,
            "column": 20
          },
          "end": {
            "line": 471,
            "column": 5
          }
        },
        "204": {
          "start": {
            "line": 474,
            "column": 4
          },
          "end": {
            "line": 502,
            "column": 5
          }
        },
        "205": {
          "start": {
            "line": 474,
            "column": 17
          },
          "end": {
            "line": 474,
            "column": 18
          }
        },
        "206": {
          "start": {
            "line": 475,
            "column": 20
          },
          "end": {
            "line": 475,
            "column": 27
          }
        },
        "207": {
          "start": {
            "line": 476,
            "column": 8
          },
          "end": {
            "line": 501,
            "column": 9
          }
        },
        "208": {
          "start": {
            "line": 477,
            "column": 12
          },
          "end": {
            "line": 477,
            "column": 43
          }
        },
        "209": {
          "start": {
            "line": 478,
            "column": 12
          },
          "end": {
            "line": 478,
            "column": 16
          }
        },
        "210": {
          "start": {
            "line": 479,
            "column": 15
          },
          "end": {
            "line": 501,
            "column": 9
          }
        },
        "211": {
          "start": {
            "line": 480,
            "column": 12
          },
          "end": {
            "line": 480,
            "column": 49
          }
        },
        "212": {
          "start": {
            "line": 481,
            "column": 12
          },
          "end": {
            "line": 481,
            "column": 16
          }
        },
        "213": {
          "start": {
            "line": 482,
            "column": 15
          },
          "end": {
            "line": 501,
            "column": 9
          }
        },
        "214": {
          "start": {
            "line": 483,
            "column": 12
          },
          "end": {
            "line": 483,
            "column": 44
          }
        },
        "215": {
          "start": {
            "line": 484,
            "column": 15
          },
          "end": {
            "line": 501,
            "column": 9
          }
        },
        "216": {
          "start": {
            "line": 485,
            "column": 12
          },
          "end": {
            "line": 499,
            "column": 3
          }
        },
        "217": {
          "start": {
            "line": 500,
            "column": 12
          },
          "end": {
            "line": 500,
            "column": 28
          }
        },
        "218": {
          "start": {
            "line": 504,
            "column": 4
          },
          "end": {
            "line": 509,
            "column": 7
          }
        },
        "219": {
          "start": {
            "line": 505,
            "column": 8
          },
          "end": {
            "line": 505,
            "column": 43
          }
        },
        "220": {
          "start": {
            "line": 507,
            "column": 8
          },
          "end": {
            "line": 507,
            "column": 72
          }
        },
        "221": {
          "start": {
            "line": 508,
            "column": 8
          },
          "end": {
            "line": 508,
            "column": 24
          }
        },
        "222": {
          "start": {
            "line": 512,
            "column": 0
          },
          "end": {
            "line": 512,
            "column": 48
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 26,
              "column": 4
            },
            "end": {
              "line": 26,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 26,
              "column": 18
            },
            "end": {
              "line": 31,
              "column": 5
            }
          },
          "line": 26
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 33,
              "column": 4
            },
            "end": {
              "line": 33,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 33,
              "column": 36
            },
            "end": {
              "line": 36,
              "column": 5
            }
          },
          "line": 33
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 38,
              "column": 4
            },
            "end": {
              "line": 38,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 38,
              "column": 38
            },
            "end": {
              "line": 40,
              "column": 5
            }
          },
          "line": 38
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": {
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 42,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 42,
              "column": 35
            },
            "end": {
              "line": 44,
              "column": 5
            }
          },
          "line": 42
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": {
            "start": {
              "line": 46,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 46,
              "column": 16
            },
            "end": {
              "line": 48,
              "column": 5
            }
          },
          "line": 46
        },
        "5": {
          "name": "loadSchema",
          "decl": {
            "start": {
              "line": 56,
              "column": 9
            },
            "end": {
              "line": 56,
              "column": 19
            }
          },
          "loc": {
            "start": {
              "line": 56,
              "column": 32
            },
            "end": {
              "line": 73,
              "column": 1
            }
          },
          "line": 56
        },
        "6": {
          "name": "validateComponentsYml",
          "decl": {
            "start": {
              "line": 80,
              "column": 15
            },
            "end": {
              "line": 80,
              "column": 36
            }
          },
          "loc": {
            "start": {
              "line": 80,
              "column": 55
            },
            "end": {
              "line": 146,
              "column": 1
            }
          },
          "line": 80
        },
        "7": {
          "name": "(anonymous_7)",
          "decl": {
            "start": {
              "line": 102,
              "column": 50
            },
            "end": {
              "line": 102,
              "column": 51
            }
          },
          "loc": {
            "start": {
              "line": 102,
              "column": 59
            },
            "end": {
              "line": 108,
              "column": 17
            }
          },
          "line": 102
        },
        "8": {
          "name": "validateComponent",
          "decl": {
            "start": {
              "line": 155,
              "column": 9
            },
            "end": {
              "line": 155,
              "column": 26
            }
          },
          "loc": {
            "start": {
              "line": 155,
              "column": 59
            },
            "end": {
              "line": 207,
              "column": 1
            }
          },
          "line": 155
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": {
            "start": {
              "line": 186,
              "column": 40
            },
            "end": {
              "line": 186,
              "column": 41
            }
          },
          "loc": {
            "start": {
              "line": 186,
              "column": 48
            },
            "end": {
              "line": 193,
              "column": 13
            }
          },
          "line": 186
        },
        "10": {
          "name": "validateHugoConfig",
          "decl": {
            "start": {
              "line": 215,
              "column": 9
            },
            "end": {
              "line": 215,
              "column": 27
            }
          },
          "loc": {
            "start": {
              "line": 215,
              "column": 58
            },
            "end": {
              "line": 235,
              "column": 1
            }
          },
          "line": 215
        },
        "11": {
          "name": "(anonymous_11)",
          "decl": {
            "start": {
              "line": 228,
              "column": 39
            },
            "end": {
              "line": 228,
              "column": 40
            }
          },
          "loc": {
            "start": {
              "line": 228,
              "column": 58
            },
            "end": {
              "line": 232,
              "column": 13
            }
          },
          "line": 228
        },
        "12": {
          "name": "validateTemplateStructure",
          "decl": {
            "start": {
              "line": 242,
              "column": 15
            },
            "end": {
              "line": 242,
              "column": 40
            }
          },
          "loc": {
            "start": {
              "line": 242,
              "column": 63
            },
            "end": {
              "line": 298,
              "column": 1
            }
          },
          "line": 242
        },
        "13": {
          "name": "validateBuildParameters",
          "decl": {
            "start": {
              "line": 305,
              "column": 9
            },
            "end": {
              "line": 305,
              "column": 32
            }
          },
          "loc": {
            "start": {
              "line": 305,
              "column": 54
            },
            "end": {
              "line": 352,
              "column": 1
            }
          },
          "line": 305
        },
        "14": {
          "name": "(anonymous_14)",
          "decl": {
            "start": {
              "line": 344,
              "column": 60
            },
            "end": {
              "line": 344,
              "column": 61
            }
          },
          "loc": {
            "start": {
              "line": 344,
              "column": 65
            },
            "end": {
              "line": 344,
              "column": 73
            }
          },
          "line": 344
        },
        "15": {
          "name": "(anonymous_15)",
          "decl": {
            "start": {
              "line": 345,
              "column": 34
            },
            "end": {
              "line": 345,
              "column": 35
            }
          },
          "loc": {
            "start": {
              "line": 345,
              "column": 47
            },
            "end": {
              "line": 349,
              "column": 13
            }
          },
          "line": 345
        },
        "16": {
          "name": "validate",
          "decl": {
            "start": {
              "line": 358,
              "column": 15
            },
            "end": {
              "line": 358,
              "column": 23
            }
          },
          "loc": {
            "start": {
              "line": 358,
              "column": 38
            },
            "end": {
              "line": 460,
              "column": 1
            }
          },
          "line": 358
        },
        "17": {
          "name": "(anonymous_17)",
          "decl": {
            "start": {
              "line": 374,
              "column": 70
            },
            "end": {
              "line": 374,
              "column": 71
            }
          },
          "loc": {
            "start": {
              "line": 374,
              "column": 78
            },
            "end": {
              "line": 376,
              "column": 17
            }
          },
          "line": 374
        },
        "18": {
          "name": "(anonymous_18)",
          "decl": {
            "start": {
              "line": 420,
              "column": 28
            },
            "end": {
              "line": 420,
              "column": 29
            }
          },
          "loc": {
            "start": {
              "line": 420,
              "column": 36
            },
            "end": {
              "line": 422,
              "column": 9
            }
          },
          "line": 420
        },
        "19": {
          "name": "(anonymous_19)",
          "decl": {
            "start": {
              "line": 428,
              "column": 32
            },
            "end": {
              "line": 428,
              "column": 33
            }
          },
          "loc": {
            "start": {
              "line": 428,
              "column": 40
            },
            "end": {
              "line": 433,
              "column": 9
            }
          },
          "line": 428
        },
        "20": {
          "name": "(anonymous_20)",
          "decl": {
            "start": {
              "line": 439,
              "column": 30
            },
            "end": {
              "line": 439,
              "column": 31
            }
          },
          "loc": {
            "start": {
              "line": 439,
              "column": 38
            },
            "end": {
              "line": 444,
              "column": 9
            }
          },
          "line": 439
        },
        "21": {
          "name": "(anonymous_21)",
          "decl": {
            "start": {
              "line": 504,
              "column": 27
            },
            "end": {
              "line": 504,
              "column": 28
            }
          },
          "loc": {
            "start": {
              "line": 504,
              "column": 37
            },
            "end": {
              "line": 506,
              "column": 5
            }
          },
          "line": 504
        },
        "22": {
          "name": "(anonymous_22)",
          "decl": {
            "start": {
              "line": 506,
              "column": 13
            },
            "end": {
              "line": 506,
              "column": 14
            }
          },
          "loc": {
            "start": {
              "line": 506,
              "column": 22
            },
            "end": {
              "line": 509,
              "column": 5
            }
          },
          "line": 506
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 33,
              "column": 22
            },
            "end": {
              "line": 33,
              "column": 34
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 33,
                "column": 32
              },
              "end": {
                "line": 33,
                "column": 34
              }
            }
          ],
          "line": 33
        },
        "1": {
          "loc": {
            "start": {
              "line": 38,
              "column": 24
            },
            "end": {
              "line": 38,
              "column": 36
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 38,
                "column": 34
              },
              "end": {
                "line": 38,
                "column": 36
              }
            }
          ],
          "line": 38
        },
        "2": {
          "loc": {
            "start": {
              "line": 42,
              "column": 21
            },
            "end": {
              "line": 42,
              "column": 33
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 42,
                "column": 31
              },
              "end": {
                "line": 42,
                "column": 33
              }
            }
          ],
          "line": 42
        },
        "3": {
          "loc": {
            "start": {
              "line": 47,
              "column": 15
            },
            "end": {
              "line": 47,
              "column": 65
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 47,
                "column": 15
              },
              "end": {
                "line": 47,
                "column": 37
              }
            },
            {
              "start": {
                "line": 47,
                "column": 41
              },
              "end": {
                "line": 47,
                "column": 65
              }
            }
          ],
          "line": 47
        },
        "4": {
          "loc": {
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 60,
                "column": 8
              },
              "end": {
                "line": 63,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 60
        },
        "5": {
          "loc": {
            "start": {
              "line": 82,
              "column": 8
            },
            "end": {
              "line": 85,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 82,
                "column": 8
              },
              "end": {
                "line": 85,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 82
        },
        "6": {
          "loc": {
            "start": {
              "line": 99,
              "column": 8
            },
            "end": {
              "line": 112,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 99,
                "column": 8
              },
              "end": {
                "line": 112,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 99
        },
        "7": {
          "loc": {
            "start": {
              "line": 101,
              "column": 12
            },
            "end": {
              "line": 111,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 101,
                "column": 12
              },
              "end": {
                "line": 111,
                "column": 13
              }
            },
            {
              "start": {
                "line": 109,
                "column": 19
              },
              "end": {
                "line": 111,
                "column": 13
              }
            }
          ],
          "line": 101
        },
        "8": {
          "loc": {
            "start": {
              "line": 115,
              "column": 8
            },
            "end": {
              "line": 127,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 115,
                "column": 8
              },
              "end": {
                "line": 127,
                "column": 9
              }
            },
            {
              "start": {
                "line": 125,
                "column": 15
              },
              "end": {
                "line": 127,
                "column": 9
              }
            }
          ],
          "line": 115
        },
        "9": {
          "loc": {
            "start": {
              "line": 116,
              "column": 12
            },
            "end": {
              "line": 118,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 116,
                "column": 12
              },
              "end": {
                "line": 118,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 116
        },
        "10": {
          "loc": {
            "start": {
              "line": 119,
              "column": 12
            },
            "end": {
              "line": 121,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 119,
                "column": 12
              },
              "end": {
                "line": 121,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 119
        },
        "11": {
          "loc": {
            "start": {
              "line": 122,
              "column": 12
            },
            "end": {
              "line": 124,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 122,
                "column": 12
              },
              "end": {
                "line": 124,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 122
        },
        "12": {
          "loc": {
            "start": {
              "line": 130,
              "column": 8
            },
            "end": {
              "line": 136,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 130,
                "column": 8
              },
              "end": {
                "line": 136,
                "column": 9
              }
            },
            {
              "start": {
                "line": 134,
                "column": 15
              },
              "end": {
                "line": 136,
                "column": 9
              }
            }
          ],
          "line": 130
        },
        "13": {
          "loc": {
            "start": {
              "line": 139,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 139,
                "column": 8
              },
              "end": {
                "line": 141,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 139
        },
        "14": {
          "loc": {
            "start": {
              "line": 157,
              "column": 4
            },
            "end": {
              "line": 161,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 157,
                "column": 4
              },
              "end": {
                "line": 161,
                "column": 5
              }
            },
            {
              "start": {
                "line": 159,
                "column": 11
              },
              "end": {
                "line": 161,
                "column": 5
              }
            }
          ],
          "line": 157
        },
        "15": {
          "loc": {
            "start": {
              "line": 159,
              "column": 11
            },
            "end": {
              "line": 161,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 159,
                "column": 11
              },
              "end": {
                "line": 161,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 159
        },
        "16": {
          "loc": {
            "start": {
              "line": 163,
              "column": 4
            },
            "end": {
              "line": 165,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 163,
                "column": 4
              },
              "end": {
                "line": 165,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 163
        },
        "17": {
          "loc": {
            "start": {
              "line": 167,
              "column": 4
            },
            "end": {
              "line": 169,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 167,
                "column": 4
              },
              "end": {
                "line": 169,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 167
        },
        "18": {
          "loc": {
            "start": {
              "line": 172,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 172,
                "column": 4
              },
              "end": {
                "line": 179,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 172
        },
        "19": {
          "loc": {
            "start": {
              "line": 174,
              "column": 8
            },
            "end": {
              "line": 178,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 174,
                "column": 8
              },
              "end": {
                "line": 178,
                "column": 9
              }
            },
            {
              "start": {
                "line": 176,
                "column": 15
              },
              "end": {
                "line": 178,
                "column": 9
              }
            }
          ],
          "line": 174
        },
        "20": {
          "loc": {
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 182,
                "column": 4
              },
              "end": {
                "line": 195,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 182
        },
        "21": {
          "loc": {
            "start": {
              "line": 183,
              "column": 8
            },
            "end": {
              "line": 194,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 183,
                "column": 8
              },
              "end": {
                "line": 194,
                "column": 9
              }
            },
            {
              "start": {
                "line": 185,
                "column": 15
              },
              "end": {
                "line": 194,
                "column": 9
              }
            }
          ],
          "line": 183
        },
        "22": {
          "loc": {
            "start": {
              "line": 187,
              "column": 16
            },
            "end": {
              "line": 192,
              "column": 17
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 187,
                "column": 16
              },
              "end": {
                "line": 192,
                "column": 17
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 187
        },
        "23": {
          "loc": {
            "start": {
              "line": 189,
              "column": 20
            },
            "end": {
              "line": 191,
              "column": 21
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 189,
                "column": 20
              },
              "end": {
                "line": 191,
                "column": 21
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 189
        },
        "24": {
          "loc": {
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 198,
                "column": 4
              },
              "end": {
                "line": 206,
                "column": 5
              }
            },
            {
              "start": {
                "line": 202,
                "column": 11
              },
              "end": {
                "line": 206,
                "column": 5
              }
            }
          ],
          "line": 198
        },
        "25": {
          "loc": {
            "start": {
              "line": 199,
              "column": 8
            },
            "end": {
              "line": 201,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 199,
                "column": 8
              },
              "end": {
                "line": 201,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 199
        },
        "26": {
          "loc": {
            "start": {
              "line": 202,
              "column": 11
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 202,
                "column": 11
              },
              "end": {
                "line": 206,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 202
        },
        "27": {
          "loc": {
            "start": {
              "line": 203,
              "column": 8
            },
            "end": {
              "line": 205,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 203,
                "column": 8
              },
              "end": {
                "line": 205,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 203
        },
        "28": {
          "loc": {
            "start": {
              "line": 203,
              "column": 12
            },
            "end": {
              "line": 203,
              "column": 51
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 203,
                "column": 12
              },
              "end": {
                "line": 203,
                "column": 34
              }
            },
            {
              "start": {
                "line": 203,
                "column": 38
              },
              "end": {
                "line": 203,
                "column": 51
              }
            }
          ],
          "line": 203
        },
        "29": {
          "loc": {
            "start": {
              "line": 216,
              "column": 4
            },
            "end": {
              "line": 222,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 216,
                "column": 4
              },
              "end": {
                "line": 222,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 216
        },
        "30": {
          "loc": {
            "start": {
              "line": 219,
              "column": 8
            },
            "end": {
              "line": 221,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 219,
                "column": 8
              },
              "end": {
                "line": 221,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 219
        },
        "31": {
          "loc": {
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 234,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 224,
                "column": 4
              },
              "end": {
                "line": 234,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 224
        },
        "32": {
          "loc": {
            "start": {
              "line": 225,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 225,
                "column": 8
              },
              "end": {
                "line": 233,
                "column": 9
              }
            },
            {
              "start": {
                "line": 227,
                "column": 15
              },
              "end": {
                "line": 233,
                "column": 9
              }
            }
          ],
          "line": 225
        },
        "33": {
          "loc": {
            "start": {
              "line": 229,
              "column": 16
            },
            "end": {
              "line": 231,
              "column": 17
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 229,
                "column": 16
              },
              "end": {
                "line": 231,
                "column": 17
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 229
        },
        "34": {
          "loc": {
            "start": {
              "line": 229,
              "column": 20
            },
            "end": {
              "line": 229,
              "column": 62
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 229,
                "column": 20
              },
              "end": {
                "line": 229,
                "column": 46
              }
            },
            {
              "start": {
                "line": 229,
                "column": 50
              },
              "end": {
                "line": 229,
                "column": 62
              }
            }
          ],
          "line": 229
        },
        "35": {
          "loc": {
            "start": {
              "line": 245,
              "column": 4
            },
            "end": {
              "line": 248,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 245,
                "column": 4
              },
              "end": {
                "line": 248,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 245
        },
        "36": {
          "loc": {
            "start": {
              "line": 256,
              "column": 8
            },
            "end": {
              "line": 264,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 256,
                "column": 8
              },
              "end": {
                "line": 264,
                "column": 9
              }
            },
            {
              "start": {
                "line": 262,
                "column": 15
              },
              "end": {
                "line": 264,
                "column": 9
              }
            }
          ],
          "line": 256
        },
        "37": {
          "loc": {
            "start": {
              "line": 257,
              "column": 12
            },
            "end": {
              "line": 261,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 257,
                "column": 12
              },
              "end": {
                "line": 261,
                "column": 13
              }
            },
            {
              "start": {
                "line": 259,
                "column": 19
              },
              "end": {
                "line": 261,
                "column": 13
              }
            }
          ],
          "line": 257
        },
        "38": {
          "loc": {
            "start": {
              "line": 270,
              "column": 8
            },
            "end": {
              "line": 276,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 270,
                "column": 8
              },
              "end": {
                "line": 276,
                "column": 9
              }
            },
            {
              "start": {
                "line": 272,
                "column": 15
              },
              "end": {
                "line": 276,
                "column": 9
              }
            }
          ],
          "line": 270
        },
        "39": {
          "loc": {
            "start": {
              "line": 272,
              "column": 15
            },
            "end": {
              "line": 276,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 272,
                "column": 15
              },
              "end": {
                "line": 276,
                "column": 9
              }
            },
            {
              "start": {
                "line": 274,
                "column": 15
              },
              "end": {
                "line": 276,
                "column": 9
              }
            }
          ],
          "line": 272
        },
        "40": {
          "loc": {
            "start": {
              "line": 281,
              "column": 4
            },
            "end": {
              "line": 291,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 281,
                "column": 4
              },
              "end": {
                "line": 291,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 281
        },
        "41": {
          "loc": {
            "start": {
              "line": 285,
              "column": 12
            },
            "end": {
              "line": 287,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 285,
                "column": 12
              },
              "end": {
                "line": 287,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 285
        },
        "42": {
          "loc": {
            "start": {
              "line": 285,
              "column": 16
            },
            "end": {
              "line": 285,
              "column": 82
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 285,
                "column": 16
              },
              "end": {
                "line": 285,
                "column": 46
              }
            },
            {
              "start": {
                "line": 285,
                "column": 50
              },
              "end": {
                "line": 285,
                "column": 82
              }
            }
          ],
          "line": 285
        },
        "43": {
          "loc": {
            "start": {
              "line": 295,
              "column": 4
            },
            "end": {
              "line": 297,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 295,
                "column": 4
              },
              "end": {
                "line": 297,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 295
        },
        "44": {
          "loc": {
            "start": {
              "line": 309,
              "column": 4
            },
            "end": {
              "line": 311,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 309,
                "column": 4
              },
              "end": {
                "line": 311,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 309
        },
        "45": {
          "loc": {
            "start": {
              "line": 314,
              "column": 4
            },
            "end": {
              "line": 316,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 314,
                "column": 4
              },
              "end": {
                "line": 316,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 314
        },
        "46": {
          "loc": {
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 334,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 319,
                "column": 4
              },
              "end": {
                "line": 334,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 319
        },
        "47": {
          "loc": {
            "start": {
              "line": 320,
              "column": 8
            },
            "end": {
              "line": 322,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 320,
                "column": 8
              },
              "end": {
                "line": 322,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 320
        },
        "48": {
          "loc": {
            "start": {
              "line": 320,
              "column": 12
            },
            "end": {
              "line": 320,
              "column": 45
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 320,
                "column": 12
              },
              "end": {
                "line": 320,
                "column": 26
              }
            },
            {
              "start": {
                "line": 320,
                "column": 30
              },
              "end": {
                "line": 320,
                "column": 45
              }
            }
          ],
          "line": 320
        },
        "49": {
          "loc": {
            "start": {
              "line": 324,
              "column": 8
            },
            "end": {
              "line": 333,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 324,
                "column": 8
              },
              "end": {
                "line": 333,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 324
        },
        "50": {
          "loc": {
            "start": {
              "line": 327,
              "column": 16
            },
            "end": {
              "line": 329,
              "column": 17
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 327,
                "column": 16
              },
              "end": {
                "line": 329,
                "column": 17
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 327
        },
        "51": {
          "loc": {
            "start": {
              "line": 337,
              "column": 4
            },
            "end": {
              "line": 339,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 337,
                "column": 4
              },
              "end": {
                "line": 339,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 337
        },
        "52": {
          "loc": {
            "start": {
              "line": 337,
              "column": 8
            },
            "end": {
              "line": 337,
              "column": 86
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 337,
                "column": 8
              },
              "end": {
                "line": 337,
                "column": 19
              }
            },
            {
              "start": {
                "line": 337,
                "column": 23
              },
              "end": {
                "line": 337,
                "column": 86
              }
            }
          ],
          "line": 337
        },
        "53": {
          "loc": {
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 351,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 342,
                "column": 4
              },
              "end": {
                "line": 351,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 342
        },
        "54": {
          "loc": {
            "start": {
              "line": 343,
              "column": 8
            },
            "end": {
              "line": 350,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 343,
                "column": 8
              },
              "end": {
                "line": 350,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 343
        },
        "55": {
          "loc": {
            "start": {
              "line": 346,
              "column": 16
            },
            "end": {
              "line": 348,
              "column": 17
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 346,
                "column": 16
              },
              "end": {
                "line": 348,
                "column": 17
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 346
        },
        "56": {
          "loc": {
            "start": {
              "line": 358,
              "column": 24
            },
            "end": {
              "line": 358,
              "column": 36
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 358,
                "column": 34
              },
              "end": {
                "line": 358,
                "column": 36
              }
            }
          ],
          "line": 358
        },
        "57": {
          "loc": {
            "start": {
              "line": 366,
              "column": 28
            },
            "end": {
              "line": 366,
              "column": 77
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 366,
                "column": 28
              },
              "end": {
                "line": 366,
                "column": 47
              }
            },
            {
              "start": {
                "line": 366,
                "column": 51
              },
              "end": {
                "line": 366,
                "column": 77
              }
            }
          ],
          "line": 366
        },
        "58": {
          "loc": {
            "start": {
              "line": 369,
              "column": 8
            },
            "end": {
              "line": 387,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 369,
                "column": 8
              },
              "end": {
                "line": 387,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 369
        },
        "59": {
          "loc": {
            "start": {
              "line": 373,
              "column": 12
            },
            "end": {
              "line": 386,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 373,
                "column": 12
              },
              "end": {
                "line": 386,
                "column": 13
              }
            },
            {
              "start": {
                "line": 384,
                "column": 19
              },
              "end": {
                "line": 386,
                "column": 13
              }
            }
          ],
          "line": 373
        },
        "60": {
          "loc": {
            "start": {
              "line": 390,
              "column": 8
            },
            "end": {
              "line": 394,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 390,
                "column": 8
              },
              "end": {
                "line": 394,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 390
        },
        "61": {
          "loc": {
            "start": {
              "line": 397,
              "column": 8
            },
            "end": {
              "line": 400,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 397,
                "column": 8
              },
              "end": {
                "line": 400,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 397
        },
        "62": {
          "loc": {
            "start": {
              "line": 403,
              "column": 8
            },
            "end": {
              "line": 406,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 403,
                "column": 8
              },
              "end": {
                "line": 406,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 403
        },
        "63": {
          "loc": {
            "start": {
              "line": 418,
              "column": 4
            },
            "end": {
              "line": 423,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 418,
                "column": 4
              },
              "end": {
                "line": 423,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 418
        },
        "64": {
          "loc": {
            "start": {
              "line": 426,
              "column": 4
            },
            "end": {
              "line": 434,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 426,
                "column": 4
              },
              "end": {
                "line": 434,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 426
        },
        "65": {
          "loc": {
            "start": {
              "line": 430,
              "column": 12
            },
            "end": {
              "line": 432,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 430,
                "column": 12
              },
              "end": {
                "line": 432,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 430
        },
        "66": {
          "loc": {
            "start": {
              "line": 430,
              "column": 16
            },
            "end": {
              "line": 430,
              "column": 68
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 430,
                "column": 16
              },
              "end": {
                "line": 430,
                "column": 28
              }
            },
            {
              "start": {
                "line": 430,
                "column": 32
              },
              "end": {
                "line": 430,
                "column": 68
              }
            }
          ],
          "line": 430
        },
        "67": {
          "loc": {
            "start": {
              "line": 437,
              "column": 4
            },
            "end": {
              "line": 445,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 437,
                "column": 4
              },
              "end": {
                "line": 445,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 437
        },
        "68": {
          "loc": {
            "start": {
              "line": 441,
              "column": 12
            },
            "end": {
              "line": 443,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 441,
                "column": 12
              },
              "end": {
                "line": 443,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 441
        },
        "69": {
          "loc": {
            "start": {
              "line": 441,
              "column": 16
            },
            "end": {
              "line": 441,
              "column": 68
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 441,
                "column": 16
              },
              "end": {
                "line": 441,
                "column": 28
              }
            },
            {
              "start": {
                "line": 441,
                "column": 32
              },
              "end": {
                "line": 441,
                "column": 68
              }
            }
          ],
          "line": 441
        },
        "70": {
          "loc": {
            "start": {
              "line": 449,
              "column": 4
            },
            "end": {
              "line": 457,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 449,
                "column": 4
              },
              "end": {
                "line": 457,
                "column": 5
              }
            },
            {
              "start": {
                "line": 454,
                "column": 11
              },
              "end": {
                "line": 457,
                "column": 5
              }
            }
          ],
          "line": 449
        },
        "71": {
          "loc": {
            "start": {
              "line": 451,
              "column": 8
            },
            "end": {
              "line": 453,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 451,
                "column": 8
              },
              "end": {
                "line": 453,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 451
        },
        "72": {
          "loc": {
            "start": {
              "line": 463,
              "column": 0
            },
            "end": {
              "line": 510,
              "column": 1
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 463,
                "column": 0
              },
              "end": {
                "line": 510,
                "column": 1
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 463
        },
        "73": {
          "loc": {
            "start": {
              "line": 476,
              "column": 8
            },
            "end": {
              "line": 501,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 476,
                "column": 8
              },
              "end": {
                "line": 501,
                "column": 9
              }
            },
            {
              "start": {
                "line": 479,
                "column": 15
              },
              "end": {
                "line": 501,
                "column": 9
              }
            }
          ],
          "line": 476
        },
        "74": {
          "loc": {
            "start": {
              "line": 476,
              "column": 12
            },
            "end": {
              "line": 476,
              "column": 55
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 476,
                "column": 12
              },
              "end": {
                "line": 476,
                "column": 32
              }
            },
            {
              "start": {
                "line": 476,
                "column": 36
              },
              "end": {
                "line": 476,
                "column": 55
              }
            }
          ],
          "line": 476
        },
        "75": {
          "loc": {
            "start": {
              "line": 479,
              "column": 15
            },
            "end": {
              "line": 501,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 479,
                "column": 15
              },
              "end": {
                "line": 501,
                "column": 9
              }
            },
            {
              "start": {
                "line": 482,
                "column": 15
              },
              "end": {
                "line": 501,
                "column": 9
              }
            }
          ],
          "line": 479
        },
        "76": {
          "loc": {
            "start": {
              "line": 479,
              "column": 19
            },
            "end": {
              "line": 479,
              "column": 69
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 479,
                "column": 19
              },
              "end": {
                "line": 479,
                "column": 46
              }
            },
            {
              "start": {
                "line": 479,
                "column": 50
              },
              "end": {
                "line": 479,
                "column": 69
              }
            }
          ],
          "line": 479
        },
        "77": {
          "loc": {
            "start": {
              "line": 482,
              "column": 15
            },
            "end": {
              "line": 501,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 482,
                "column": 15
              },
              "end": {
                "line": 501,
                "column": 9
              }
            },
            {
              "start": {
                "line": 484,
                "column": 15
              },
              "end": {
                "line": 501,
                "column": 9
              }
            }
          ],
          "line": 482
        },
        "78": {
          "loc": {
            "start": {
              "line": 484,
              "column": 15
            },
            "end": {
              "line": 501,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 484,
                "column": 15
              },
              "end": {
                "line": 501,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 484
        },
        "79": {
          "loc": {
            "start": {
              "line": 505,
              "column": 21
            },
            "end": {
              "line": 505,
              "column": 41
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 505,
                "column": 36
              },
              "end": {
                "line": 505,
                "column": 37
              }
            },
            {
              "start": {
                "line": 505,
                "column": 40
              },
              "end": {
                "line": 505,
                "column": 41
              }
            }
          ],
          "line": 505
        }
      },
      "s": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 0,
        "104": 0,
        "105": 0,
        "106": 0,
        "107": 0,
        "108": 0,
        "109": 0,
        "110": 0,
        "111": 0,
        "112": 0,
        "113": 0,
        "114": 0,
        "115": 0,
        "116": 0,
        "117": 0,
        "118": 0,
        "119": 0,
        "120": 0,
        "121": 0,
        "122": 0,
        "123": 0,
        "124": 0,
        "125": 0,
        "126": 0,
        "127": 0,
        "128": 0,
        "129": 0,
        "130": 0,
        "131": 0,
        "132": 0,
        "133": 0,
        "134": 0,
        "135": 0,
        "136": 0,
        "137": 0,
        "138": 0,
        "139": 0,
        "140": 0,
        "141": 0,
        "142": 0,
        "143": 0,
        "144": 0,
        "145": 0,
        "146": 0,
        "147": 0,
        "148": 0,
        "149": 0,
        "150": 0,
        "151": 0,
        "152": 0,
        "153": 0,
        "154": 0,
        "155": 0,
        "156": 0,
        "157": 0,
        "158": 0,
        "159": 0,
        "160": 0,
        "161": 0,
        "162": 0,
        "163": 0,
        "164": 0,
        "165": 0,
        "166": 0,
        "167": 0,
        "168": 0,
        "169": 0,
        "170": 0,
        "171": 0,
        "172": 0,
        "173": 0,
        "174": 0,
        "175": 0,
        "176": 0,
        "177": 0,
        "178": 0,
        "179": 0,
        "180": 0,
        "181": 0,
        "182": 0,
        "183": 0,
        "184": 0,
        "185": 0,
        "186": 0,
        "187": 0,
        "188": 0,
        "189": 0,
        "190": 0,
        "191": 0,
        "192": 0,
        "193": 0,
        "194": 0,
        "195": 0,
        "196": 0,
        "197": 0,
        "198": 0,
        "199": 0,
        "200": 0,
        "201": 0,
        "202": 0,
        "203": 0,
        "204": 0,
        "205": 0,
        "206": 0,
        "207": 0,
        "208": 0,
        "209": 0,
        "210": 0,
        "211": 0,
        "212": 0,
        "213": 0,
        "214": 0,
        "215": 0,
        "216": 0,
        "217": 0,
        "218": 0,
        "219": 0,
        "220": 0,
        "221": 0,
        "222": 0
      },
      "f": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0
      },
      "b": {
        "0": [
          0
        ],
        "1": [
          0
        ],
        "2": [
          0
        ],
        "3": [
          0,
          0
        ],
        "4": [
          0,
          0
        ],
        "5": [
          0,
          0
        ],
        "6": [
          0,
          0
        ],
        "7": [
          0,
          0
        ],
        "8": [
          0,
          0
        ],
        "9": [
          0,
          0
        ],
        "10": [
          0,
          0
        ],
        "11": [
          0,
          0
        ],
        "12": [
          0,
          0
        ],
        "13": [
          0,
          0
        ],
        "14": [
          0,
          0
        ],
        "15": [
          0,
          0
        ],
        "16": [
          0,
          0
        ],
        "17": [
          0,
          0
        ],
        "18": [
          0,
          0
        ],
        "19": [
          0,
          0
        ],
        "20": [
          0,
          0
        ],
        "21": [
          0,
          0
        ],
        "22": [
          0,
          0
        ],
        "23": [
          0,
          0
        ],
        "24": [
          0,
          0
        ],
        "25": [
          0,
          0
        ],
        "26": [
          0,
          0
        ],
        "27": [
          0,
          0
        ],
        "28": [
          0,
          0
        ],
        "29": [
          0,
          0
        ],
        "30": [
          0,
          0
        ],
        "31": [
          0,
          0
        ],
        "32": [
          0,
          0
        ],
        "33": [
          0,
          0
        ],
        "34": [
          0,
          0
        ],
        "35": [
          0,
          0
        ],
        "36": [
          0,
          0
        ],
        "37": [
          0,
          0
        ],
        "38": [
          0,
          0
        ],
        "39": [
          0,
          0
        ],
        "40": [
          0,
          0
        ],
        "41": [
          0,
          0
        ],
        "42": [
          0,
          0
        ],
        "43": [
          0,
          0
        ],
        "44": [
          0,
          0
        ],
        "45": [
          0,
          0
        ],
        "46": [
          0,
          0
        ],
        "47": [
          0,
          0
        ],
        "48": [
          0,
          0
        ],
        "49": [
          0,
          0
        ],
        "50": [
          0,
          0
        ],
        "51": [
          0,
          0
        ],
        "52": [
          0,
          0
        ],
        "53": [
          0,
          0
        ],
        "54": [
          0,
          0
        ],
        "55": [
          0,
          0
        ],
        "56": [
          0
        ],
        "57": [
          0,
          0
        ],
        "58": [
          0,
          0
        ],
        "59": [
          0,
          0
        ],
        "60": [
          0,
          0
        ],
        "61": [
          0,
          0
        ],
        "62": [
          0,
          0
        ],
        "63": [
          0,
          0
        ],
        "64": [
          0,
          0
        ],
        "65": [
          0,
          0
        ],
        "66": [
          0,
          0
        ],
        "67": [
          0,
          0
        ],
        "68": [
          0,
          0
        ],
        "69": [
          0,
          0
        ],
        "70": [
          0,
          0
        ],
        "71": [
          0,
          0
        ],
        "72": [
          0,
          0
        ],
        "73": [
          0,
          0
        ],
        "74": [
          0,
          0
        ],
        "75": [
          0,
          0
        ],
        "76": [
          0,
          0
        ],
        "77": [
          0,
          0
        ],
        "78": [
          0,
          0
        ],
        "79": [
          0,
          0
        ]
      }
    },
    "/root/info-tech-io/hugo-templates/scripts/commands/build.js": {
      "path": "/root/info-tech-io/hugo-templates/scripts/commands/build.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 14
          },
          "end": {
            "line": 1,
            "column": 30
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 11
          },
          "end": {
            "line": 2,
            "column": 30
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 13
          },
          "end": {
            "line": 3,
            "column": 28
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 12
          },
          "end": {
            "line": 4,
            "column": 26
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 21
          },
          "end": {
            "line": 5,
            "column": 45
          }
        },
        "5": {
          "start": {
            "line": 12,
            "column": 2
          },
          "end": {
            "line": 12,
            "column": 62
          }
        },
        "6": {
          "start": {
            "line": 13,
            "column": 2
          },
          "end": {
            "line": 13,
            "column": 42
          }
        },
        "7": {
          "start": {
            "line": 15,
            "column": 2
          },
          "end": {
            "line": 52,
            "column": 3
          }
        },
        "8": {
          "start": {
            "line": 17,
            "column": 4
          },
          "end": {
            "line": 17,
            "column": 40
          }
        },
        "9": {
          "start": {
            "line": 20,
            "column": 4
          },
          "end": {
            "line": 20,
            "column": 57
          }
        },
        "10": {
          "start": {
            "line": 21,
            "column": 4
          },
          "end": {
            "line": 21,
            "column": 65
          }
        },
        "11": {
          "start": {
            "line": 22,
            "column": 4
          },
          "end": {
            "line": 22,
            "column": 59
          }
        },
        "12": {
          "start": {
            "line": 23,
            "column": 4
          },
          "end": {
            "line": 23,
            "column": 110
          }
        },
        "13": {
          "start": {
            "line": 24,
            "column": 4
          },
          "end": {
            "line": 24,
            "column": 61
          }
        },
        "14": {
          "start": {
            "line": 25,
            "column": 4
          },
          "end": {
            "line": 25,
            "column": 71
          }
        },
        "15": {
          "start": {
            "line": 27,
            "column": 4
          },
          "end": {
            "line": 34,
            "column": 5
          }
        },
        "16": {
          "start": {
            "line": 28,
            "column": 6
          },
          "end": {
            "line": 28,
            "column": 59
          }
        },
        "17": {
          "start": {
            "line": 29,
            "column": 6
          },
          "end": {
            "line": 29,
            "column": 71
          }
        },
        "18": {
          "start": {
            "line": 30,
            "column": 6
          },
          "end": {
            "line": 30,
            "column": 69
          }
        },
        "19": {
          "start": {
            "line": 31,
            "column": 6
          },
          "end": {
            "line": 31,
            "column": 71
          }
        },
        "20": {
          "start": {
            "line": 32,
            "column": 6
          },
          "end": {
            "line": 32,
            "column": 78
          }
        },
        "21": {
          "start": {
            "line": 33,
            "column": 6
          },
          "end": {
            "line": 33,
            "column": 67
          }
        },
        "22": {
          "start": {
            "line": 37,
            "column": 25
          },
          "end": {
            "line": 37,
            "column": 82
          }
        },
        "23": {
          "start": {
            "line": 38,
            "column": 4
          },
          "end": {
            "line": 40,
            "column": 5
          }
        },
        "24": {
          "start": {
            "line": 39,
            "column": 6
          },
          "end": {
            "line": 39,
            "column": 66
          }
        },
        "25": {
          "start": {
            "line": 42,
            "column": 4
          },
          "end": {
            "line": 42,
            "column": 66
          }
        },
        "26": {
          "start": {
            "line": 45,
            "column": 4
          },
          "end": {
            "line": 45,
            "column": 62
          }
        },
        "27": {
          "start": {
            "line": 46,
            "column": 4
          },
          "end": {
            "line": 46,
            "column": 32
          }
        },
        "28": {
          "start": {
            "line": 49,
            "column": 4
          },
          "end": {
            "line": 49,
            "column": 50
          }
        },
        "29": {
          "start": {
            "line": 50,
            "column": 4
          },
          "end": {
            "line": 50,
            "column": 52
          }
        },
        "30": {
          "start": {
            "line": 51,
            "column": 4
          },
          "end": {
            "line": 51,
            "column": 20
          }
        },
        "31": {
          "start": {
            "line": 60,
            "column": 2
          },
          "end": {
            "line": 80,
            "column": 3
          }
        },
        "32": {
          "start": {
            "line": 61,
            "column": 23
          },
          "end": {
            "line": 61,
            "column": 71
          }
        },
        "33": {
          "start": {
            "line": 62,
            "column": 19
          },
          "end": {
            "line": 62,
            "column": 48
          }
        },
        "34": {
          "start": {
            "line": 64,
            "column": 16
          },
          "end": {
            "line": 64,
            "column": 44
          }
        },
        "35": {
          "start": {
            "line": 65,
            "column": 21
          },
          "end": {
            "line": 65,
            "column": 40
          }
        },
        "36": {
          "start": {
            "line": 67,
            "column": 18
          },
          "end": {
            "line": 67,
            "column": 35
          }
        },
        "37": {
          "start": {
            "line": 68,
            "column": 4
          },
          "end": {
            "line": 73,
            "column": 5
          }
        },
        "38": {
          "start": {
            "line": 69,
            "column": 21
          },
          "end": {
            "line": 71,
            "column": 18
          }
        },
        "39": {
          "start": {
            "line": 70,
            "column": 8
          },
          "end": {
            "line": 70,
            "column": 45
          }
        },
        "40": {
          "start": {
            "line": 72,
            "column": 6
          },
          "end": {
            "line": 72,
            "column": 54
          }
        },
        "41": {
          "start": {
            "line": 75,
            "column": 4
          },
          "end": {
            "line": 79,
            "column": 5
          }
        },
        "42": {
          "start": {
            "line": 76,
            "column": 6
          },
          "end": {
            "line": 76,
            "column": 83
          }
        },
        "43": {
          "start": {
            "line": 78,
            "column": 6
          },
          "end": {
            "line": 78,
            "column": 18
          }
        },
        "44": {
          "start": {
            "line": 88,
            "column": 15
          },
          "end": {
            "line": 88,
            "column": 30
          }
        },
        "45": {
          "start": {
            "line": 90,
            "column": 23
          },
          "end": {
            "line": 90,
            "column": 80
          }
        },
        "46": {
          "start": {
            "line": 91,
            "column": 21
          },
          "end": {
            "line": 91,
            "column": 49
          }
        },
        "47": {
          "start": {
            "line": 93,
            "column": 2
          },
          "end": {
            "line": 93,
            "column": 73
          }
        },
        "48": {
          "start": {
            "line": 96,
            "column": 2
          },
          "end": {
            "line": 96,
            "column": 33
          }
        },
        "49": {
          "start": {
            "line": 98,
            "column": 2
          },
          "end": {
            "line": 98,
            "column": 76
          }
        },
        "50": {
          "start": {
            "line": 101,
            "column": 28
          },
          "end": {
            "line": 101,
            "column": 69
          }
        },
        "51": {
          "start": {
            "line": 102,
            "column": 23
          },
          "end": {
            "line": 102,
            "column": 25
          }
        },
        "52": {
          "start": {
            "line": 104,
            "column": 2
          },
          "end": {
            "line": 112,
            "column": 3
          }
        },
        "53": {
          "start": {
            "line": 105,
            "column": 30
          },
          "end": {
            "line": 105,
            "column": 74
          }
        },
        "54": {
          "start": {
            "line": 106,
            "column": 4
          },
          "end": {
            "line": 106,
            "column": 51
          }
        },
        "55": {
          "start": {
            "line": 108,
            "column": 4
          },
          "end": {
            "line": 111,
            "column": 5
          }
        },
        "56": {
          "start": {
            "line": 109,
            "column": 6
          },
          "end": {
            "line": 109,
            "column": 124
          }
        },
        "57": {
          "start": {
            "line": 110,
            "column": 6
          },
          "end": {
            "line": 110,
            "column": 117
          }
        },
        "58": {
          "start": {
            "line": 114,
            "column": 2
          },
          "end": {
            "line": 114,
            "column": 68
          }
        },
        "59": {
          "start": {
            "line": 117,
            "column": 2
          },
          "end": {
            "line": 125,
            "column": 5
          }
        },
        "60": {
          "start": {
            "line": 120,
            "column": 27
          },
          "end": {
            "line": 120,
            "column": 59
          }
        },
        "61": {
          "start": {
            "line": 121,
            "column": 6
          },
          "end": {
            "line": 123,
            "column": 48
          }
        },
        "62": {
          "start": {
            "line": 127,
            "column": 2
          },
          "end": {
            "line": 127,
            "column": 67
          }
        },
        "63": {
          "start": {
            "line": 130,
            "column": 2
          },
          "end": {
            "line": 130,
            "column": 63
          }
        },
        "64": {
          "start": {
            "line": 132,
            "column": 2
          },
          "end": {
            "line": 132,
            "column": 73
          }
        },
        "65": {
          "start": {
            "line": 135,
            "column": 2
          },
          "end": {
            "line": 135,
            "column": 62
          }
        },
        "66": {
          "start": {
            "line": 137,
            "column": 2
          },
          "end": {
            "line": 137,
            "column": 64
          }
        },
        "67": {
          "start": {
            "line": 140,
            "column": 2
          },
          "end": {
            "line": 140,
            "column": 42
          }
        },
        "68": {
          "start": {
            "line": 142,
            "column": 2
          },
          "end": {
            "line": 142,
            "column": 65
          }
        },
        "69": {
          "start": {
            "line": 143,
            "column": 2
          },
          "end": {
            "line": 143,
            "column": 64
          }
        },
        "70": {
          "start": {
            "line": 146,
            "column": 2
          },
          "end": {
            "line": 146,
            "column": 46
          }
        },
        "71": {
          "start": {
            "line": 156,
            "column": 21
          },
          "end": {
            "line": 156,
            "column": 52
          }
        },
        "72": {
          "start": {
            "line": 157,
            "column": 30
          },
          "end": {
            "line": 157,
            "column": 54
          }
        },
        "73": {
          "start": {
            "line": 159,
            "column": 2
          },
          "end": {
            "line": 212,
            "column": 3
          }
        },
        "74": {
          "start": {
            "line": 161,
            "column": 4
          },
          "end": {
            "line": 166,
            "column": 5
          }
        },
        "75": {
          "start": {
            "line": 162,
            "column": 6
          },
          "end": {
            "line": 164,
            "column": 7
          }
        },
        "76": {
          "start": {
            "line": 163,
            "column": 8
          },
          "end": {
            "line": 163,
            "column": 83
          }
        },
        "77": {
          "start": {
            "line": 165,
            "column": 6
          },
          "end": {
            "line": 165,
            "column": 15
          }
        },
        "78": {
          "start": {
            "line": 169,
            "column": 26
          },
          "end": {
            "line": 171,
            "column": 60
          }
        },
        "79": {
          "start": {
            "line": 173,
            "column": 4
          },
          "end": {
            "line": 211,
            "column": 5
          }
        },
        "80": {
          "start": {
            "line": 174,
            "column": 6
          },
          "end": {
            "line": 174,
            "column": 77
          }
        },
        "81": {
          "start": {
            "line": 177,
            "column": 6
          },
          "end": {
            "line": 188,
            "column": 7
          }
        },
        "82": {
          "start": {
            "line": 178,
            "column": 26
          },
          "end": {
            "line": 178,
            "column": 71
          }
        },
        "83": {
          "start": {
            "line": 179,
            "column": 27
          },
          "end": {
            "line": 179,
            "column": 89
          }
        },
        "84": {
          "start": {
            "line": 180,
            "column": 25
          },
          "end": {
            "line": 180,
            "column": 67
          }
        },
        "85": {
          "start": {
            "line": 182,
            "column": 8
          },
          "end": {
            "line": 187,
            "column": 9
          }
        },
        "86": {
          "start": {
            "line": 183,
            "column": 10
          },
          "end": {
            "line": 183,
            "column": 46
          }
        },
        "87": {
          "start": {
            "line": 184,
            "column": 10
          },
          "end": {
            "line": 186,
            "column": 11
          }
        },
        "88": {
          "start": {
            "line": 185,
            "column": 12
          },
          "end": {
            "line": 185,
            "column": 71
          }
        },
        "89": {
          "start": {
            "line": 191,
            "column": 6
          },
          "end": {
            "line": 208,
            "column": 7
          }
        },
        "90": {
          "start": {
            "line": 192,
            "column": 27
          },
          "end": {
            "line": 192,
            "column": 89
          }
        },
        "91": {
          "start": {
            "line": 195,
            "column": 8
          },
          "end": {
            "line": 207,
            "column": 9
          }
        },
        "92": {
          "start": {
            "line": 196,
            "column": 10
          },
          "end": {
            "line": 206,
            "column": 11
          }
        },
        "93": {
          "start": {
            "line": 197,
            "column": 35
          },
          "end": {
            "line": 197,
            "column": 68
          }
        },
        "94": {
          "start": {
            "line": 198,
            "column": 29
          },
          "end": {
            "line": 198,
            "column": 72
          }
        },
        "95": {
          "start": {
            "line": 200,
            "column": 12
          },
          "end": {
            "line": 205,
            "column": 13
          }
        },
        "96": {
          "start": {
            "line": 201,
            "column": 14
          },
          "end": {
            "line": 201,
            "column": 54
          }
        },
        "97": {
          "start": {
            "line": 202,
            "column": 14
          },
          "end": {
            "line": 204,
            "column": 15
          }
        },
        "98": {
          "start": {
            "line": 203,
            "column": 16
          },
          "end": {
            "line": 203,
            "column": 70
          }
        },
        "99": {
          "start": {
            "line": 210,
            "column": 6
          },
          "end": {
            "line": 210,
            "column": 76
          }
        },
        "100": {
          "start": {
            "line": 222,
            "column": 25
          },
          "end": {
            "line": 222,
            "column": 59
          }
        },
        "101": {
          "start": {
            "line": 224,
            "column": 2
          },
          "end": {
            "line": 253,
            "column": 3
          }
        },
        "102": {
          "start": {
            "line": 225,
            "column": 24
          },
          "end": {
            "line": 225,
            "column": 65
          }
        },
        "103": {
          "start": {
            "line": 228,
            "column": 4
          },
          "end": {
            "line": 233,
            "column": 5
          }
        },
        "104": {
          "start": {
            "line": 229,
            "column": 6
          },
          "end": {
            "line": 232,
            "column": 8
          }
        },
        "105": {
          "start": {
            "line": 236,
            "column": 4
          },
          "end": {
            "line": 241,
            "column": 5
          }
        },
        "106": {
          "start": {
            "line": 237,
            "column": 6
          },
          "end": {
            "line": 240,
            "column": 8
          }
        },
        "107": {
          "start": {
            "line": 244,
            "column": 4
          },
          "end": {
            "line": 246,
            "column": 5
          }
        },
        "108": {
          "start": {
            "line": 245,
            "column": 6
          },
          "end": {
            "line": 245,
            "column": 99
          }
        },
        "109": {
          "start": {
            "line": 248,
            "column": 4
          },
          "end": {
            "line": 248,
            "column": 54
          }
        },
        "110": {
          "start": {
            "line": 250,
            "column": 4
          },
          "end": {
            "line": 252,
            "column": 5
          }
        },
        "111": {
          "start": {
            "line": 251,
            "column": 6
          },
          "end": {
            "line": 251,
            "column": 63
          }
        },
        "112": {
          "start": {
            "line": 262,
            "column": 2
          },
          "end": {
            "line": 296,
            "column": 3
          }
        },
        "113": {
          "start": {
            "line": 264,
            "column": 4
          },
          "end": {
            "line": 264,
            "column": 30
          }
        },
        "114": {
          "start": {
            "line": 267,
            "column": 18
          },
          "end": {
            "line": 267,
            "column": 24
          }
        },
        "115": {
          "start": {
            "line": 270,
            "column": 4
          },
          "end": {
            "line": 270,
            "column": 47
          }
        },
        "116": {
          "start": {
            "line": 270,
            "column": 24
          },
          "end": {
            "line": 270,
            "column": 47
          }
        },
        "117": {
          "start": {
            "line": 271,
            "column": 4
          },
          "end": {
            "line": 271,
            "column": 45
          }
        },
        "118": {
          "start": {
            "line": 271,
            "column": 23
          },
          "end": {
            "line": 271,
            "column": 45
          }
        },
        "119": {
          "start": {
            "line": 272,
            "column": 4
          },
          "end": {
            "line": 272,
            "column": 47
          }
        },
        "120": {
          "start": {
            "line": 272,
            "column": 24
          },
          "end": {
            "line": 272,
            "column": 47
          }
        },
        "121": {
          "start": {
            "line": 273,
            "column": 4
          },
          "end": {
            "line": 273,
            "column": 70
          }
        },
        "122": {
          "start": {
            "line": 273,
            "column": 25
          },
          "end": {
            "line": 273,
            "column": 70
          }
        },
        "123": {
          "start": {
            "line": 274,
            "column": 4
          },
          "end": {
            "line": 274,
            "column": 80
          }
        },
        "124": {
          "start": {
            "line": 274,
            "column": 29
          },
          "end": {
            "line": 274,
            "column": 80
          }
        },
        "125": {
          "start": {
            "line": 275,
            "column": 4
          },
          "end": {
            "line": 275,
            "column": 71
          }
        },
        "126": {
          "start": {
            "line": 275,
            "column": 26
          },
          "end": {
            "line": 275,
            "column": 71
          }
        },
        "127": {
          "start": {
            "line": 278,
            "column": 4
          },
          "end": {
            "line": 278,
            "column": 39
          }
        },
        "128": {
          "start": {
            "line": 280,
            "column": 4
          },
          "end": {
            "line": 282,
            "column": 5
          }
        },
        "129": {
          "start": {
            "line": 281,
            "column": 6
          },
          "end": {
            "line": 281,
            "column": 56
          }
        },
        "130": {
          "start": {
            "line": 285,
            "column": 19
          },
          "end": {
            "line": 288,
            "column": 6
          }
        },
        "131": {
          "start": {
            "line": 290,
            "column": 4
          },
          "end": {
            "line": 292,
            "column": 5
          }
        },
        "132": {
          "start": {
            "line": 291,
            "column": 6
          },
          "end": {
            "line": 291,
            "column": 80
          }
        },
        "133": {
          "start": {
            "line": 295,
            "column": 4
          },
          "end": {
            "line": 295,
            "column": 59
          }
        },
        "134": {
          "start": {
            "line": 305,
            "column": 21
          },
          "end": {
            "line": 305,
            "column": 52
          }
        },
        "135": {
          "start": {
            "line": 307,
            "column": 2
          },
          "end": {
            "line": 339,
            "column": 3
          }
        },
        "136": {
          "start": {
            "line": 308,
            "column": 4
          },
          "end": {
            "line": 338,
            "column": 5
          }
        },
        "137": {
          "start": {
            "line": 311,
            "column": 25
          },
          "end": {
            "line": 311,
            "column": 81
          }
        },
        "138": {
          "start": {
            "line": 312,
            "column": 24
          },
          "end": {
            "line": 312,
            "column": 49
          }
        },
        "139": {
          "start": {
            "line": 314,
            "column": 24
          },
          "end": {
            "line": 314,
            "column": 101
          }
        },
        "140": {
          "start": {
            "line": 316,
            "column": 6
          },
          "end": {
            "line": 316,
            "column": 53
          }
        },
        "141": {
          "start": {
            "line": 317,
            "column": 6
          },
          "end": {
            "line": 317,
            "column": 67
          }
        },
        "142": {
          "start": {
            "line": 318,
            "column": 6
          },
          "end": {
            "line": 318,
            "column": 61
          }
        },
        "143": {
          "start": {
            "line": 319,
            "column": 6
          },
          "end": {
            "line": 319,
            "column": 62
          }
        },
        "144": {
          "start": {
            "line": 320,
            "column": 6
          },
          "end": {
            "line": 320,
            "column": 67
          }
        },
        "145": {
          "start": {
            "line": 321,
            "column": 6
          },
          "end": {
            "line": 321,
            "column": 68
          }
        },
        "146": {
          "start": {
            "line": 323,
            "column": 6
          },
          "end": {
            "line": 334,
            "column": 7
          }
        },
        "147": {
          "start": {
            "line": 324,
            "column": 8
          },
          "end": {
            "line": 324,
            "column": 65
          }
        },
        "148": {
          "start": {
            "line": 325,
            "column": 27
          },
          "end": {
            "line": 325,
            "column": 100
          }
        },
        "149": {
          "start": {
            "line": 326,
            "column": 8
          },
          "end": {
            "line": 330,
            "column": 11
          }
        },
        "150": {
          "start": {
            "line": 327,
            "column": 10
          },
          "end": {
            "line": 329,
            "column": 11
          }
        },
        "151": {
          "start": {
            "line": 328,
            "column": 12
          },
          "end": {
            "line": 328,
            "column": 77
          }
        },
        "152": {
          "start": {
            "line": 331,
            "column": 8
          },
          "end": {
            "line": 333,
            "column": 9
          }
        },
        "153": {
          "start": {
            "line": 332,
            "column": 10
          },
          "end": {
            "line": 332,
            "column": 87
          }
        },
        "154": {
          "start": {
            "line": 337,
            "column": 6
          },
          "end": {
            "line": 337,
            "column": 81
          }
        },
        "155": {
          "start": {
            "line": 342,
            "column": 0
          },
          "end": {
            "line": 342,
            "column": 30
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "buildCommand",
          "decl": {
            "start": {
              "line": 11,
              "column": 15
            },
            "end": {
              "line": 11,
              "column": 27
            }
          },
          "loc": {
            "start": {
              "line": 11,
              "column": 37
            },
            "end": {
              "line": 53,
              "column": 1
            }
          },
          "line": 11
        },
        "1": {
          "name": "validateBuildOptions",
          "decl": {
            "start": {
              "line": 59,
              "column": 15
            },
            "end": {
              "line": 59,
              "column": 35
            }
          },
          "loc": {
            "start": {
              "line": 59,
              "column": 45
            },
            "end": {
              "line": 81,
              "column": 1
            }
          },
          "line": 59
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 69,
              "column": 41
            },
            "end": {
              "line": 69,
              "column": 42
            }
          },
          "loc": {
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 70,
              "column": 45
            }
          },
          "line": 70
        },
        "3": {
          "name": "executeBuild",
          "decl": {
            "start": {
              "line": 87,
              "column": 15
            },
            "end": {
              "line": 87,
              "column": 27
            }
          },
          "loc": {
            "start": {
              "line": 87,
              "column": 37
            },
            "end": {
              "line": 147,
              "column": 1
            }
          },
          "line": 87
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": {
            "start": {
              "line": 118,
              "column": 12
            },
            "end": {
              "line": 118,
              "column": 13
            }
          },
          "loc": {
            "start": {
              "line": 118,
              "column": 27
            },
            "end": {
              "line": 124,
              "column": 5
            }
          },
          "line": 118
        },
        "5": {
          "name": "processComponents",
          "decl": {
            "start": {
              "line": 155,
              "column": 15
            },
            "end": {
              "line": 155,
              "column": 32
            }
          },
          "loc": {
            "start": {
              "line": 155,
              "column": 70
            },
            "end": {
              "line": 213,
              "column": 1
            }
          },
          "line": 155
        },
        "6": {
          "name": "updateHugoConfig",
          "decl": {
            "start": {
              "line": 221,
              "column": 15
            },
            "end": {
              "line": 221,
              "column": 31
            }
          },
          "loc": {
            "start": {
              "line": 221,
              "column": 69
            },
            "end": {
              "line": 254,
              "column": 1
            }
          },
          "line": 221
        },
        "7": {
          "name": "runHugoBuild",
          "decl": {
            "start": {
              "line": 261,
              "column": 15
            },
            "end": {
              "line": 261,
              "column": 27
            }
          },
          "loc": {
            "start": {
              "line": 261,
              "column": 49
            },
            "end": {
              "line": 297,
              "column": 1
            }
          },
          "line": 261
        },
        "8": {
          "name": "showBuildSummary",
          "decl": {
            "start": {
              "line": 304,
              "column": 15
            },
            "end": {
              "line": 304,
              "column": 31
            }
          },
          "loc": {
            "start": {
              "line": 304,
              "column": 53
            },
            "end": {
              "line": 340,
              "column": 1
            }
          },
          "line": 304
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": {
            "start": {
              "line": 326,
              "column": 39
            },
            "end": {
              "line": 326,
              "column": 40
            }
          },
          "loc": {
            "start": {
              "line": 326,
              "column": 47
            },
            "end": {
              "line": 330,
              "column": 9
            }
          },
          "line": 326
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 23,
              "column": 46
            },
            "end": {
              "line": 23,
              "column": 105
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 23,
                "column": 67
              },
              "end": {
                "line": 23,
                "column": 96
              }
            },
            {
              "start": {
                "line": 23,
                "column": 99
              },
              "end": {
                "line": 23,
                "column": 105
              }
            }
          ],
          "line": 23
        },
        "1": {
          "loc": {
            "start": {
              "line": 27,
              "column": 4
            },
            "end": {
              "line": 34,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 27,
                "column": 4
              },
              "end": {
                "line": 34,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 27
        },
        "2": {
          "loc": {
            "start": {
              "line": 29,
              "column": 43
            },
            "end": {
              "line": 29,
              "column": 66
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 29,
                "column": 43
              },
              "end": {
                "line": 29,
                "column": 57
              }
            },
            {
              "start": {
                "line": 29,
                "column": 61
              },
              "end": {
                "line": 29,
                "column": 66
              }
            }
          ],
          "line": 29
        },
        "3": {
          "loc": {
            "start": {
              "line": 30,
              "column": 42
            },
            "end": {
              "line": 30,
              "column": 64
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 30,
                "column": 42
              },
              "end": {
                "line": 30,
                "column": 55
              }
            },
            {
              "start": {
                "line": 30,
                "column": 59
              },
              "end": {
                "line": 30,
                "column": 64
              }
            }
          ],
          "line": 30
        },
        "4": {
          "loc": {
            "start": {
              "line": 31,
              "column": 43
            },
            "end": {
              "line": 31,
              "column": 66
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 31,
                "column": 43
              },
              "end": {
                "line": 31,
                "column": 57
              }
            },
            {
              "start": {
                "line": 31,
                "column": 61
              },
              "end": {
                "line": 31,
                "column": 66
              }
            }
          ],
          "line": 31
        },
        "5": {
          "loc": {
            "start": {
              "line": 32,
              "column": 45
            },
            "end": {
              "line": 32,
              "column": 73
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 32,
                "column": 45
              },
              "end": {
                "line": 32,
                "column": 60
              }
            },
            {
              "start": {
                "line": 32,
                "column": 64
              },
              "end": {
                "line": 32,
                "column": 73
              }
            }
          ],
          "line": 32
        },
        "6": {
          "loc": {
            "start": {
              "line": 38,
              "column": 4
            },
            "end": {
              "line": 40,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 38,
                "column": 4
              },
              "end": {
                "line": 40,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 38
        },
        "7": {
          "loc": {
            "start": {
              "line": 68,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 68,
                "column": 4
              },
              "end": {
                "line": 73,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 68
        },
        "8": {
          "loc": {
            "start": {
              "line": 75,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 75,
                "column": 4
              },
              "end": {
                "line": 79,
                "column": 5
              }
            },
            {
              "start": {
                "line": 77,
                "column": 11
              },
              "end": {
                "line": 79,
                "column": 5
              }
            }
          ],
          "line": 75
        },
        "9": {
          "loc": {
            "start": {
              "line": 104,
              "column": 2
            },
            "end": {
              "line": 112,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 104,
                "column": 2
              },
              "end": {
                "line": 112,
                "column": 3
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 104
        },
        "10": {
          "loc": {
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 108,
                "column": 4
              },
              "end": {
                "line": 111,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 108
        },
        "11": {
          "loc": {
            "start": {
              "line": 109,
              "column": 70
            },
            "end": {
              "line": 109,
              "column": 119
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 109,
                "column": 70
              },
              "end": {
                "line": 109,
                "column": 99
              }
            },
            {
              "start": {
                "line": 109,
                "column": 103
              },
              "end": {
                "line": 109,
                "column": 119
              }
            }
          ],
          "line": 109
        },
        "12": {
          "loc": {
            "start": {
              "line": 110,
              "column": 69
            },
            "end": {
              "line": 110,
              "column": 100
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 110,
                "column": 69
              },
              "end": {
                "line": 110,
                "column": 94
              }
            },
            {
              "start": {
                "line": 110,
                "column": 98
              },
              "end": {
                "line": 110,
                "column": 100
              }
            }
          ],
          "line": 110
        },
        "13": {
          "loc": {
            "start": {
              "line": 121,
              "column": 13
            },
            "end": {
              "line": 123,
              "column": 47
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 121,
                "column": 13
              },
              "end": {
                "line": 121,
                "column": 43
              }
            },
            {
              "start": {
                "line": 122,
                "column": 13
              },
              "end": {
                "line": 122,
                "column": 51
              }
            },
            {
              "start": {
                "line": 123,
                "column": 13
              },
              "end": {
                "line": 123,
                "column": 47
              }
            }
          ],
          "line": 121
        },
        "14": {
          "loc": {
            "start": {
              "line": 156,
              "column": 21
            },
            "end": {
              "line": 156,
              "column": 52
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 156,
                "column": 21
              },
              "end": {
                "line": 156,
                "column": 46
              }
            },
            {
              "start": {
                "line": 156,
                "column": 50
              },
              "end": {
                "line": 156,
                "column": 52
              }
            }
          ],
          "line": 156
        },
        "15": {
          "loc": {
            "start": {
              "line": 157,
              "column": 30
            },
            "end": {
              "line": 157,
              "column": 54
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 157,
                "column": 30
              },
              "end": {
                "line": 157,
                "column": 48
              }
            },
            {
              "start": {
                "line": 157,
                "column": 52
              },
              "end": {
                "line": 157,
                "column": 54
              }
            }
          ],
          "line": 157
        },
        "16": {
          "loc": {
            "start": {
              "line": 161,
              "column": 4
            },
            "end": {
              "line": 166,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 161,
                "column": 4
              },
              "end": {
                "line": 166,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 161
        },
        "17": {
          "loc": {
            "start": {
              "line": 162,
              "column": 6
            },
            "end": {
              "line": 164,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 162,
                "column": 6
              },
              "end": {
                "line": 164,
                "column": 7
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 162
        },
        "18": {
          "loc": {
            "start": {
              "line": 169,
              "column": 26
            },
            "end": {
              "line": 171,
              "column": 60
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 169,
                "column": 26
              },
              "end": {
                "line": 169,
                "column": 58
              }
            },
            {
              "start": {
                "line": 170,
                "column": 25
              },
              "end": {
                "line": 170,
                "column": 68
              }
            },
            {
              "start": {
                "line": 171,
                "column": 25
              },
              "end": {
                "line": 171,
                "column": 60
              }
            }
          ],
          "line": 169
        },
        "19": {
          "loc": {
            "start": {
              "line": 173,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 173,
                "column": 4
              },
              "end": {
                "line": 211,
                "column": 5
              }
            },
            {
              "start": {
                "line": 209,
                "column": 11
              },
              "end": {
                "line": 211,
                "column": 5
              }
            }
          ],
          "line": 173
        },
        "20": {
          "loc": {
            "start": {
              "line": 177,
              "column": 6
            },
            "end": {
              "line": 188,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 177,
                "column": 6
              },
              "end": {
                "line": 188,
                "column": 7
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 177
        },
        "21": {
          "loc": {
            "start": {
              "line": 177,
              "column": 10
            },
            "end": {
              "line": 177,
              "column": 96
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 177,
                "column": 10
              },
              "end": {
                "line": 177,
                "column": 40
              }
            },
            {
              "start": {
                "line": 177,
                "column": 44
              },
              "end": {
                "line": 177,
                "column": 96
              }
            }
          ],
          "line": 177
        },
        "22": {
          "loc": {
            "start": {
              "line": 182,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 182,
                "column": 8
              },
              "end": {
                "line": 187,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 182
        },
        "23": {
          "loc": {
            "start": {
              "line": 184,
              "column": 10
            },
            "end": {
              "line": 186,
              "column": 11
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 184,
                "column": 10
              },
              "end": {
                "line": 186,
                "column": 11
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 184
        },
        "24": {
          "loc": {
            "start": {
              "line": 191,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 191,
                "column": 6
              },
              "end": {
                "line": 208,
                "column": 7
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 191
        },
        "25": {
          "loc": {
            "start": {
              "line": 191,
              "column": 10
            },
            "end": {
              "line": 191,
              "column": 100
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 191,
                "column": 10
              },
              "end": {
                "line": 191,
                "column": 40
              }
            },
            {
              "start": {
                "line": 191,
                "column": 44
              },
              "end": {
                "line": 191,
                "column": 100
              }
            }
          ],
          "line": 191
        },
        "26": {
          "loc": {
            "start": {
              "line": 195,
              "column": 8
            },
            "end": {
              "line": 207,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 195,
                "column": 8
              },
              "end": {
                "line": 207,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 195
        },
        "27": {
          "loc": {
            "start": {
              "line": 200,
              "column": 12
            },
            "end": {
              "line": 205,
              "column": 13
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 200,
                "column": 12
              },
              "end": {
                "line": 205,
                "column": 13
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 200
        },
        "28": {
          "loc": {
            "start": {
              "line": 202,
              "column": 14
            },
            "end": {
              "line": 204,
              "column": 15
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 202,
                "column": 14
              },
              "end": {
                "line": 204,
                "column": 15
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 202
        },
        "29": {
          "loc": {
            "start": {
              "line": 224,
              "column": 2
            },
            "end": {
              "line": 253,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 224,
                "column": 2
              },
              "end": {
                "line": 253,
                "column": 3
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 224
        },
        "30": {
          "loc": {
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 233,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 228,
                "column": 4
              },
              "end": {
                "line": 233,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 228
        },
        "31": {
          "loc": {
            "start": {
              "line": 228,
              "column": 8
            },
            "end": {
              "line": 228,
              "column": 52
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 228,
                "column": 8
              },
              "end": {
                "line": 228,
                "column": 21
              }
            },
            {
              "start": {
                "line": 228,
                "column": 25
              },
              "end": {
                "line": 228,
                "column": 52
              }
            }
          ],
          "line": 228
        },
        "32": {
          "loc": {
            "start": {
              "line": 236,
              "column": 4
            },
            "end": {
              "line": 241,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 236,
                "column": 4
              },
              "end": {
                "line": 241,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 236
        },
        "33": {
          "loc": {
            "start": {
              "line": 244,
              "column": 4
            },
            "end": {
              "line": 246,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 244,
                "column": 4
              },
              "end": {
                "line": 246,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 244
        },
        "34": {
          "loc": {
            "start": {
              "line": 250,
              "column": 4
            },
            "end": {
              "line": 252,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 250,
                "column": 4
              },
              "end": {
                "line": 252,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 250
        },
        "35": {
          "loc": {
            "start": {
              "line": 270,
              "column": 4
            },
            "end": {
              "line": 270,
              "column": 47
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 270,
                "column": 4
              },
              "end": {
                "line": 270,
                "column": 47
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 270
        },
        "36": {
          "loc": {
            "start": {
              "line": 271,
              "column": 4
            },
            "end": {
              "line": 271,
              "column": 45
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 271,
                "column": 4
              },
              "end": {
                "line": 271,
                "column": 45
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 271
        },
        "37": {
          "loc": {
            "start": {
              "line": 272,
              "column": 4
            },
            "end": {
              "line": 272,
              "column": 47
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 272,
                "column": 4
              },
              "end": {
                "line": 272,
                "column": 47
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 272
        },
        "38": {
          "loc": {
            "start": {
              "line": 273,
              "column": 4
            },
            "end": {
              "line": 273,
              "column": 70
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 273,
                "column": 4
              },
              "end": {
                "line": 273,
                "column": 70
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 273
        },
        "39": {
          "loc": {
            "start": {
              "line": 274,
              "column": 4
            },
            "end": {
              "line": 274,
              "column": 80
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 274,
                "column": 4
              },
              "end": {
                "line": 274,
                "column": 80
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 274
        },
        "40": {
          "loc": {
            "start": {
              "line": 275,
              "column": 4
            },
            "end": {
              "line": 275,
              "column": 71
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 275,
                "column": 4
              },
              "end": {
                "line": 275,
                "column": 71
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 275
        },
        "41": {
          "loc": {
            "start": {
              "line": 280,
              "column": 4
            },
            "end": {
              "line": 282,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 280,
                "column": 4
              },
              "end": {
                "line": 282,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 280
        },
        "42": {
          "loc": {
            "start": {
              "line": 287,
              "column": 13
            },
            "end": {
              "line": 287,
              "column": 49
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 287,
                "column": 31
              },
              "end": {
                "line": 287,
                "column": 40
              }
            },
            {
              "start": {
                "line": 287,
                "column": 43
              },
              "end": {
                "line": 287,
                "column": 49
              }
            }
          ],
          "line": 287
        },
        "43": {
          "loc": {
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 292,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 290,
                "column": 4
              },
              "end": {
                "line": 292,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 290
        },
        "44": {
          "loc": {
            "start": {
              "line": 290,
              "column": 8
            },
            "end": {
              "line": 290,
              "column": 34
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 290,
                "column": 8
              },
              "end": {
                "line": 290,
                "column": 24
              }
            },
            {
              "start": {
                "line": 290,
                "column": 28
              },
              "end": {
                "line": 290,
                "column": 34
              }
            }
          ],
          "line": 290
        },
        "45": {
          "loc": {
            "start": {
              "line": 307,
              "column": 2
            },
            "end": {
              "line": 339,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 307,
                "column": 2
              },
              "end": {
                "line": 339,
                "column": 3
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 307
        },
        "46": {
          "loc": {
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 334,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 323,
                "column": 6
              },
              "end": {
                "line": 334,
                "column": 7
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 323
        },
        "47": {
          "loc": {
            "start": {
              "line": 327,
              "column": 10
            },
            "end": {
              "line": 329,
              "column": 11
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 327,
                "column": 10
              },
              "end": {
                "line": 329,
                "column": 11
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 327
        },
        "48": {
          "loc": {
            "start": {
              "line": 331,
              "column": 8
            },
            "end": {
              "line": 333,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 331,
                "column": 8
              },
              "end": {
                "line": 333,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 331
        }
      },
      "s": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 0,
        "104": 0,
        "105": 0,
        "106": 0,
        "107": 0,
        "108": 0,
        "109": 0,
        "110": 0,
        "111": 0,
        "112": 0,
        "113": 0,
        "114": 0,
        "115": 0,
        "116": 0,
        "117": 0,
        "118": 0,
        "119": 0,
        "120": 0,
        "121": 0,
        "122": 0,
        "123": 0,
        "124": 0,
        "125": 0,
        "126": 0,
        "127": 0,
        "128": 0,
        "129": 0,
        "130": 0,
        "131": 0,
        "132": 0,
        "133": 0,
        "134": 0,
        "135": 0,
        "136": 0,
        "137": 0,
        "138": 0,
        "139": 0,
        "140": 0,
        "141": 0,
        "142": 0,
        "143": 0,
        "144": 0,
        "145": 0,
        "146": 0,
        "147": 0,
        "148": 0,
        "149": 0,
        "150": 0,
        "151": 0,
        "152": 0,
        "153": 0,
        "154": 0,
        "155": 0
      },
      "f": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0
      },
      "b": {
        "0": [
          0,
          0
        ],
        "1": [
          0,
          0
        ],
        "2": [
          0,
          0
        ],
        "3": [
          0,
          0
        ],
        "4": [
          0,
          0
        ],
        "5": [
          0,
          0
        ],
        "6": [
          0,
          0
        ],
        "7": [
          0,
          0
        ],
        "8": [
          0,
          0
        ],
        "9": [
          0,
          0
        ],
        "10": [
          0,
          0
        ],
        "11": [
          0,
          0
        ],
        "12": [
          0,
          0
        ],
        "13": [
          0,
          0,
          0
        ],
        "14": [
          0,
          0
        ],
        "15": [
          0,
          0
        ],
        "16": [
          0,
          0
        ],
        "17": [
          0,
          0
        ],
        "18": [
          0,
          0,
          0
        ],
        "19": [
          0,
          0
        ],
        "20": [
          0,
          0
        ],
        "21": [
          0,
          0
        ],
        "22": [
          0,
          0
        ],
        "23": [
          0,
          0
        ],
        "24": [
          0,
          0
        ],
        "25": [
          0,
          0
        ],
        "26": [
          0,
          0
        ],
        "27": [
          0,
          0
        ],
        "28": [
          0,
          0
        ],
        "29": [
          0,
          0
        ],
        "30": [
          0,
          0
        ],
        "31": [
          0,
          0
        ],
        "32": [
          0,
          0
        ],
        "33": [
          0,
          0
        ],
        "34": [
          0,
          0
        ],
        "35": [
          0,
          0
        ],
        "36": [
          0,
          0
        ],
        "37": [
          0,
          0
        ],
        "38": [
          0,
          0
        ],
        "39": [
          0,
          0
        ],
        "40": [
          0,
          0
        ],
        "41": [
          0,
          0
        ],
        "42": [
          0,
          0
        ],
        "43": [
          0,
          0
        ],
        "44": [
          0,
          0
        ],
        "45": [
          0,
          0
        ],
        "46": [
          0,
          0
        ],
        "47": [
          0,
          0
        ],
        "48": [
          0,
          0
        ]
      }
    },
    "/root/info-tech-io/hugo-templates/scripts/commands/init.js": {
      "path": "/root/info-tech-io/hugo-templates/scripts/commands/init.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 14
          },
          "end": {
            "line": 1,
            "column": 30
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 11
          },
          "end": {
            "line": 2,
            "column": 30
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 13
          },
          "end": {
            "line": 3,
            "column": 28
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 17
          },
          "end": {
            "line": 4,
            "column": 36
          }
        },
        "4": {
          "start": {
            "line": 12,
            "column": 2
          },
          "end": {
            "line": 12,
            "column": 75
          }
        },
        "5": {
          "start": {
            "line": 13,
            "column": 2
          },
          "end": {
            "line": 13,
            "column": 42
          }
        },
        "6": {
          "start": {
            "line": 15,
            "column": 2
          },
          "end": {
            "line": 136,
            "column": 3
          }
        },
        "7": {
          "start": {
            "line": 16,
            "column": 22
          },
          "end": {
            "line": 16,
            "column": 26
          }
        },
        "8": {
          "start": {
            "line": 17,
            "column": 19
          },
          "end": {
            "line": 17,
            "column": 35
          }
        },
        "9": {
          "start": {
            "line": 18,
            "column": 16
          },
          "end": {
            "line": 18,
            "column": 29
          }
        },
        "10": {
          "start": {
            "line": 19,
            "column": 21
          },
          "end": {
            "line": 19,
            "column": 45
          }
        },
        "11": {
          "start": {
            "line": 22,
            "column": 4
          },
          "end": {
            "line": 75,
            "column": 5
          }
        },
        "12": {
          "start": {
            "line": 23,
            "column": 22
          },
          "end": {
            "line": 69,
            "column": 8
          }
        },
        "13": {
          "start": {
            "line": 71,
            "column": 6
          },
          "end": {
            "line": 71,
            "column": 55
          }
        },
        "14": {
          "start": {
            "line": 72,
            "column": 6
          },
          "end": {
            "line": 72,
            "column": 46
          }
        },
        "15": {
          "start": {
            "line": 73,
            "column": 6
          },
          "end": {
            "line": 73,
            "column": 37
          }
        },
        "16": {
          "start": {
            "line": 74,
            "column": 6
          },
          "end": {
            "line": 74,
            "column": 52
          }
        },
        "17": {
          "start": {
            "line": 78,
            "column": 4
          },
          "end": {
            "line": 78,
            "column": 48
          }
        },
        "18": {
          "start": {
            "line": 79,
            "column": 4
          },
          "end": {
            "line": 79,
            "column": 37
          }
        },
        "19": {
          "start": {
            "line": 80,
            "column": 4
          },
          "end": {
            "line": 80,
            "column": 31
          }
        },
        "20": {
          "start": {
            "line": 82,
            "column": 4
          },
          "end": {
            "line": 82,
            "column": 62
          }
        },
        "21": {
          "start": {
            "line": 83,
            "column": 4
          },
          "end": {
            "line": 83,
            "column": 56
          }
        },
        "22": {
          "start": {
            "line": 84,
            "column": 4
          },
          "end": {
            "line": 84,
            "column": 57
          }
        },
        "23": {
          "start": {
            "line": 85,
            "column": 4
          },
          "end": {
            "line": 85,
            "column": 51
          }
        },
        "24": {
          "start": {
            "line": 86,
            "column": 4
          },
          "end": {
            "line": 86,
            "column": 101
          }
        },
        "25": {
          "start": {
            "line": 89,
            "column": 24
          },
          "end": {
            "line": 89,
            "column": 49
          }
        },
        "26": {
          "start": {
            "line": 90,
            "column": 4
          },
          "end": {
            "line": 106,
            "column": 5
          }
        },
        "27": {
          "start": {
            "line": 91,
            "column": 28
          },
          "end": {
            "line": 98,
            "column": 8
          }
        },
        "28": {
          "start": {
            "line": 100,
            "column": 6
          },
          "end": {
            "line": 103,
            "column": 7
          }
        },
        "29": {
          "start": {
            "line": 101,
            "column": 8
          },
          "end": {
            "line": 101,
            "column": 62
          }
        },
        "30": {
          "start": {
            "line": 102,
            "column": 8
          },
          "end": {
            "line": 102,
            "column": 15
          }
        },
        "31": {
          "start": {
            "line": 105,
            "column": 6
          },
          "end": {
            "line": 105,
            "column": 35
          }
        },
        "32": {
          "start": {
            "line": 108,
            "column": 4
          },
          "end": {
            "line": 108,
            "column": 63
          }
        },
        "33": {
          "start": {
            "line": 111,
            "column": 4
          },
          "end": {
            "line": 111,
            "column": 36
          }
        },
        "34": {
          "start": {
            "line": 114,
            "column": 4
          },
          "end": {
            "line": 120,
            "column": 22
          }
        },
        "35": {
          "start": {
            "line": 122,
            "column": 4
          },
          "end": {
            "line": 124,
            "column": 6
          }
        },
        "36": {
          "start": {
            "line": 126,
            "column": 4
          },
          "end": {
            "line": 126,
            "column": 68
          }
        },
        "37": {
          "start": {
            "line": 127,
            "column": 4
          },
          "end": {
            "line": 127,
            "column": 51
          }
        },
        "38": {
          "start": {
            "line": 128,
            "column": 4
          },
          "end": {
            "line": 128,
            "column": 53
          }
        },
        "39": {
          "start": {
            "line": 129,
            "column": 4
          },
          "end": {
            "line": 129,
            "column": 56
          }
        },
        "40": {
          "start": {
            "line": 130,
            "column": 4
          },
          "end": {
            "line": 130,
            "column": 97
          }
        },
        "41": {
          "start": {
            "line": 133,
            "column": 4
          },
          "end": {
            "line": 133,
            "column": 57
          }
        },
        "42": {
          "start": {
            "line": 134,
            "column": 4
          },
          "end": {
            "line": 134,
            "column": 52
          }
        },
        "43": {
          "start": {
            "line": 135,
            "column": 4
          },
          "end": {
            "line": 135,
            "column": 20
          }
        },
        "44": {
          "start": {
            "line": 139,
            "column": 0
          },
          "end": {
            "line": 139,
            "column": 29
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "initCommand",
          "decl": {
            "start": {
              "line": 11,
              "column": 15
            },
            "end": {
              "line": 11,
              "column": 26
            }
          },
          "loc": {
            "start": {
              "line": 11,
              "column": 42
            },
            "end": {
              "line": 137,
              "column": 1
            }
          },
          "line": 11
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 19,
              "column": 21
            },
            "end": {
              "line": 19,
              "column": 45
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 19,
                "column": 21
              },
              "end": {
                "line": 19,
                "column": 39
              }
            },
            {
              "start": {
                "line": 19,
                "column": 43
              },
              "end": {
                "line": 19,
                "column": 45
              }
            }
          ],
          "line": 19
        },
        "1": {
          "loc": {
            "start": {
              "line": 22,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 22,
                "column": 4
              },
              "end": {
                "line": 75,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 22
        },
        "2": {
          "loc": {
            "start": {
              "line": 28,
              "column": 19
            },
            "end": {
              "line": 28,
              "column": 48
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 28,
                "column": 19
              },
              "end": {
                "line": 28,
                "column": 30
              }
            },
            {
              "start": {
                "line": 28,
                "column": 34
              },
              "end": {
                "line": 28,
                "column": 48
              }
            }
          ],
          "line": 28
        },
        "3": {
          "loc": {
            "start": {
              "line": 41,
              "column": 19
            },
            "end": {
              "line": 41,
              "column": 40
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 41,
                "column": 19
              },
              "end": {
                "line": 41,
                "column": 27
              }
            },
            {
              "start": {
                "line": 41,
                "column": 31
              },
              "end": {
                "line": 41,
                "column": 40
              }
            }
          ],
          "line": 41
        },
        "4": {
          "loc": {
            "start": {
              "line": 53,
              "column": 19
            },
            "end": {
              "line": 53,
              "column": 37
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 53,
                "column": 19
              },
              "end": {
                "line": 53,
                "column": 24
              }
            },
            {
              "start": {
                "line": 53,
                "column": 28
              },
              "end": {
                "line": 53,
                "column": 37
              }
            }
          ],
          "line": 53
        },
        "5": {
          "loc": {
            "start": {
              "line": 71,
              "column": 20
            },
            "end": {
              "line": 71,
              "column": 54
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 71,
                "column": 20
              },
              "end": {
                "line": 71,
                "column": 39
              }
            },
            {
              "start": {
                "line": 71,
                "column": 43
              },
              "end": {
                "line": 71,
                "column": 54
              }
            }
          ],
          "line": 71
        },
        "6": {
          "loc": {
            "start": {
              "line": 72,
              "column": 17
            },
            "end": {
              "line": 72,
              "column": 45
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 72,
                "column": 17
              },
              "end": {
                "line": 72,
                "column": 33
              }
            },
            {
              "start": {
                "line": 72,
                "column": 37
              },
              "end": {
                "line": 72,
                "column": 45
              }
            }
          ],
          "line": 72
        },
        "7": {
          "loc": {
            "start": {
              "line": 73,
              "column": 14
            },
            "end": {
              "line": 73,
              "column": 36
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 73,
                "column": 14
              },
              "end": {
                "line": 73,
                "column": 27
              }
            },
            {
              "start": {
                "line": 73,
                "column": 31
              },
              "end": {
                "line": 73,
                "column": 36
              }
            }
          ],
          "line": 73
        },
        "8": {
          "loc": {
            "start": {
              "line": 74,
              "column": 19
            },
            "end": {
              "line": 74,
              "column": 51
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 74,
                "column": 19
              },
              "end": {
                "line": 74,
                "column": 37
              }
            },
            {
              "start": {
                "line": 74,
                "column": 41
              },
              "end": {
                "line": 74,
                "column": 51
              }
            }
          ],
          "line": 74
        },
        "9": {
          "loc": {
            "start": {
              "line": 78,
              "column": 18
            },
            "end": {
              "line": 78,
              "column": 47
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 78,
                "column": 18
              },
              "end": {
                "line": 78,
                "column": 29
              }
            },
            {
              "start": {
                "line": 78,
                "column": 33
              },
              "end": {
                "line": 78,
                "column": 47
              }
            }
          ],
          "line": 78
        },
        "10": {
          "loc": {
            "start": {
              "line": 79,
              "column": 15
            },
            "end": {
              "line": 79,
              "column": 36
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 79,
                "column": 15
              },
              "end": {
                "line": 79,
                "column": 23
              }
            },
            {
              "start": {
                "line": 79,
                "column": 27
              },
              "end": {
                "line": 79,
                "column": 36
              }
            }
          ],
          "line": 79
        },
        "11": {
          "loc": {
            "start": {
              "line": 80,
              "column": 12
            },
            "end": {
              "line": 80,
              "column": 30
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 80,
                "column": 12
              },
              "end": {
                "line": 80,
                "column": 17
              }
            },
            {
              "start": {
                "line": 80,
                "column": 21
              },
              "end": {
                "line": 80,
                "column": 30
              }
            }
          ],
          "line": 80
        },
        "12": {
          "loc": {
            "start": {
              "line": 86,
              "column": 46
            },
            "end": {
              "line": 86,
              "column": 96
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 86,
                "column": 66
              },
              "end": {
                "line": 86,
                "column": 87
              }
            },
            {
              "start": {
                "line": 86,
                "column": 90
              },
              "end": {
                "line": 86,
                "column": 96
              }
            }
          ],
          "line": 86
        },
        "13": {
          "loc": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 106,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 90,
                "column": 4
              },
              "end": {
                "line": 106,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 90
        },
        "14": {
          "loc": {
            "start": {
              "line": 100,
              "column": 6
            },
            "end": {
              "line": 103,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 100,
                "column": 6
              },
              "end": {
                "line": 103,
                "column": 7
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 100
        },
        "15": {
          "loc": {
            "start": {
              "line": 123,
              "column": 137
            },
            "end": {
              "line": 123,
              "column": 168
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 123,
                "column": 137
              },
              "end": {
                "line": 123,
                "column": 158
              }
            },
            {
              "start": {
                "line": 123,
                "column": 162
              },
              "end": {
                "line": 123,
                "column": 168
              }
            }
          ],
          "line": 123
        }
      },
      "s": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0
      },
      "f": {
        "0": 0
      },
      "b": {
        "0": [
          0,
          0
        ],
        "1": [
          0,
          0
        ],
        "2": [
          0,
          0
        ],
        "3": [
          0,
          0
        ],
        "4": [
          0,
          0
        ],
        "5": [
          0,
          0
        ],
        "6": [
          0,
          0
        ],
        "7": [
          0,
          0
        ],
        "8": [
          0,
          0
        ],
        "9": [
          0,
          0
        ],
        "10": [
          0,
          0
        ],
        "11": [
          0,
          0
        ],
        "12": [
          0,
          0
        ],
        "13": [
          0,
          0
        ],
        "14": [
          0,
          0
        ],
        "15": [
          0,
          0
        ]
      }
    },
    "/root/info-tech-io/hugo-templates/scripts/commands/list.js": {
      "path": "/root/info-tech-io/hugo-templates/scripts/commands/list.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 14
          },
          "end": {
            "line": 1,
            "column": 30
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 11
          },
          "end": {
            "line": 2,
            "column": 30
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 13
          },
          "end": {
            "line": 3,
            "column": 28
          }
        },
        "3": {
          "start": {
            "line": 11,
            "column": 2
          },
          "end": {
            "line": 11,
            "column": 72
          }
        },
        "4": {
          "start": {
            "line": 12,
            "column": 2
          },
          "end": {
            "line": 12,
            "column": 42
          }
        },
        "5": {
          "start": {
            "line": 14,
            "column": 2
          },
          "end": {
            "line": 49,
            "column": 3
          }
        },
        "6": {
          "start": {
            "line": 15,
            "column": 20
          },
          "end": {
            "line": 15,
            "column": 22
          }
        },
        "7": {
          "start": {
            "line": 17,
            "column": 4
          },
          "end": {
            "line": 19,
            "column": 5
          }
        },
        "8": {
          "start": {
            "line": 18,
            "column": 6
          },
          "end": {
            "line": 18,
            "column": 62
          }
        },
        "9": {
          "start": {
            "line": 21,
            "column": 4
          },
          "end": {
            "line": 23,
            "column": 5
          }
        },
        "10": {
          "start": {
            "line": 22,
            "column": 6
          },
          "end": {
            "line": 22,
            "column": 56
          }
        },
        "11": {
          "start": {
            "line": 25,
            "column": 4
          },
          "end": {
            "line": 27,
            "column": 5
          }
        },
        "12": {
          "start": {
            "line": 26,
            "column": 6
          },
          "end": {
            "line": 26,
            "column": 64
          }
        },
        "13": {
          "start": {
            "line": 30,
            "column": 4
          },
          "end": {
            "line": 43,
            "column": 5
          }
        },
        "14": {
          "start": {
            "line": 32,
            "column": 8
          },
          "end": {
            "line": 32,
            "column": 54
          }
        },
        "15": {
          "start": {
            "line": 33,
            "column": 8
          },
          "end": {
            "line": 33,
            "column": 14
          }
        },
        "16": {
          "start": {
            "line": 35,
            "column": 21
          },
          "end": {
            "line": 35,
            "column": 36
          }
        },
        "17": {
          "start": {
            "line": 36,
            "column": 8
          },
          "end": {
            "line": 36,
            "column": 45
          }
        },
        "18": {
          "start": {
            "line": 37,
            "column": 8
          },
          "end": {
            "line": 37,
            "column": 14
          }
        },
        "19": {
          "start": {
            "line": 39,
            "column": 8
          },
          "end": {
            "line": 39,
            "column": 35
          }
        },
        "20": {
          "start": {
            "line": 40,
            "column": 8
          },
          "end": {
            "line": 40,
            "column": 14
          }
        },
        "21": {
          "start": {
            "line": 42,
            "column": 8
          },
          "end": {
            "line": 42,
            "column": 52
          }
        },
        "22": {
          "start": {
            "line": 46,
            "column": 4
          },
          "end": {
            "line": 46,
            "column": 47
          }
        },
        "23": {
          "start": {
            "line": 47,
            "column": 4
          },
          "end": {
            "line": 47,
            "column": 52
          }
        },
        "24": {
          "start": {
            "line": 48,
            "column": 4
          },
          "end": {
            "line": 48,
            "column": 20
          }
        },
        "25": {
          "start": {
            "line": 56,
            "column": 23
          },
          "end": {
            "line": 56,
            "column": 62
          }
        },
        "26": {
          "start": {
            "line": 57,
            "column": 20
          },
          "end": {
            "line": 57,
            "column": 22
          }
        },
        "27": {
          "start": {
            "line": 59,
            "column": 2
          },
          "end": {
            "line": 79,
            "column": 3
          }
        },
        "28": {
          "start": {
            "line": 60,
            "column": 18
          },
          "end": {
            "line": 60,
            "column": 48
          }
        },
        "29": {
          "start": {
            "line": 61,
            "column": 4
          },
          "end": {
            "line": 78,
            "column": 5
          }
        },
        "30": {
          "start": {
            "line": 62,
            "column": 23
          },
          "end": {
            "line": 62,
            "column": 52
          }
        },
        "31": {
          "start": {
            "line": 63,
            "column": 19
          },
          "end": {
            "line": 63,
            "column": 42
          }
        },
        "32": {
          "start": {
            "line": 64,
            "column": 6
          },
          "end": {
            "line": 77,
            "column": 7
          }
        },
        "33": {
          "start": {
            "line": 65,
            "column": 25
          },
          "end": {
            "line": 65,
            "column": 60
          }
        },
        "34": {
          "start": {
            "line": 67,
            "column": 8
          },
          "end": {
            "line": 74,
            "column": 9
          }
        },
        "35": {
          "start": {
            "line": 68,
            "column": 29
          },
          "end": {
            "line": 68,
            "column": 65
          }
        },
        "36": {
          "start": {
            "line": 69,
            "column": 10
          },
          "end": {
            "line": 73,
            "column": 11
          }
        },
        "37": {
          "start": {
            "line": 70,
            "column": 27
          },
          "end": {
            "line": 70,
            "column": 56
          }
        },
        "38": {
          "start": {
            "line": 71,
            "column": 12
          },
          "end": {
            "line": 71,
            "column": 54
          }
        },
        "39": {
          "start": {
            "line": 72,
            "column": 12
          },
          "end": {
            "line": 72,
            "column": 46
          }
        },
        "40": {
          "start": {
            "line": 76,
            "column": 8
          },
          "end": {
            "line": 76,
            "column": 33
          }
        },
        "41": {
          "start": {
            "line": 81,
            "column": 2
          },
          "end": {
            "line": 81,
            "column": 19
          }
        },
        "42": {
          "start": {
            "line": 88,
            "column": 20
          },
          "end": {
            "line": 88,
            "column": 56
          }
        },
        "43": {
          "start": {
            "line": 89,
            "column": 17
          },
          "end": {
            "line": 89,
            "column": 19
          }
        },
        "44": {
          "start": {
            "line": 91,
            "column": 2
          },
          "end": {
            "line": 110,
            "column": 3
          }
        },
        "45": {
          "start": {
            "line": 92,
            "column": 18
          },
          "end": {
            "line": 92,
            "column": 45
          }
        },
        "46": {
          "start": {
            "line": 93,
            "column": 4
          },
          "end": {
            "line": 109,
            "column": 5
          }
        },
        "47": {
          "start": {
            "line": 94,
            "column": 23
          },
          "end": {
            "line": 94,
            "column": 49
          }
        },
        "48": {
          "start": {
            "line": 95,
            "column": 19
          },
          "end": {
            "line": 95,
            "column": 42
          }
        },
        "49": {
          "start": {
            "line": 96,
            "column": 6
          },
          "end": {
            "line": 108,
            "column": 7
          }
        },
        "50": {
          "start": {
            "line": 97,
            "column": 22
          },
          "end": {
            "line": 97,
            "column": 57
          }
        },
        "51": {
          "start": {
            "line": 99,
            "column": 8
          },
          "end": {
            "line": 105,
            "column": 9
          }
        },
        "52": {
          "start": {
            "line": 100,
            "column": 29
          },
          "end": {
            "line": 100,
            "column": 62
          }
        },
        "53": {
          "start": {
            "line": 101,
            "column": 10
          },
          "end": {
            "line": 104,
            "column": 11
          }
        },
        "54": {
          "start": {
            "line": 103,
            "column": 12
          },
          "end": {
            "line": 103,
            "column": 45
          }
        },
        "55": {
          "start": {
            "line": 107,
            "column": 8
          },
          "end": {
            "line": 107,
            "column": 27
          }
        },
        "56": {
          "start": {
            "line": 112,
            "column": 2
          },
          "end": {
            "line": 112,
            "column": 16
          }
        },
        "57": {
          "start": {
            "line": 119,
            "column": 24
          },
          "end": {
            "line": 119,
            "column": 64
          }
        },
        "58": {
          "start": {
            "line": 120,
            "column": 21
          },
          "end": {
            "line": 120,
            "column": 23
          }
        },
        "59": {
          "start": {
            "line": 122,
            "column": 2
          },
          "end": {
            "line": 143,
            "column": 3
          }
        },
        "60": {
          "start": {
            "line": 123,
            "column": 18
          },
          "end": {
            "line": 123,
            "column": 49
          }
        },
        "61": {
          "start": {
            "line": 124,
            "column": 4
          },
          "end": {
            "line": 142,
            "column": 5
          }
        },
        "62": {
          "start": {
            "line": 125,
            "column": 23
          },
          "end": {
            "line": 125,
            "column": 53
          }
        },
        "63": {
          "start": {
            "line": 126,
            "column": 19
          },
          "end": {
            "line": 126,
            "column": 42
          }
        },
        "64": {
          "start": {
            "line": 127,
            "column": 6
          },
          "end": {
            "line": 141,
            "column": 7
          }
        },
        "65": {
          "start": {
            "line": 128,
            "column": 26
          },
          "end": {
            "line": 128,
            "column": 61
          }
        },
        "66": {
          "start": {
            "line": 130,
            "column": 8
          },
          "end": {
            "line": 138,
            "column": 9
          }
        },
        "67": {
          "start": {
            "line": 131,
            "column": 29
          },
          "end": {
            "line": 131,
            "column": 66
          }
        },
        "68": {
          "start": {
            "line": 132,
            "column": 10
          },
          "end": {
            "line": 137,
            "column": 11
          }
        },
        "69": {
          "start": {
            "line": 133,
            "column": 27
          },
          "end": {
            "line": 133,
            "column": 56
          }
        },
        "70": {
          "start": {
            "line": 134,
            "column": 12
          },
          "end": {
            "line": 134,
            "column": 55
          }
        },
        "71": {
          "start": {
            "line": 135,
            "column": 12
          },
          "end": {
            "line": 135,
            "column": 47
          }
        },
        "72": {
          "start": {
            "line": 136,
            "column": 12
          },
          "end": {
            "line": 136,
            "column": 45
          }
        },
        "73": {
          "start": {
            "line": 140,
            "column": 8
          },
          "end": {
            "line": 140,
            "column": 35
          }
        },
        "74": {
          "start": {
            "line": 145,
            "column": 2
          },
          "end": {
            "line": 145,
            "column": 20
          }
        },
        "75": {
          "start": {
            "line": 152,
            "column": 2
          },
          "end": {
            "line": 168,
            "column": 5
          }
        },
        "76": {
          "start": {
            "line": 153,
            "column": 4
          },
          "end": {
            "line": 153,
            "column": 47
          }
        },
        "77": {
          "start": {
            "line": 153,
            "column": 40
          },
          "end": {
            "line": 153,
            "column": 47
          }
        },
        "78": {
          "start": {
            "line": 155,
            "column": 4
          },
          "end": {
            "line": 155,
            "column": 62
          }
        },
        "79": {
          "start": {
            "line": 156,
            "column": 4
          },
          "end": {
            "line": 167,
            "column": 7
          }
        },
        "80": {
          "start": {
            "line": 157,
            "column": 6
          },
          "end": {
            "line": 157,
            "column": 51
          }
        },
        "81": {
          "start": {
            "line": 158,
            "column": 6
          },
          "end": {
            "line": 160,
            "column": 7
          }
        },
        "82": {
          "start": {
            "line": 159,
            "column": 8
          },
          "end": {
            "line": 159,
            "column": 59
          }
        },
        "83": {
          "start": {
            "line": 161,
            "column": 6
          },
          "end": {
            "line": 163,
            "column": 7
          }
        },
        "84": {
          "start": {
            "line": 162,
            "column": 8
          },
          "end": {
            "line": 162,
            "column": 64
          }
        },
        "85": {
          "start": {
            "line": 164,
            "column": 6
          },
          "end": {
            "line": 166,
            "column": 7
          }
        },
        "86": {
          "start": {
            "line": 165,
            "column": 8
          },
          "end": {
            "line": 165,
            "column": 62
          }
        },
        "87": {
          "start": {
            "line": 175,
            "column": 2
          },
          "end": {
            "line": 179,
            "column": 5
          }
        },
        "88": {
          "start": {
            "line": 176,
            "column": 4
          },
          "end": {
            "line": 178,
            "column": 7
          }
        },
        "89": {
          "start": {
            "line": 177,
            "column": 6
          },
          "end": {
            "line": 177,
            "column": 29
          }
        },
        "90": {
          "start": {
            "line": 182,
            "column": 0
          },
          "end": {
            "line": 182,
            "column": 29
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "listCommand",
          "decl": {
            "start": {
              "line": 10,
              "column": 15
            },
            "end": {
              "line": 10,
              "column": 26
            }
          },
          "loc": {
            "start": {
              "line": 10,
              "column": 42
            },
            "end": {
              "line": 50,
              "column": 1
            }
          },
          "line": 10
        },
        "1": {
          "name": "getTemplates",
          "decl": {
            "start": {
              "line": 55,
              "column": 15
            },
            "end": {
              "line": 55,
              "column": 27
            }
          },
          "loc": {
            "start": {
              "line": 55,
              "column": 37
            },
            "end": {
              "line": 82,
              "column": 1
            }
          },
          "line": 55
        },
        "2": {
          "name": "getThemes",
          "decl": {
            "start": {
              "line": 87,
              "column": 15
            },
            "end": {
              "line": 87,
              "column": 24
            }
          },
          "loc": {
            "start": {
              "line": 87,
              "column": 34
            },
            "end": {
              "line": 113,
              "column": 1
            }
          },
          "line": 87
        },
        "3": {
          "name": "getComponents",
          "decl": {
            "start": {
              "line": 118,
              "column": 15
            },
            "end": {
              "line": 118,
              "column": 28
            }
          },
          "loc": {
            "start": {
              "line": 118,
              "column": 38
            },
            "end": {
              "line": 146,
              "column": 1
            }
          },
          "line": 118
        },
        "4": {
          "name": "outputTable",
          "decl": {
            "start": {
              "line": 151,
              "column": 9
            },
            "end": {
              "line": 151,
              "column": 20
            }
          },
          "loc": {
            "start": {
              "line": 151,
              "column": 45
            },
            "end": {
              "line": 169,
              "column": 1
            }
          },
          "line": 151
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": {
            "start": {
              "line": 152,
              "column": 31
            },
            "end": {
              "line": 152,
              "column": 32
            }
          },
          "loc": {
            "start": {
              "line": 152,
              "column": 43
            },
            "end": {
              "line": 168,
              "column": 3
            }
          },
          "line": 152
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": {
            "start": {
              "line": 156,
              "column": 30
            },
            "end": {
              "line": 156,
              "column": 31
            }
          },
          "loc": {
            "start": {
              "line": 156,
              "column": 38
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "line": 156
        },
        "7": {
          "name": "outputPlain",
          "decl": {
            "start": {
              "line": 174,
              "column": 9
            },
            "end": {
              "line": 174,
              "column": 20
            }
          },
          "loc": {
            "start": {
              "line": 174,
              "column": 36
            },
            "end": {
              "line": 180,
              "column": 1
            }
          },
          "line": 174
        },
        "8": {
          "name": "(anonymous_8)",
          "decl": {
            "start": {
              "line": 175,
              "column": 31
            },
            "end": {
              "line": 175,
              "column": 32
            }
          },
          "loc": {
            "start": {
              "line": 175,
              "column": 43
            },
            "end": {
              "line": 179,
              "column": 3
            }
          },
          "line": 175
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": {
            "start": {
              "line": 176,
              "column": 30
            },
            "end": {
              "line": 176,
              "column": 31
            }
          },
          "loc": {
            "start": {
              "line": 176,
              "column": 38
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "line": 176
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 17,
              "column": 4
            },
            "end": {
              "line": 19,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 17,
                "column": 4
              },
              "end": {
                "line": 19,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 17
        },
        "1": {
          "loc": {
            "start": {
              "line": 17,
              "column": 8
            },
            "end": {
              "line": 17,
              "column": 46
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 17,
                "column": 8
              },
              "end": {
                "line": 17,
                "column": 22
              }
            },
            {
              "start": {
                "line": 17,
                "column": 26
              },
              "end": {
                "line": 17,
                "column": 46
              }
            }
          ],
          "line": 17
        },
        "2": {
          "loc": {
            "start": {
              "line": 21,
              "column": 4
            },
            "end": {
              "line": 23,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 21,
                "column": 4
              },
              "end": {
                "line": 23,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 21
        },
        "3": {
          "loc": {
            "start": {
              "line": 21,
              "column": 8
            },
            "end": {
              "line": 21,
              "column": 43
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 21,
                "column": 8
              },
              "end": {
                "line": 21,
                "column": 22
              }
            },
            {
              "start": {
                "line": 21,
                "column": 26
              },
              "end": {
                "line": 21,
                "column": 43
              }
            }
          ],
          "line": 21
        },
        "4": {
          "loc": {
            "start": {
              "line": 25,
              "column": 4
            },
            "end": {
              "line": 27,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 25,
                "column": 4
              },
              "end": {
                "line": 27,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 25
        },
        "5": {
          "loc": {
            "start": {
              "line": 25,
              "column": 8
            },
            "end": {
              "line": 25,
              "column": 47
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 25,
                "column": 8
              },
              "end": {
                "line": 25,
                "column": 22
              }
            },
            {
              "start": {
                "line": 25,
                "column": 26
              },
              "end": {
                "line": 25,
                "column": 47
              }
            }
          ],
          "line": 25
        },
        "6": {
          "loc": {
            "start": {
              "line": 30,
              "column": 4
            },
            "end": {
              "line": 43,
              "column": 5
            }
          },
          "type": "switch",
          "locations": [
            {
              "start": {
                "line": 31,
                "column": 6
              },
              "end": {
                "line": 33,
                "column": 14
              }
            },
            {
              "start": {
                "line": 34,
                "column": 6
              },
              "end": {
                "line": 37,
                "column": 14
              }
            },
            {
              "start": {
                "line": 38,
                "column": 6
              },
              "end": {
                "line": 40,
                "column": 14
              }
            },
            {
              "start": {
                "line": 41,
                "column": 6
              },
              "end": {
                "line": 42,
                "column": 52
              }
            }
          ],
          "line": 30
        },
        "7": {
          "loc": {
            "start": {
              "line": 59,
              "column": 2
            },
            "end": {
              "line": 79,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 59,
                "column": 2
              },
              "end": {
                "line": 79,
                "column": 3
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 59
        },
        "8": {
          "loc": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 64,
                "column": 6
              },
              "end": {
                "line": 77,
                "column": 7
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 64
        },
        "9": {
          "loc": {
            "start": {
              "line": 67,
              "column": 8
            },
            "end": {
              "line": 74,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 67,
                "column": 8
              },
              "end": {
                "line": 74,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 67
        },
        "10": {
          "loc": {
            "start": {
              "line": 69,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 69,
                "column": 10
              },
              "end": {
                "line": 73,
                "column": 11
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 69
        },
        "11": {
          "loc": {
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 91,
                "column": 2
              },
              "end": {
                "line": 110,
                "column": 3
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 91
        },
        "12": {
          "loc": {
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 96,
                "column": 6
              },
              "end": {
                "line": 108,
                "column": 7
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 96
        },
        "13": {
          "loc": {
            "start": {
              "line": 99,
              "column": 8
            },
            "end": {
              "line": 105,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 99,
                "column": 8
              },
              "end": {
                "line": 105,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 99
        },
        "14": {
          "loc": {
            "start": {
              "line": 101,
              "column": 10
            },
            "end": {
              "line": 104,
              "column": 11
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 101,
                "column": 10
              },
              "end": {
                "line": 104,
                "column": 11
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 101
        },
        "15": {
          "loc": {
            "start": {
              "line": 122,
              "column": 2
            },
            "end": {
              "line": 143,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 122,
                "column": 2
              },
              "end": {
                "line": 143,
                "column": 3
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 122
        },
        "16": {
          "loc": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 127,
                "column": 6
              },
              "end": {
                "line": 141,
                "column": 7
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 127
        },
        "17": {
          "loc": {
            "start": {
              "line": 130,
              "column": 8
            },
            "end": {
              "line": 138,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 130,
                "column": 8
              },
              "end": {
                "line": 138,
                "column": 9
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 130
        },
        "18": {
          "loc": {
            "start": {
              "line": 132,
              "column": 10
            },
            "end": {
              "line": 137,
              "column": 11
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 132,
                "column": 10
              },
              "end": {
                "line": 137,
                "column": 11
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 132
        },
        "19": {
          "loc": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 47
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 153,
                "column": 4
              },
              "end": {
                "line": 153,
                "column": 47
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 153
        },
        "20": {
          "loc": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 160,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 158,
                "column": 6
              },
              "end": {
                "line": 160,
                "column": 7
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 158
        },
        "21": {
          "loc": {
            "start": {
              "line": 158,
              "column": 10
            },
            "end": {
              "line": 158,
              "column": 37
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 158,
                "column": 10
              },
              "end": {
                "line": 158,
                "column": 17
              }
            },
            {
              "start": {
                "line": 158,
                "column": 21
              },
              "end": {
                "line": 158,
                "column": 37
              }
            }
          ],
          "line": 158
        },
        "22": {
          "loc": {
            "start": {
              "line": 161,
              "column": 6
            },
            "end": {
              "line": 163,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 161,
                "column": 6
              },
              "end": {
                "line": 163,
                "column": 7
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 161
        },
        "23": {
          "loc": {
            "start": {
              "line": 161,
              "column": 10
            },
            "end": {
              "line": 161,
              "column": 33
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 161,
                "column": 10
              },
              "end": {
                "line": 161,
                "column": 17
              }
            },
            {
              "start": {
                "line": 161,
                "column": 21
              },
              "end": {
                "line": 161,
                "column": 33
              }
            }
          ],
          "line": 161
        },
        "24": {
          "loc": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 164,
                "column": 6
              },
              "end": {
                "line": 166,
                "column": 7
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 164
        },
        "25": {
          "loc": {
            "start": {
              "line": 164,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 63
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 164,
                "column": 10
              },
              "end": {
                "line": 164,
                "column": 17
              }
            },
            {
              "start": {
                "line": 164,
                "column": 21
              },
              "end": {
                "line": 164,
                "column": 32
              }
            },
            {
              "start": {
                "line": 164,
                "column": 36
              },
              "end": {
                "line": 164,
                "column": 63
              }
            }
          ],
          "line": 164
        }
      },
      "s": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0
      },
      "f": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0
      },
      "b": {
        "0": [
          0,
          0
        ],
        "1": [
          0,
          0
        ],
        "2": [
          0,
          0
        ],
        "3": [
          0,
          0
        ],
        "4": [
          0,
          0
        ],
        "5": [
          0,
          0
        ],
        "6": [
          0,
          0,
          0,
          0
        ],
        "7": [
          0,
          0
        ],
        "8": [
          0,
          0
        ],
        "9": [
          0,
          0
        ],
        "10": [
          0,
          0
        ],
        "11": [
          0,
          0
        ],
        "12": [
          0,
          0
        ],
        "13": [
          0,
          0
        ],
        "14": [
          0,
          0
        ],
        "15": [
          0,
          0
        ],
        "16": [
          0,
          0
        ],
        "17": [
          0,
          0
        ],
        "18": [
          0,
          0
        ],
        "19": [
          0,
          0
        ],
        "20": [
          0,
          0
        ],
        "21": [
          0,
          0
        ],
        "22": [
          0,
          0
        ],
        "23": [
          0,
          0
        ],
        "24": [
          0,
          0
        ],
        "25": [
          0,
          0,
          0
        ]
      }
    },
    "/root/info-tech-io/hugo-templates/scripts/commands/validate.js": {
      "path": "/root/info-tech-io/hugo-templates/scripts/commands/validate.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 14
          },
          "end": {
            "line": 1,
            "column": 30
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 11
          },
          "end": {
            "line": 2,
            "column": 30
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 13
          },
          "end": {
            "line": 3,
            "column": 28
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 12
          },
          "end": {
            "line": 4,
            "column": 26
          }
        },
        "4": {
          "start": {
            "line": 12,
            "column": 2
          },
          "end": {
            "line": 12,
            "column": 67
          }
        },
        "5": {
          "start": {
            "line": 13,
            "column": 2
          },
          "end": {
            "line": 13,
            "column": 42
          }
        },
        "6": {
          "start": {
            "line": 15,
            "column": 2
          },
          "end": {
            "line": 59,
            "column": 3
          }
        },
        "7": {
          "start": {
            "line": 16,
            "column": 20
          },
          "end": {
            "line": 20,
            "column": 5
          }
        },
        "8": {
          "start": {
            "line": 22,
            "column": 4
          },
          "end": {
            "line": 24,
            "column": 5
          }
        },
        "9": {
          "start": {
            "line": 23,
            "column": 6
          },
          "end": {
            "line": 23,
            "column": 61
          }
        },
        "10": {
          "start": {
            "line": 26,
            "column": 4
          },
          "end": {
            "line": 28,
            "column": 5
          }
        },
        "11": {
          "start": {
            "line": 27,
            "column": 6
          },
          "end": {
            "line": 27,
            "column": 56
          }
        },
        "12": {
          "start": {
            "line": 30,
            "column": 4
          },
          "end": {
            "line": 32,
            "column": 5
          }
        },
        "13": {
          "start": {
            "line": 31,
            "column": 6
          },
          "end": {
            "line": 31,
            "column": 57
          }
        },
        "14": {
          "start": {
            "line": 35,
            "column": 4
          },
          "end": {
            "line": 42,
            "column": 5
          }
        },
        "15": {
          "start": {
            "line": 36,
            "column": 6
          },
          "end": {
            "line": 36,
            "column": 54
          }
        },
        "16": {
          "start": {
            "line": 38,
            "column": 6
          },
          "end": {
            "line": 38,
            "column": 52
          }
        },
        "17": {
          "start": {
            "line": 39,
            "column": 6
          },
          "end": {
            "line": 41,
            "column": 9
          }
        },
        "18": {
          "start": {
            "line": 40,
            "column": 8
          },
          "end": {
            "line": 40,
            "column": 53
          }
        },
        "19": {
          "start": {
            "line": 44,
            "column": 4
          },
          "end": {
            "line": 49,
            "column": 5
          }
        },
        "20": {
          "start": {
            "line": 45,
            "column": 6
          },
          "end": {
            "line": 45,
            "column": 51
          }
        },
        "21": {
          "start": {
            "line": 46,
            "column": 6
          },
          "end": {
            "line": 48,
            "column": 9
          }
        },
        "22": {
          "start": {
            "line": 47,
            "column": 8
          },
          "end": {
            "line": 47,
            "column": 51
          }
        },
        "23": {
          "start": {
            "line": 51,
            "column": 4
          },
          "end": {
            "line": 53,
            "column": 5
          }
        },
        "24": {
          "start": {
            "line": 52,
            "column": 6
          },
          "end": {
            "line": 52,
            "column": 22
          }
        },
        "25": {
          "start": {
            "line": 56,
            "column": 4
          },
          "end": {
            "line": 56,
            "column": 52
          }
        },
        "26": {
          "start": {
            "line": 57,
            "column": 4
          },
          "end": {
            "line": 57,
            "column": 52
          }
        },
        "27": {
          "start": {
            "line": 58,
            "column": 4
          },
          "end": {
            "line": 58,
            "column": 20
          }
        },
        "28": {
          "start": {
            "line": 66,
            "column": 2
          },
          "end": {
            "line": 66,
            "column": 61
          }
        },
        "29": {
          "start": {
            "line": 69,
            "column": 25
          },
          "end": {
            "line": 69,
            "column": 70
          }
        },
        "30": {
          "start": {
            "line": 70,
            "column": 2
          },
          "end": {
            "line": 80,
            "column": 3
          }
        },
        "31": {
          "start": {
            "line": 71,
            "column": 4
          },
          "end": {
            "line": 77,
            "column": 5
          }
        },
        "32": {
          "start": {
            "line": 72,
            "column": 25
          },
          "end": {
            "line": 72,
            "column": 58
          }
        },
        "33": {
          "start": {
            "line": 73,
            "column": 6
          },
          "end": {
            "line": 73,
            "column": 64
          }
        },
        "34": {
          "start": {
            "line": 75,
            "column": 6
          },
          "end": {
            "line": 75,
            "column": 28
          }
        },
        "35": {
          "start": {
            "line": 76,
            "column": 6
          },
          "end": {
            "line": 76,
            "column": 63
          }
        },
        "36": {
          "start": {
            "line": 79,
            "column": 4
          },
          "end": {
            "line": 79,
            "column": 55
          }
        },
        "37": {
          "start": {
            "line": 83,
            "column": 22
          },
          "end": {
            "line": 83,
            "column": 64
          }
        },
        "38": {
          "start": {
            "line": 84,
            "column": 2
          },
          "end": {
            "line": 97,
            "column": 3
          }
        },
        "39": {
          "start": {
            "line": 85,
            "column": 4
          },
          "end": {
            "line": 96,
            "column": 5
          }
        },
        "40": {
          "start": {
            "line": 86,
            "column": 18
          },
          "end": {
            "line": 86,
            "column": 48
          }
        },
        "41": {
          "start": {
            "line": 87,
            "column": 6
          },
          "end": {
            "line": 92,
            "column": 7
          }
        },
        "42": {
          "start": {
            "line": 88,
            "column": 8
          },
          "end": {
            "line": 88,
            "column": 30
          }
        },
        "43": {
          "start": {
            "line": 89,
            "column": 8
          },
          "end": {
            "line": 89,
            "column": 69
          }
        },
        "44": {
          "start": {
            "line": 91,
            "column": 8
          },
          "end": {
            "line": 91,
            "column": 63
          }
        },
        "45": {
          "start": {
            "line": 94,
            "column": 6
          },
          "end": {
            "line": 94,
            "column": 28
          }
        },
        "46": {
          "start": {
            "line": 95,
            "column": 6
          },
          "end": {
            "line": 95,
            "column": 60
          }
        },
        "47": {
          "start": {
            "line": 104,
            "column": 2
          },
          "end": {
            "line": 104,
            "column": 56
          }
        },
        "48": {
          "start": {
            "line": 106,
            "column": 23
          },
          "end": {
            "line": 106,
            "column": 62
          }
        },
        "49": {
          "start": {
            "line": 107,
            "column": 2
          },
          "end": {
            "line": 110,
            "column": 3
          }
        },
        "50": {
          "start": {
            "line": 108,
            "column": 4
          },
          "end": {
            "line": 108,
            "column": 59
          }
        },
        "51": {
          "start": {
            "line": 109,
            "column": 4
          },
          "end": {
            "line": 109,
            "column": 11
          }
        },
        "52": {
          "start": {
            "line": 112,
            "column": 20
          },
          "end": {
            "line": 112,
            "column": 50
          }
        },
        "53": {
          "start": {
            "line": 113,
            "column": 2
          },
          "end": {
            "line": 120,
            "column": 3
          }
        },
        "54": {
          "start": {
            "line": 114,
            "column": 25
          },
          "end": {
            "line": 114,
            "column": 58
          }
        },
        "55": {
          "start": {
            "line": 115,
            "column": 17
          },
          "end": {
            "line": 115,
            "column": 44
          }
        },
        "56": {
          "start": {
            "line": 117,
            "column": 4
          },
          "end": {
            "line": 119,
            "column": 5
          }
        },
        "57": {
          "start": {
            "line": 118,
            "column": 6
          },
          "end": {
            "line": 118,
            "column": 71
          }
        },
        "58": {
          "start": {
            "line": 128,
            "column": 21
          },
          "end": {
            "line": 128,
            "column": 61
          }
        },
        "59": {
          "start": {
            "line": 129,
            "column": 2
          },
          "end": {
            "line": 155,
            "column": 3
          }
        },
        "60": {
          "start": {
            "line": 130,
            "column": 4
          },
          "end": {
            "line": 152,
            "column": 5
          }
        },
        "61": {
          "start": {
            "line": 131,
            "column": 21
          },
          "end": {
            "line": 131,
            "column": 50
          }
        },
        "62": {
          "start": {
            "line": 134,
            "column": 25
          },
          "end": {
            "line": 134,
            "column": 76
          }
        },
        "63": {
          "start": {
            "line": 135,
            "column": 6
          },
          "end": {
            "line": 148,
            "column": 7
          }
        },
        "64": {
          "start": {
            "line": 136,
            "column": 23
          },
          "end": {
            "line": 136,
            "column": 52
          }
        },
        "65": {
          "start": {
            "line": 137,
            "column": 20
          },
          "end": {
            "line": 137,
            "column": 48
          }
        },
        "66": {
          "start": {
            "line": 138,
            "column": 25
          },
          "end": {
            "line": 138,
            "column": 44
          }
        },
        "67": {
          "start": {
            "line": 140,
            "column": 8
          },
          "end": {
            "line": 147,
            "column": 9
          }
        },
        "68": {
          "start": {
            "line": 141,
            "column": 10
          },
          "end": {
            "line": 141,
            "column": 32
          }
        },
        "69": {
          "start": {
            "line": 142,
            "column": 10
          },
          "end": {
            "line": 144,
            "column": 13
          }
        },
        "70": {
          "start": {
            "line": 143,
            "column": 12
          },
          "end": {
            "line": 143,
            "column": 92
          }
        },
        "71": {
          "start": {
            "line": 146,
            "column": 10
          },
          "end": {
            "line": 146,
            "column": 69
          }
        },
        "72": {
          "start": {
            "line": 150,
            "column": 6
          },
          "end": {
            "line": 150,
            "column": 28
          }
        },
        "73": {
          "start": {
            "line": 151,
            "column": 6
          },
          "end": {
            "line": 151,
            "column": 64
          }
        },
        "74": {
          "start": {
            "line": 154,
            "column": 4
          },
          "end": {
            "line": 154,
            "column": 70
          }
        },
        "75": {
          "start": {
            "line": 162,
            "column": 2
          },
          "end": {
            "line": 162,
            "column": 57
          }
        },
        "76": {
          "start": {
            "line": 164,
            "column": 24
          },
          "end": {
            "line": 164,
            "column": 64
          }
        },
        "77": {
          "start": {
            "line": 165,
            "column": 2
          },
          "end": {
            "line": 168,
            "column": 3
          }
        },
        "78": {
          "start": {
            "line": 166,
            "column": 4
          },
          "end": {
            "line": 166,
            "column": 60
          }
        },
        "79": {
          "start": {
            "line": 167,
            "column": 4
          },
          "end": {
            "line": 167,
            "column": 11
          }
        },
        "80": {
          "start": {
            "line": 170,
            "column": 21
          },
          "end": {
            "line": 170,
            "column": 52
          }
        },
        "81": {
          "start": {
            "line": 171,
            "column": 2
          },
          "end": {
            "line": 178,
            "column": 3
          }
        },
        "82": {
          "start": {
            "line": 172,
            "column": 26
          },
          "end": {
            "line": 172,
            "column": 61
          }
        },
        "83": {
          "start": {
            "line": 173,
            "column": 17
          },
          "end": {
            "line": 173,
            "column": 45
          }
        },
        "84": {
          "start": {
            "line": 175,
            "column": 4
          },
          "end": {
            "line": 177,
            "column": 5
          }
        },
        "85": {
          "start": {
            "line": 176,
            "column": 6
          },
          "end": {
            "line": 176,
            "column": 74
          }
        },
        "86": {
          "start": {
            "line": 185,
            "column": 21
          },
          "end": {
            "line": 185,
            "column": 63
          }
        },
        "87": {
          "start": {
            "line": 186,
            "column": 2
          },
          "end": {
            "line": 212,
            "column": 3
          }
        },
        "88": {
          "start": {
            "line": 187,
            "column": 4
          },
          "end": {
            "line": 209,
            "column": 5
          }
        },
        "89": {
          "start": {
            "line": 188,
            "column": 21
          },
          "end": {
            "line": 188,
            "column": 50
          }
        },
        "90": {
          "start": {
            "line": 191,
            "column": 25
          },
          "end": {
            "line": 191,
            "column": 77
          }
        },
        "91": {
          "start": {
            "line": 192,
            "column": 6
          },
          "end": {
            "line": 205,
            "column": 7
          }
        },
        "92": {
          "start": {
            "line": 193,
            "column": 23
          },
          "end": {
            "line": 193,
            "column": 52
          }
        },
        "93": {
          "start": {
            "line": 194,
            "column": 20
          },
          "end": {
            "line": 194,
            "column": 48
          }
        },
        "94": {
          "start": {
            "line": 195,
            "column": 25
          },
          "end": {
            "line": 195,
            "column": 44
          }
        },
        "95": {
          "start": {
            "line": 197,
            "column": 8
          },
          "end": {
            "line": 204,
            "column": 9
          }
        },
        "96": {
          "start": {
            "line": 198,
            "column": 10
          },
          "end": {
            "line": 198,
            "column": 32
          }
        },
        "97": {
          "start": {
            "line": 199,
            "column": 10
          },
          "end": {
            "line": 201,
            "column": 13
          }
        },
        "98": {
          "start": {
            "line": 200,
            "column": 12
          },
          "end": {
            "line": 200,
            "column": 93
          }
        },
        "99": {
          "start": {
            "line": 203,
            "column": 10
          },
          "end": {
            "line": 203,
            "column": 70
          }
        },
        "100": {
          "start": {
            "line": 207,
            "column": 6
          },
          "end": {
            "line": 207,
            "column": 28
          }
        },
        "101": {
          "start": {
            "line": 208,
            "column": 6
          },
          "end": {
            "line": 208,
            "column": 65
          }
        },
        "102": {
          "start": {
            "line": 211,
            "column": 4
          },
          "end": {
            "line": 211,
            "column": 72
          }
        },
        "103": {
          "start": {
            "line": 215,
            "column": 0
          },
          "end": {
            "line": 215,
            "column": 33
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "validateCommand",
          "decl": {
            "start": {
              "line": 11,
              "column": 15
            },
            "end": {
              "line": 11,
              "column": 30
            }
          },
          "loc": {
            "start": {
              "line": 11,
              "column": 48
            },
            "end": {
              "line": 60,
              "column": 1
            }
          },
          "line": 11
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 39,
              "column": 29
            },
            "end": {
              "line": 39,
              "column": 30
            }
          },
          "loc": {
            "start": {
              "line": 39,
              "column": 38
            },
            "end": {
              "line": 41,
              "column": 7
            }
          },
          "line": 39
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 46,
              "column": 31
            },
            "end": {
              "line": 46,
              "column": 32
            }
          },
          "loc": {
            "start": {
              "line": 46,
              "column": 42
            },
            "end": {
              "line": 48,
              "column": 7
            }
          },
          "line": 46
        },
        "3": {
          "name": "validateConfigurations",
          "decl": {
            "start": {
              "line": 65,
              "column": 15
            },
            "end": {
              "line": 65,
              "column": 37
            }
          },
          "loc": {
            "start": {
              "line": 65,
              "column": 64
            },
            "end": {
              "line": 98,
              "column": 1
            }
          },
          "line": 65
        },
        "4": {
          "name": "validateTemplates",
          "decl": {
            "start": {
              "line": 103,
              "column": 15
            },
            "end": {
              "line": 103,
              "column": 32
            }
          },
          "loc": {
            "start": {
              "line": 103,
              "column": 59
            },
            "end": {
              "line": 121,
              "column": 1
            }
          },
          "line": 103
        },
        "5": {
          "name": "validateTemplate",
          "decl": {
            "start": {
              "line": 126,
              "column": 15
            },
            "end": {
              "line": 126,
              "column": 31
            }
          },
          "loc": {
            "start": {
              "line": 126,
              "column": 70
            },
            "end": {
              "line": 156,
              "column": 1
            }
          },
          "line": 126
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": {
            "start": {
              "line": 142,
              "column": 34
            },
            "end": {
              "line": 142,
              "column": 35
            }
          },
          "loc": {
            "start": {
              "line": 142,
              "column": 43
            },
            "end": {
              "line": 144,
              "column": 11
            }
          },
          "line": 142
        },
        "7": {
          "name": "validateComponents",
          "decl": {
            "start": {
              "line": 161,
              "column": 15
            },
            "end": {
              "line": 161,
              "column": 33
            }
          },
          "loc": {
            "start": {
              "line": 161,
              "column": 60
            },
            "end": {
              "line": 179,
              "column": 1
            }
          },
          "line": 161
        },
        "8": {
          "name": "validateComponent",
          "decl": {
            "start": {
              "line": 184,
              "column": 15
            },
            "end": {
              "line": 184,
              "column": 32
            }
          },
          "loc": {
            "start": {
              "line": 184,
              "column": 72
            },
            "end": {
              "line": 213,
              "column": 1
            }
          },
          "line": 184
        },
        "9": {
          "name": "(anonymous_9)",
          "decl": {
            "start": {
              "line": 199,
              "column": 34
            },
            "end": {
              "line": 199,
              "column": 35
            }
          },
          "loc": {
            "start": {
              "line": 199,
              "column": 43
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "line": 199
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 22,
              "column": 4
            },
            "end": {
              "line": 24,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 22,
                "column": 4
              },
              "end": {
                "line": 24,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 22
        },
        "1": {
          "loc": {
            "start": {
              "line": 22,
              "column": 8
            },
            "end": {
              "line": 22,
              "column": 59
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 22,
                "column": 8
              },
              "end": {
                "line": 22,
                "column": 30
              }
            },
            {
              "start": {
                "line": 22,
                "column": 34
              },
              "end": {
                "line": 22,
                "column": 59
              }
            }
          ],
          "line": 22
        },
        "2": {
          "loc": {
            "start": {
              "line": 26,
              "column": 4
            },
            "end": {
              "line": 28,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 26,
                "column": 4
              },
              "end": {
                "line": 28,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 26
        },
        "3": {
          "loc": {
            "start": {
              "line": 26,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 61
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 26,
                "column": 8
              },
              "end": {
                "line": 26,
                "column": 30
              }
            },
            {
              "start": {
                "line": 26,
                "column": 34
              },
              "end": {
                "line": 26,
                "column": 61
              }
            }
          ],
          "line": 26
        },
        "4": {
          "loc": {
            "start": {
              "line": 30,
              "column": 4
            },
            "end": {
              "line": 32,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 30,
                "column": 4
              },
              "end": {
                "line": 32,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 30
        },
        "5": {
          "loc": {
            "start": {
              "line": 30,
              "column": 8
            },
            "end": {
              "line": 30,
              "column": 62
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 30,
                "column": 8
              },
              "end": {
                "line": 30,
                "column": 30
              }
            },
            {
              "start": {
                "line": 30,
                "column": 34
              },
              "end": {
                "line": 30,
                "column": 62
              }
            }
          ],
          "line": 30
        },
        "6": {
          "loc": {
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 42,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 35,
                "column": 4
              },
              "end": {
                "line": 42,
                "column": 5
              }
            },
            {
              "start": {
                "line": 37,
                "column": 11
              },
              "end": {
                "line": 42,
                "column": 5
              }
            }
          ],
          "line": 35
        },
        "7": {
          "loc": {
            "start": {
              "line": 44,
              "column": 4
            },
            "end": {
              "line": 49,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 44,
                "column": 4
              },
              "end": {
                "line": 49,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 44
        },
        "8": {
          "loc": {
            "start": {
              "line": 51,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 51,
                "column": 4
              },
              "end": {
                "line": 53,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 51
        },
        "9": {
          "loc": {
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 80,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 70,
                "column": 2
              },
              "end": {
                "line": 80,
                "column": 3
              }
            },
            {
              "start": {
                "line": 78,
                "column": 9
              },
              "end": {
                "line": 80,
                "column": 3
              }
            }
          ],
          "line": 70
        },
        "10": {
          "loc": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 97,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 84,
                "column": 2
              },
              "end": {
                "line": 97,
                "column": 3
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 84
        },
        "11": {
          "loc": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 87,
                "column": 6
              },
              "end": {
                "line": 92,
                "column": 7
              }
            },
            {
              "start": {
                "line": 90,
                "column": 13
              },
              "end": {
                "line": 92,
                "column": 7
              }
            }
          ],
          "line": 87
        },
        "12": {
          "loc": {
            "start": {
              "line": 87,
              "column": 10
            },
            "end": {
              "line": 87,
              "column": 35
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 87,
                "column": 10
              },
              "end": {
                "line": 87,
                "column": 19
              }
            },
            {
              "start": {
                "line": 87,
                "column": 23
              },
              "end": {
                "line": 87,
                "column": 35
              }
            }
          ],
          "line": 87
        },
        "13": {
          "loc": {
            "start": {
              "line": 107,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 107,
                "column": 2
              },
              "end": {
                "line": 110,
                "column": 3
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 107
        },
        "14": {
          "loc": {
            "start": {
              "line": 117,
              "column": 4
            },
            "end": {
              "line": 119,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 117,
                "column": 4
              },
              "end": {
                "line": 119,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 117
        },
        "15": {
          "loc": {
            "start": {
              "line": 129,
              "column": 2
            },
            "end": {
              "line": 155,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 129,
                "column": 2
              },
              "end": {
                "line": 155,
                "column": 3
              }
            },
            {
              "start": {
                "line": 153,
                "column": 9
              },
              "end": {
                "line": 155,
                "column": 3
              }
            }
          ],
          "line": 129
        },
        "16": {
          "loc": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 135,
                "column": 6
              },
              "end": {
                "line": 148,
                "column": 7
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 135
        },
        "17": {
          "loc": {
            "start": {
              "line": 140,
              "column": 8
            },
            "end": {
              "line": 147,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 140,
                "column": 8
              },
              "end": {
                "line": 147,
                "column": 9
              }
            },
            {
              "start": {
                "line": 145,
                "column": 15
              },
              "end": {
                "line": 147,
                "column": 9
              }
            }
          ],
          "line": 140
        },
        "18": {
          "loc": {
            "start": {
              "line": 165,
              "column": 2
            },
            "end": {
              "line": 168,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 165,
                "column": 2
              },
              "end": {
                "line": 168,
                "column": 3
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 165
        },
        "19": {
          "loc": {
            "start": {
              "line": 175,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 175,
                "column": 4
              },
              "end": {
                "line": 177,
                "column": 5
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 175
        },
        "20": {
          "loc": {
            "start": {
              "line": 186,
              "column": 2
            },
            "end": {
              "line": 212,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 186,
                "column": 2
              },
              "end": {
                "line": 212,
                "column": 3
              }
            },
            {
              "start": {
                "line": 210,
                "column": 9
              },
              "end": {
                "line": 212,
                "column": 3
              }
            }
          ],
          "line": 186
        },
        "21": {
          "loc": {
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 192,
                "column": 6
              },
              "end": {
                "line": 205,
                "column": 7
              }
            },
            {
              "start": {},
              "end": {}
            }
          ],
          "line": 192
        },
        "22": {
          "loc": {
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 204,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 197,
                "column": 8
              },
              "end": {
                "line": 204,
                "column": 9
              }
            },
            {
              "start": {
                "line": 202,
                "column": 15
              },
              "end": {
                "line": 204,
                "column": 9
              }
            }
          ],
          "line": 197
        }
      },
      "s": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 0
      },
      "f": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0
      },
      "b": {
        "0": [
          0,
          0
        ],
        "1": [
          0,
          0
        ],
        "2": [
          0,
          0
        ],
        "3": [
          0,
          0
        ],
        "4": [
          0,
          0
        ],
        "5": [
          0,
          0
        ],
        "6": [
          0,
          0
        ],
        "7": [
          0,
          0
        ],
        "8": [
          0,
          0
        ],
        "9": [
          0,
          0
        ],
        "10": [
          0,
          0
        ],
        "11": [
          0,
          0
        ],
        "12": [
          0,
          0
        ],
        "13": [
          0,
          0
        ],
        "14": [
          0,
          0
        ],
        "15": [
          0,
          0
        ],
        "16": [
          0,
          0
        ],
        "17": [
          0,
          0
        ],
        "18": [
          0,
          0
        ],
        "19": [
          0,
          0
        ],
        "20": [
          0,
          0
        ],
        "21": [
          0,
          0
        ],
        "22": [
          0,
          0
        ]
      }
    }
  },
  "timestamp": "2025-09-20T19:49:45.908Z",
  "environment": {
    "nodeVersion": "v23.11.1",
    "platform": "linux",
    "arch": "x64",
    "ci": false,
    "github": false
  },
  "summary": {
    "totalTests": 138,
    "passedTests": 83,
    "failedTests": 55,
    "skippedTests": 0,
    "totalTestSuites": 8,
    "passedTestSuites": 0,
    "failedTestSuites": 8,
    "testDuration": 26483,
    "coverageThresholdMet": true
  },
  "performance": {
    "slowestTests": [
      {
        "name": "Performance Benchmarking Scalability Benchmarks should benchmark repeated operations",
        "file": "/root/info-tech-io/hugo-templates/tests/performance/benchmark.test.js",
        "duration": 2553
      },
      {
        "name": "CLI Workflow Integration Performance workflow testing should handle concurrent CLI operations",
        "file": "/root/info-tech-io/hugo-templates/tests/integration/cli-workflow.test.js",
        "duration": 1456
      },
      {
        "name": "Performance Benchmarking Memory Usage Benchmarks should monitor memory efficiency of CLI tools",
        "file": "/root/info-tech-io/hugo-templates/tests/performance/benchmark.test.js",
        "duration": 1217
      },
      {
        "name": "CLI Components diagnostic.js system should run system diagnostics",
        "file": "/root/info-tech-io/hugo-templates/tests/unit/cli.test.js",
        "duration": 1144
      },
      {
        "name": "Validation System Build validation should detect invalid combinations",
        "file": "/root/info-tech-io/hugo-templates/tests/unit/validation.test.js",
        "duration": 1090
      }
    ],
    "fastestTests": [
      {
        "name": "CLI Components diagnostic.js system should exist and be executable",
        "file": "/root/info-tech-io/hugo-templates/tests/unit/cli.test.js",
        "duration": 1
      },
      {
        "name": "Components System Quiz Engine component should have valid component configuration",
        "file": "/root/info-tech-io/hugo-templates/tests/unit/components.test.js",
        "duration": 1
      },
      {
        "name": "Template System Template structure default template should have static directory if needed",
        "file": "/root/info-tech-io/hugo-templates/tests/unit/templates.test.js",
        "duration": 1
      },
      {
        "name": "Template System Template structure minimal template should have content directory",
        "file": "/root/info-tech-io/hugo-templates/tests/unit/templates.test.js",
        "duration": 1
      },
      {
        "name": "Template System Theme integration compose theme should have required structure",
        "file": "/root/info-tech-io/hugo-templates/tests/unit/templates.test.js",
        "duration": 1
      }
    ],
    "averageTestDuration": 165.231884057971
  },
  "categories": {
    "unit": {
      "passed": 70,
      "failed": 22,
      "total": 92
    },
    "integration": {
      "passed": 4,
      "failed": 26,
      "total": 30
    },
    "performance": {
      "passed": 9,
      "failed": 7,
      "total": 16
    }
  }
}